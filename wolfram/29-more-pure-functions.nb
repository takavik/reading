(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* Created By: SaveReadableNotebook *)
(* https://resources.wolframcloud.com/FunctionRepository/resources/SaveReadableNotebook *)

Notebook[
 {
  Cell[
   TextData[
    {
     Cell[
      BoxData[
       GraphicsBox[
        TagBox[
         RasterBox[
          CompressedData[
           "\n1:eJyNVUloFEEUfRp3ROKKSkQibqA3UTyJHkRFDxKNelAxIYseEuPM9BImMiIK\nKriiiAQUXAi45CKKoiCC8aI3RTEKmpjFycxkEhQMURzfr1QPPc10Txqqqfr1\n69Vf3v9VWnm4rGYsgPAk/soqrA2hUEXjjmIuyuvDh2rrq6u21Eeqa6tDayuL\nKCzhmMUxDqP7+g1sS5rYOUr1wC8Tw1hivUsa+MT5aE1QXzqK0n4Tp3rDmJO1\nzcL+lImMGgaqHHnnEcxIWDiWMLDMD09w9LnfqQguCD5t++bg9UfwfcDGIvp/\nmutfIiPefF/fgDE8/zdrT57B/X/udaYG44N8pk6v62wnbTqasrGZ602c25R9\nce0nCsVQYq91b3bHMGXQxlL6X8NxMBXGyvY6TOT8ssb86D2fsLGKZxsSJu5z\nP66xHkouOb/k9Y9YN96XY4Lcp2VdzH2Lus/ECsqbPfEZ6mvAPMlzQAyvpWMo\nJs5AjtzAHX3Xa1cO70nOKBsOyonEQXCzcgtvyKHJ4nM8grmUdSvdCOqSFg4E\n5ViPELm5V89/ELvEHcfsno3d3IsWwqMPZ5MhbFQ+GdjnxuqyMTPLW4lrBLWF\n8IQ7zPcufeZzh43pisPkI9cvXPm7PmhgSUH7bKzmvedc9j7JlKPIxSUnRwMq\ndxZuB+TjkcTezX1ls4kziTDWE6OJ62dOTfLeK/EYpnL+NA/WK4kP5ycdftGm\nlxwnpI5y6neEw+3azibpVX0Wtiq/LFxMmyhT/Us4IDw38EH4VqB+4y7f2yTm\nqo9FsTBtYLv2w4l1TxCWtq8Q79yx/hOEJ3WmYzIsMef956WHuDB6ub5Kvj12\n+prE0g8vEcJy5ugu9VpVTx2x4ZYLr1X7+VP3j1b218WB8fPwh7l4TswO1fcM\nvM3hoIXjQVjS23gu7eFHs6pn1iE5+8Cz1yn59rUtjD3emJMv6+SMvAU6v7k5\nYQ374nn4Sz+/Co6zL7VJWdKj05IXK4oF3l6cLz5SOx6fh6Q+vXryVkrt6fpr\nE13pC149nl/j1L+jL2+xn8/y9TRitrwPfvvCqWQM0/Lt/QeYkzQu\n     "
          ],
          {{0, 28.0}, {20.0, 0}},
          {0, 255},
          ColorFunction -> RGBColor,
          ImageResolution -> {72.0, 72.0},
          SmoothingQuality -> "High"
         ],
         BoxForm`ImageTag[
          "Byte",
          ColorSpace -> "RGB",
          Interleaving -> True
         ],
         Selectable -> False
        ],
        DefaultBaseStyle -> "ImageGraphics",
        ImageSize -> Automatic,
        ImageSizeRaw -> {20.0, 28.0},
        PlotRange -> {{0, 20.0}, {0, 28.0}}
       ]
      ]
     ],
     "  Badges indicate graded exercises for certification"
    }
   ],
   "SmallText",
   Editable -> False,
   Selectable -> False,
   Deletable -> False,
   CellMargins -> {{20, 10}, {12, 6}}
  ],
  Cell[
   "Use Prime and Array to generate a list of the first 100 primes.",
   "Exercise",
   CellDingbat ->
    Cell[
     BoxData[
      PaneBox[
       TemplateBox[
        {
         TemplateBox[{0}, "Spacer1"],
         StyleBox[
          "\"29.1\"",
          "ExerciseNumberColor",
          ShowStringCharacters -> False,
          StripOnInput -> False
         ]
        },
        "RowWithSeparator"
       ],
       Alignment -> Right,
       ContentPadding -> False,
       FrameMargins -> False,
       ImageSizeAction -> "Crop",
       ImageSize -> {80, Automatic}
      ]
     ],
     ShowStringCharacters -> False
    ],
   ShowCellLabel -> False,
   CounterAssignments -> {
    {"ChapterNumber", 0},
    {"SectionNumber", 29},
    {"ExerciseNumber", 1},
    {"WebOnly", 0}
   }
  ],
  Cell[
   BoxData[
    TagBox[
     ButtonBox[
      StyleBox[
       RowBox[
        {
         RowBox[{"EXPECTED", " ", "OUTPUT"}],
         " ",
         "\[RightGuillemet]"
        }
       ],
       FontFamily -> "Source Sans Pro",
       FontSize -> 12,
       FontColor -> GrayLevel[0.6]
      ],
      Appearance -> None,
      ButtonFunction :>
       (
       SelectionMove[
        ButtonNotebook[],
        All,
        ButtonCell,
        AutoScroll -> False
       ];

       FrontEndExecute[
        FrontEndToken[ButtonNotebook[], "OpenCloseGroup"]
       ]),
      Evaluator -> Automatic,
      Method -> "Preemptive"
     ],
     MouseAppearanceTag["LinkHand"]
    ]
   ],
   "ExerciseExpectedResult",
   Editable -> False,
   Deletable -> False,
   ShowCellBracket -> False,
   CellTags -> "expected-output-heading"
  ],
  Cell[
   BoxData[
    RowBox[
     {
      "Array",
      "[",
      RowBox[
       {
        RowBox[{RowBox[{"Prime", "[", "#", "]"}], " ", "&"}],
        ",",
        " ",
        "100"
       }
      ],
      "]"
     }
    ]
   ],
   "Input"
  ],
  Cell[
   BoxData[
    StyleBox[
     DynamicBox[
      ToBoxes[SolutionResponseText["x"], StandardForm],
      ImageSizeCache -> {123.95, {3.0, 9.0}}
     ],
     "SolutionResponseText"
    ]
   ],
   "Subsection",
   Editable -> False,
   Selectable -> False,
   Deletable -> False,
   ShowCellBracket -> False,
   CellMargins -> {{24, 25}, {3, 0}},
   CellFrameMargins -> {{8, 0}, {0, 0}},
   TextAlignment -> Right,
   ShowStringCharacters -> False,
   FontFamily -> "Source Sans Pro",
   FontSize -> 12,
   FontWeight -> "Plain",
   FontSlant -> "Plain",
   Background -> GrayLevel[1]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[PaneBox["\[ThickSpace]", ImageSize -> Full]],
      "CodeSectionDividerCloud",
      Editable -> False,
      Selectable -> False,
      Deletable -> False,
      CellMargins -> {{0, 0}, {0, 30}},
      CellBracketOptions -> {"OverlapContent" -> True}
     ],
     Cell[
      "Use Prime and Array to find successive differences between the first 100 primes.",
      "Exercise",
      CellDingbat ->
       Cell[
        BoxData[
         PaneBox[
          TemplateBox[
           {
            TemplateBox[{0}, "Spacer1"],
            GraphicsBox[
             TagBox[
              RasterBox[
               CompressedData[
                "\n1:eJyNVUloFEEUfRp3ROKKSkQibqA3UTyJHkRFDxKNelAxIYseEuPM9BImMiIK\nKriiiAQUXAi45CKKoiCC8aI3RTEKmpjFycxkEhQMURzfr1QPPc10Txqqqfr1\n69Vf3v9VWnm4rGYsgPAk/soqrA2hUEXjjmIuyuvDh2rrq6u21Eeqa6tDayuL\nKCzhmMUxDqP7+g1sS5rYOUr1wC8Tw1hivUsa+MT5aE1QXzqK0n4Tp3rDmJO1\nzcL+lImMGgaqHHnnEcxIWDiWMLDMD09w9LnfqQguCD5t++bg9UfwfcDGIvp/\nmutfIiPefF/fgDE8/zdrT57B/X/udaYG44N8pk6v62wnbTqasrGZ602c25R9\nce0nCsVQYq91b3bHMGXQxlL6X8NxMBXGyvY6TOT8ssb86D2fsLGKZxsSJu5z\nP66xHkouOb/k9Y9YN96XY4Lcp2VdzH2Lus/ECsqbPfEZ6mvAPMlzQAyvpWMo\nJs5AjtzAHX3Xa1cO70nOKBsOyonEQXCzcgtvyKHJ4nM8grmUdSvdCOqSFg4E\n5ViPELm5V89/ELvEHcfsno3d3IsWwqMPZ5MhbFQ+GdjnxuqyMTPLW4lrBLWF\n8IQ7zPcufeZzh43pisPkI9cvXPm7PmhgSUH7bKzmvedc9j7JlKPIxSUnRwMq\ndxZuB+TjkcTezX1ls4kziTDWE6OJ62dOTfLeK/EYpnL+NA/WK4kP5ycdftGm\nlxwnpI5y6neEw+3azibpVX0Wtiq/LFxMmyhT/Us4IDw38EH4VqB+4y7f2yTm\nqo9FsTBtYLv2w4l1TxCWtq8Q79yx/hOEJ3WmYzIsMef956WHuDB6ub5Kvj12\n+prE0g8vEcJy5ugu9VpVTx2x4ZYLr1X7+VP3j1b218WB8fPwh7l4TswO1fcM\nvM3hoIXjQVjS23gu7eFHs6pn1iE5+8Cz1yn59rUtjD3emJMv6+SMvAU6v7k5\nYQ374nn4Sz+/Co6zL7VJWdKj05IXK4oF3l6cLz5SOx6fh6Q+vXryVkrt6fpr\nE13pC149nl/j1L+jL2+xn8/y9TRitrwPfvvCqWQM0/Lt/QeYkzQu\n          "
               ],
               {{0, 28.0}, {20.0, 0}},
               {0, 255},
               ColorFunction -> RGBColor,
               ImageResolution -> {72.0, 72.0}
              ],
              BoxForm`ImageTag[
               "Byte",
               ColorSpace -> "RGB",
               Interleaving -> True
              ],
              Selectable -> False
             ],
             DefaultBaseStyle -> "ImageGraphics",
             ImageSizeRaw -> {20.0, 28.0},
             PlotRange -> {{0, 20.0}, {0, 28.0}}
            ],
            StyleBox[
             "\"29.2\"",
             "ExerciseNumberColor",
             ShowStringCharacters -> False,
             StripOnInput -> False
            ]
           },
           "RowWithSeparator"
          ],
          Alignment -> Right,
          ContentPadding -> False,
          FrameMargins -> False,
          ImageSizeAction -> "Crop",
          ImageSize -> {80, Automatic}
         ]
        ],
        ShowStringCharacters -> False
       ],
      ShowCellLabel -> False,
      CounterAssignments -> {
       {"ChapterNumber", 0},
       {"SectionNumber", 29},
       {"ExerciseNumber", 2},
       {"WebOnly", 0}
      },
      CellTags -> "Certification"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          TagBox[
           ButtonBox[
            StyleBox[
             RowBox[
              {
               RowBox[{"EXPECTED", " ", "OUTPUT"}],
               " ",
               "\[RightGuillemet]"
              }
             ],
             FontFamily -> "Source Sans Pro",
             FontSize -> 12,
             FontColor -> GrayLevel[0.6]
            ],
            Appearance -> None,
            ButtonFunction :>
             (
             SelectionMove[
              ButtonNotebook[],
              All,
              ButtonCell,
              AutoScroll -> False
             ];

             FrontEndExecute[
              FrontEndToken[ButtonNotebook[], "OpenCloseGroup"]
             ]),
            Evaluator -> Automatic,
            Method -> "Preemptive"
           ],
           MouseAppearanceTag["LinkHand"]
          ]
         ],
         "ExerciseExpectedResult",
         Editable -> False,
         Deletable -> False,
         ShowCellBracket -> False
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "{",
            RowBox[
             {
              "1",
              ",",
              "2",
              ",",
              "2",
              ",",
              "4",
              ",",
              "2",
              ",",
              "4",
              ",",
              "2",
              ",",
              "4",
              ",",
              "6",
              ",",
              "2",
              ",",
              "6",
              ",",
              "4",
              ",",
              "2",
              ",",
              "4",
              ",",
              "6",
              ",",
              "6",
              ",",
              "2",
              ",",
              "6",
              ",",
              "4",
              ",",
              "2",
              ",",
              "6",
              ",",
              "4",
              ",",
              "6",
              ",",
              "8",
              ",",
              "4",
              ",",
              "2",
              ",",
              "4",
              ",",
              "2",
              ",",
              "4",
              ",",
              "14",
              ",",
              "4",
              ",",
              "6",
              ",",
              "2",
              ",",
              "10",
              ",",
              "2",
              ",",
              "6",
              ",",
              "6",
              ",",
              "4",
              ",",
              "6",
              ",",
              "6",
              ",",
              "2",
              ",",
              "10",
              ",",
              "2",
              ",",
              "4",
              ",",
              "2",
              ",",
              "12",
              ",",
              "12",
              ",",
              "4",
              ",",
              "2",
              ",",
              "4",
              ",",
              "6",
              ",",
              "2",
              ",",
              "10",
              ",",
              "6",
              ",",
              "6",
              ",",
              "6",
              ",",
              "2",
              ",",
              "6",
              ",",
              "4",
              ",",
              "2",
              ",",
              "10",
              ",",
              "14",
              ",",
              "4",
              ",",
              "2",
              ",",
              "4",
              ",",
              "14",
              ",",
              "6",
              ",",
              "10",
              ",",
              "2",
              ",",
              "4",
              ",",
              "6",
              ",",
              "8",
              ",",
              "6",
              ",",
              "6",
              ",",
              "4",
              ",",
              "6",
              ",",
              "8",
              ",",
              "4",
              ",",
              "8",
              ",",
              "10",
              ",",
              "2",
              ",",
              "10",
              ",",
              "2",
              ",",
              "6",
              ",",
              "4",
              ",",
              "6",
              ",",
              "8",
              ",",
              "4",
              ",",
              "2",
              ",",
              "4",
              ",",
              "12",
              ",",
              "8",
              ",",
              "4",
              ",",
              "8",
              ",",
              "4",
              ",",
              "6",
              ",",
              "12",
              ",",
              "2",
              ",",
              "18"
             }
            ],
            "}"
           }
          ]
         ],
         "Output",
         CellTags -> "Certification",
         CellLabel -> "Out[166]="
        ]
       },
       {1}
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          StyleBox[
           DynamicBox[
            ToBoxes[SolutionResponseText["x"], StandardForm],
            ImageSizeCache -> {123.95, {3.0, 9.0}}
           ],
           "SolutionResponseText"
          ]
         ],
         "Subsection",
         Editable -> False,
         Selectable -> False,
         Deletable -> False,
         ShowCellBracket -> False,
         CellMargins -> {{24, 25}, {3, 0}},
         CellFrameMargins -> {{8, 0}, {0, 0}},
         TextAlignment -> Right,
         ShowStringCharacters -> False,
         FontFamily -> "Source Sans Pro",
         FontSize -> 12,
         FontWeight -> "Plain",
         FontSlant -> "Plain",
         Background -> GrayLevel[1]
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "Array",
            "[",
            RowBox[
             {
              RowBox[
               {
                RowBox[
                 {
                  RowBox[{"Prime", "[", RowBox[{"#", "+", "1"}], "]"}],
                  " ",
                  "-",
                  " ",
                  RowBox[{"Prime", "[", "#", "]"}]
                 }
                ],
                " ",
                "&"
               }
              ],
              ",",
              " ",
              "100"
             }
            ],
            "]"
           }
          ]
         ],
         "Input"
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[PaneBox["\[ThickSpace]", ImageSize -> Full]],
      "CodeSectionDividerCloud",
      Editable -> False,
      Selectable -> False,
      Deletable -> False,
      CellMargins -> {{0, 0}, {0, 30}},
      CellBracketOptions -> {"OverlapContent" -> True}
     ],
     Cell[
      "Use Array and Grid to make a 10 by 10 addition table.",
      "Exercise",
      CellDingbat ->
       Cell[
        BoxData[
         PaneBox[
          TemplateBox[
           {
            TemplateBox[{0}, "Spacer1"],
            GraphicsBox[
             TagBox[
              RasterBox[
               CompressedData[
                "\n1:eJyNVUloFEEUfRp3ROKKSkQibqA3UTyJHkRFDxKNelAxIYseEuPM9BImMiIK\nKriiiAQUXAi45CKKoiCC8aI3RTEKmpjFycxkEhQMURzfr1QPPc10Txqqqfr1\n69Vf3v9VWnm4rGYsgPAk/soqrA2hUEXjjmIuyuvDh2rrq6u21Eeqa6tDayuL\nKCzhmMUxDqP7+g1sS5rYOUr1wC8Tw1hivUsa+MT5aE1QXzqK0n4Tp3rDmJO1\nzcL+lImMGgaqHHnnEcxIWDiWMLDMD09w9LnfqQguCD5t++bg9UfwfcDGIvp/\nmutfIiPefF/fgDE8/zdrT57B/X/udaYG44N8pk6v62wnbTqasrGZ602c25R9\nce0nCsVQYq91b3bHMGXQxlL6X8NxMBXGyvY6TOT8ssb86D2fsLGKZxsSJu5z\nP66xHkouOb/k9Y9YN96XY4Lcp2VdzH2Lus/ECsqbPfEZ6mvAPMlzQAyvpWMo\nJs5AjtzAHX3Xa1cO70nOKBsOyonEQXCzcgtvyKHJ4nM8grmUdSvdCOqSFg4E\n5ViPELm5V89/ELvEHcfsno3d3IsWwqMPZ5MhbFQ+GdjnxuqyMTPLW4lrBLWF\n8IQ7zPcufeZzh43pisPkI9cvXPm7PmhgSUH7bKzmvedc9j7JlKPIxSUnRwMq\ndxZuB+TjkcTezX1ls4kziTDWE6OJ62dOTfLeK/EYpnL+NA/WK4kP5ycdftGm\nlxwnpI5y6neEw+3azibpVX0Wtiq/LFxMmyhT/Us4IDw38EH4VqB+4y7f2yTm\nqo9FsTBtYLv2w4l1TxCWtq8Q79yx/hOEJ3WmYzIsMef956WHuDB6ub5Kvj12\n+prE0g8vEcJy5ugu9VpVTx2x4ZYLr1X7+VP3j1b218WB8fPwh7l4TswO1fcM\nvM3hoIXjQVjS23gu7eFHs6pn1iE5+8Cz1yn59rUtjD3emJMv6+SMvAU6v7k5\nYQ374nn4Sz+/Co6zL7VJWdKj05IXK4oF3l6cLz5SOx6fh6Q+vXryVkrt6fpr\nE13pC149nl/j1L+jL2+xn8/y9TRitrwPfvvCqWQM0/Lt/QeYkzQu\n          "
               ],
               {{0, 28.0}, {20.0, 0}},
               {0, 255},
               ColorFunction -> RGBColor,
               ImageResolution -> {72.0, 72.0}
              ],
              BoxForm`ImageTag[
               "Byte",
               ColorSpace -> "RGB",
               Interleaving -> True
              ],
              Selectable -> False
             ],
             DefaultBaseStyle -> "ImageGraphics",
             ImageSizeRaw -> {20.0, 28.0},
             PlotRange -> {{0, 20.0}, {0, 28.0}}
            ],
            StyleBox[
             "\"29.3\"",
             "ExerciseNumberColor",
             ShowStringCharacters -> False,
             StripOnInput -> False
            ]
           },
           "RowWithSeparator"
          ],
          Alignment -> Right,
          ContentPadding -> False,
          FrameMargins -> False,
          ImageSizeAction -> "Crop",
          ImageSize -> {80, Automatic}
         ]
        ],
        ShowStringCharacters -> False
       ],
      ShowCellLabel -> False,
      CounterAssignments -> {
       {"ChapterNumber", 0},
       {"SectionNumber", 29},
       {"ExerciseNumber", 3},
       {"WebOnly", 0}
      },
      CellTags -> "Certification"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          TagBox[
           ButtonBox[
            StyleBox[
             RowBox[
              {
               RowBox[{"EXPECTED", " ", "OUTPUT"}],
               " ",
               "\[RightGuillemet]"
              }
             ],
             FontFamily -> "Source Sans Pro",
             FontSize -> 12,
             FontColor -> GrayLevel[0.6]
            ],
            Appearance -> None,
            ButtonFunction :>
             (
             SelectionMove[
              ButtonNotebook[],
              All,
              ButtonCell,
              AutoScroll -> False
             ];

             FrontEndExecute[
              FrontEndToken[ButtonNotebook[], "OpenCloseGroup"]
             ]),
            Evaluator -> Automatic,
            Method -> "Preemptive"
           ],
           MouseAppearanceTag["LinkHand"]
          ]
         ],
         "ExerciseExpectedResult",
         Editable -> False,
         Deletable -> False,
         ShowCellBracket -> False
        ],
        Cell[
         BoxData[
          TagBox[
           GridBox[
            {
             {"2", "3", "4", "5", "6", "7", "8", "9", "10", "11"},
             {"3", "4", "5", "6", "7", "8", "9", "10", "11", "12"},
             {"4", "5", "6", "7", "8", "9", "10", "11", "12", "13"},
             {"5", "6", "7", "8", "9", "10", "11", "12", "13", "14"},
             {"6", "7", "8", "9", "10", "11", "12", "13", "14", "15"},
             {"7", "8", "9", "10", "11", "12", "13", "14", "15", "16"},
             {"8", "9", "10", "11", "12", "13", "14", "15", "16", "17"},
             {"9", "10", "11", "12", "13", "14", "15", "16", "17", "18"},
             {
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19"
             },
             {
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "18",
              "19",
              "20"
             }
            },
            AutoDelete -> False,
            GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
           ],
           "Grid"
          ]
         ],
         "Output",
         CellTags -> "Certification",
         CellLabel -> "Out[167]="
        ]
       },
       {1}
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          StyleBox[
           DynamicBox[
            ToBoxes[SolutionResponseText["x"], StandardForm],
            ImageSizeCache -> {123.95, {3.0, 9.0}}
           ],
           "SolutionResponseText"
          ]
         ],
         "Subsection",
         Editable -> False,
         Selectable -> False,
         Deletable -> False,
         ShowCellBracket -> False,
         CellMargins -> {{24, 25}, {3, 0}},
         CellFrameMargins -> {{8, 0}, {0, 0}},
         TextAlignment -> Right,
         ShowStringCharacters -> False,
         FontFamily -> "Source Sans Pro",
         FontSize -> 12,
         FontWeight -> "Plain",
         FontSlant -> "Plain",
         Background -> GrayLevel[1]
        ],
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[
             {
              "Array",
              "[",
              RowBox[
               {
                "Plus",
                ",",
                RowBox[{"{", RowBox[{"10", ",", "10"}], "}"}]
               }
              ],
              "]"
             }
            ],
            " ",
            "//",
            " ",
            "Grid"
           }
          ]
         ],
         "Input"
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[PaneBox["\[ThickSpace]", ImageSize -> Full]],
      "CodeSectionDividerCloud",
      Editable -> False,
      Selectable -> False,
      Deletable -> False,
      CellMargins -> {{0, 0}, {0, 30}},
      CellBracketOptions -> {"OverlapContent" -> True}
     ],
     Cell[
      "Use Array to make a 10 by 10 grid where the leading diagonal and everything below it is 1 and the rest is 0.",
      "Exercise",
      CellDingbat ->
       Cell[
        BoxData[
         PaneBox[
          TemplateBox[
           {
            TemplateBox[{0}, "Spacer1"],
            StyleBox[
             "\"29.4\"",
             "ExerciseNumberColor",
             ShowStringCharacters -> False,
             StripOnInput -> False
            ]
           },
           "RowWithSeparator"
          ],
          Alignment -> Right,
          ContentPadding -> False,
          FrameMargins -> False,
          ImageSizeAction -> "Crop",
          ImageSize -> {80, Automatic}
         ]
        ],
        ShowStringCharacters -> False
       ],
      ShowCellLabel -> False,
      CounterAssignments -> {
       {"ChapterNumber", 0},
       {"SectionNumber", 29},
       {"ExerciseNumber", 4},
       {"WebOnly", 0}
      }
     ],
     Cell[
      BoxData[
       TagBox[
        ButtonBox[
         StyleBox[
          RowBox[
           {
            RowBox[{"EXPECTED", " ", "OUTPUT"}],
            " ",
            "\[RightGuillemet]"
           }
          ],
          FontFamily -> "Source Sans Pro",
          FontSize -> 12,
          FontColor -> GrayLevel[0.6]
         ],
         Appearance -> None,
         ButtonFunction :>
          (
          SelectionMove[
           ButtonNotebook[],
           All,
           ButtonCell,
           AutoScroll -> False
          ];

          FrontEndExecute[
           FrontEndToken[ButtonNotebook[], "OpenCloseGroup"]
          ]),
         Evaluator -> Automatic,
         Method -> "Preemptive"
        ],
        MouseAppearanceTag["LinkHand"]
       ]
      ],
      "ExerciseExpectedResult",
      Editable -> False,
      Deletable -> False,
      ShowCellBracket -> False
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          StyleBox[
           DynamicBox[
            ToBoxes[SolutionResponseText["x"], StandardForm],
            ImageSizeCache -> {123.95, {3.0, 9.0}}
           ],
           "SolutionResponseText"
          ]
         ],
         "Subsection",
         Editable -> False,
         Selectable -> False,
         Deletable -> False,
         ShowCellBracket -> False,
         CellMargins -> {{24, 25}, {3, 0}},
         CellFrameMargins -> {{8, 0}, {0, 0}},
         TextAlignment -> Right,
         ShowStringCharacters -> False,
         FontFamily -> "Source Sans Pro",
         FontSize -> 12,
         FontWeight -> "Plain",
         FontSlant -> "Plain",
         Background -> GrayLevel[1]
        ],
        Cell[
         BoxData[
          RowBox[
           {
            RowBox[
             {
              "Array",
              "[",
              RowBox[
               {
                RowBox[
                 {
                  RowBox[
                   {
                    "If",
                    "[",
                    RowBox[
                     {
                      RowBox[{"#1", " ", "\[GreaterEqual]", "#2"}],
                      ",",
                      "1",
                      ",",
                      "0"
                     }
                    ],
                    "]"
                   }
                  ],
                  " ",
                  "&"
                 }
                ],
                ",",
                " ",
                RowBox[{"{", RowBox[{"10", ",", "10"}], "}"}]
               }
              ],
              "]"
             }
            ],
            " ",
            "//",
            " ",
            "Grid"
           }
          ]
         ],
         "Input"
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[PaneBox["\[ThickSpace]", ImageSize -> Full]],
      "CodeSectionDividerCloud",
      Editable -> False,
      Selectable -> False,
      Deletable -> False,
      CellMargins -> {{0, 0}, {0, 30}},
      CellBracketOptions -> {"OverlapContent" -> True}
     ],
     Cell[
      "Use FoldList, Times and Range to successively multiply numbers up to 10 (making factorials).",
      "Exercise",
      CellDingbat ->
       Cell[
        BoxData[
         PaneBox[
          TemplateBox[
           {
            TemplateBox[{0}, "Spacer1"],
            StyleBox[
             "\"29.5\"",
             "ExerciseNumberColor",
             ShowStringCharacters -> False,
             StripOnInput -> False
            ]
           },
           "RowWithSeparator"
          ],
          Alignment -> Right,
          ContentPadding -> False,
          FrameMargins -> False,
          ImageSizeAction -> "Crop",
          ImageSize -> {80, Automatic}
         ]
        ],
        ShowStringCharacters -> False
       ],
      ShowCellLabel -> False,
      CounterAssignments -> {
       {"ChapterNumber", 0},
       {"SectionNumber", 29},
       {"ExerciseNumber", 5},
       {"WebOnly", 0}
      }
     ],
     Cell[
      BoxData[
       TagBox[
        ButtonBox[
         StyleBox[
          RowBox[
           {
            RowBox[{"EXPECTED", " ", "OUTPUT"}],
            " ",
            "\[RightGuillemet]"
           }
          ],
          FontFamily -> "Source Sans Pro",
          FontSize -> 12,
          FontColor -> GrayLevel[0.6]
         ],
         Appearance -> None,
         ButtonFunction :>
          (
          SelectionMove[
           ButtonNotebook[],
           All,
           ButtonCell,
           AutoScroll -> False
          ];

          FrontEndExecute[
           FrontEndToken[ButtonNotebook[], "OpenCloseGroup"]
          ]),
         Evaluator -> Automatic,
         Method -> "Preemptive"
        ],
        MouseAppearanceTag["LinkHand"]
       ]
      ],
      "ExerciseExpectedResult",
      Editable -> False,
      Deletable -> False,
      ShowCellBracket -> False
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          StyleBox[
           DynamicBox[
            ToBoxes[SolutionResponseText["x"], StandardForm],
            ImageSizeCache -> {123.95, {3.0, 9.0}}
           ],
           "SolutionResponseText"
          ]
         ],
         "Subsection",
         Editable -> False,
         Selectable -> False,
         Deletable -> False,
         ShowCellBracket -> False,
         CellMargins -> {{24, 25}, {3, 0}},
         CellFrameMargins -> {{8, 0}, {0, 0}},
         TextAlignment -> Right,
         ShowStringCharacters -> False,
         FontFamily -> "Source Sans Pro",
         FontSize -> 12,
         FontWeight -> "Plain",
         FontSlant -> "Plain",
         Background -> GrayLevel[1]
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "FoldList",
            "[",
            RowBox[
             {
              "Times",
              ",",
              "1",
              ",",
              " ",
              RowBox[{"Range", "[", "10", "]"}]
             }
            ],
            "]"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[57]:= ",
         CellID -> 1206564808
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[PaneBox["\[ThickSpace]", ImageSize -> Full]],
      "CodeSectionDividerCloud",
      Editable -> False,
      Selectable -> False,
      Deletable -> False,
      CellMargins -> {{0, 0}, {0, 30}},
      CellBracketOptions -> {"OverlapContent" -> True}
     ],
     Cell[
      "Use FoldList and Array to compute the successive products of the first 10 primes.",
      "Exercise",
      CellDingbat ->
       Cell[
        BoxData[
         PaneBox[
          TemplateBox[
           {
            TemplateBox[{0}, "Spacer1"],
            GraphicsBox[
             TagBox[
              RasterBox[
               CompressedData[
                "\n1:eJyNVUloFEEUfRp3ROKKSkQibqA3UTyJHkRFDxKNelAxIYseEuPM9BImMiIK\nKriiiAQUXAi45CKKoiCC8aI3RTEKmpjFycxkEhQMURzfr1QPPc10Txqqqfr1\n69Vf3v9VWnm4rGYsgPAk/soqrA2hUEXjjmIuyuvDh2rrq6u21Eeqa6tDayuL\nKCzhmMUxDqP7+g1sS5rYOUr1wC8Tw1hivUsa+MT5aE1QXzqK0n4Tp3rDmJO1\nzcL+lImMGgaqHHnnEcxIWDiWMLDMD09w9LnfqQguCD5t++bg9UfwfcDGIvp/\nmutfIiPefF/fgDE8/zdrT57B/X/udaYG44N8pk6v62wnbTqasrGZ602c25R9\nce0nCsVQYq91b3bHMGXQxlL6X8NxMBXGyvY6TOT8ssb86D2fsLGKZxsSJu5z\nP66xHkouOb/k9Y9YN96XY4Lcp2VdzH2Lus/ECsqbPfEZ6mvAPMlzQAyvpWMo\nJs5AjtzAHX3Xa1cO70nOKBsOyonEQXCzcgtvyKHJ4nM8grmUdSvdCOqSFg4E\n5ViPELm5V89/ELvEHcfsno3d3IsWwqMPZ5MhbFQ+GdjnxuqyMTPLW4lrBLWF\n8IQ7zPcufeZzh43pisPkI9cvXPm7PmhgSUH7bKzmvedc9j7JlKPIxSUnRwMq\ndxZuB+TjkcTezX1ls4kziTDWE6OJ62dOTfLeK/EYpnL+NA/WK4kP5ycdftGm\nlxwnpI5y6neEw+3azibpVX0Wtiq/LFxMmyhT/Us4IDw38EH4VqB+4y7f2yTm\nqo9FsTBtYLv2w4l1TxCWtq8Q79yx/hOEJ3WmYzIsMef956WHuDB6ub5Kvj12\n+prE0g8vEcJy5ugu9VpVTx2x4ZYLr1X7+VP3j1b218WB8fPwh7l4TswO1fcM\nvM3hoIXjQVjS23gu7eFHs6pn1iE5+8Cz1yn59rUtjD3emJMv6+SMvAU6v7k5\nYQ374nn4Sz+/Co6zL7VJWdKj05IXK4oF3l6cLz5SOx6fh6Q+vXryVkrt6fpr\nE13pC149nl/j1L+jL2+xn8/y9TRitrwPfvvCqWQM0/Lt/QeYkzQu\n          "
               ],
               {{0, 28.0}, {20.0, 0}},
               {0, 255},
               ColorFunction -> RGBColor,
               ImageResolution -> {72.0, 72.0}
              ],
              BoxForm`ImageTag[
               "Byte",
               ColorSpace -> "RGB",
               Interleaving -> True
              ],
              Selectable -> False
             ],
             DefaultBaseStyle -> "ImageGraphics",
             ImageSizeRaw -> {20.0, 28.0},
             PlotRange -> {{0, 20.0}, {0, 28.0}}
            ],
            StyleBox[
             "\"29.6\"",
             "ExerciseNumberColor",
             ShowStringCharacters -> False,
             StripOnInput -> False
            ]
           },
           "RowWithSeparator"
          ],
          Alignment -> Right,
          ContentPadding -> False,
          FrameMargins -> False,
          ImageSizeAction -> "Crop",
          ImageSize -> {80, Automatic}
         ]
        ],
        ShowStringCharacters -> False
       ],
      ShowCellLabel -> False,
      CounterAssignments -> {
       {"ChapterNumber", 0},
       {"SectionNumber", 29},
       {"ExerciseNumber", 6},
       {"WebOnly", 0}
      },
      CellTags -> "Certification"
     ],
     Cell[
      BoxData[
       TagBox[
        ButtonBox[
         StyleBox[
          RowBox[
           {
            RowBox[{"EXPECTED", " ", "OUTPUT"}],
            " ",
            "\[RightGuillemet]"
           }
          ],
          FontFamily -> "Source Sans Pro",
          FontSize -> 12,
          FontColor -> GrayLevel[0.6]
         ],
         Appearance -> None,
         ButtonFunction :>
          (
          SelectionMove[
           ButtonNotebook[],
           All,
           ButtonCell,
           AutoScroll -> False
          ];

          FrontEndExecute[
           FrontEndToken[ButtonNotebook[], "OpenCloseGroup"]
          ]),
         Evaluator -> Automatic,
         Method -> "Preemptive"
        ],
        MouseAppearanceTag["LinkHand"]
       ]
      ],
      "ExerciseExpectedResult",
      Editable -> False,
      Deletable -> False,
      ShowCellBracket -> False,
      CellTags -> "expected-output-heading"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          StyleBox[
           DynamicBox[
            ToBoxes[SolutionResponseText["x"], StandardForm],
            ImageSizeCache -> {123.95, {3.0, 9.0}}
           ],
           "SolutionResponseText"
          ]
         ],
         "Subsection",
         Editable -> False,
         Selectable -> False,
         Deletable -> False,
         ShowCellBracket -> False,
         CellMargins -> {{24, 25}, {3, 0}},
         CellFrameMargins -> {{8, 0}, {0, 0}},
         TextAlignment -> Right,
         ShowStringCharacters -> False,
         FontFamily -> "Source Sans Pro",
         FontSize -> 12,
         FontWeight -> "Plain",
         FontSlant -> "Plain",
         Background -> GrayLevel[1]
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "FoldList",
            "[",
            RowBox[
             {
              "Times",
              ",",
              "1",
              ",",
              RowBox[
               {
                "Array",
                "[",
                RowBox[
                 {
                  RowBox[{RowBox[{"Prime", "[", "#", "]"}], " ", "&"}],
                  ",",
                  "10"
                 }
                ],
                "]"
               }
              ]
             }
            ],
            "]"
           }
          ]
         ],
         "Input"
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   CellGroupData[
    {
     Cell[
      BoxData[PaneBox["\[ThickSpace]", ImageSize -> Full]],
      "CodeSectionDividerCloud",
      Editable -> False,
      Selectable -> False,
      Deletable -> False,
      CellMargins -> {{0, 0}, {0, 30}},
      CellBracketOptions -> {"OverlapContent" -> True}
     ],
     Cell[
      "Use FoldList to successively ImageAdd regular polygons with between 3 and 8 sides, and with opacity 0.2.",
      "Exercise",
      CellDingbat ->
       Cell[
        BoxData[
         PaneBox[
          TemplateBox[
           {
            TemplateBox[{0}, "Spacer1"],
            GraphicsBox[
             TagBox[
              RasterBox[
               CompressedData[
                "\n1:eJyNVUloFEEUfRp3ROKKSkQibqA3UTyJHkRFDxKNelAxIYseEuPM9BImMiIK\nKriiiAQUXAi45CKKoiCC8aI3RTEKmpjFycxkEhQMURzfr1QPPc10Txqqqfr1\n69Vf3v9VWnm4rGYsgPAk/soqrA2hUEXjjmIuyuvDh2rrq6u21Eeqa6tDayuL\nKCzhmMUxDqP7+g1sS5rYOUr1wC8Tw1hivUsa+MT5aE1QXzqK0n4Tp3rDmJO1\nzcL+lImMGgaqHHnnEcxIWDiWMLDMD09w9LnfqQguCD5t++bg9UfwfcDGIvp/\nmutfIiPefF/fgDE8/zdrT57B/X/udaYG44N8pk6v62wnbTqasrGZ602c25R9\nce0nCsVQYq91b3bHMGXQxlL6X8NxMBXGyvY6TOT8ssb86D2fsLGKZxsSJu5z\nP66xHkouOb/k9Y9YN96XY4Lcp2VdzH2Lus/ECsqbPfEZ6mvAPMlzQAyvpWMo\nJs5AjtzAHX3Xa1cO70nOKBsOyonEQXCzcgtvyKHJ4nM8grmUdSvdCOqSFg4E\n5ViPELm5V89/ELvEHcfsno3d3IsWwqMPZ5MhbFQ+GdjnxuqyMTPLW4lrBLWF\n8IQ7zPcufeZzh43pisPkI9cvXPm7PmhgSUH7bKzmvedc9j7JlKPIxSUnRwMq\ndxZuB+TjkcTezX1ls4kziTDWE6OJ62dOTfLeK/EYpnL+NA/WK4kP5ycdftGm\nlxwnpI5y6neEw+3azibpVX0Wtiq/LFxMmyhT/Us4IDw38EH4VqB+4y7f2yTm\nqo9FsTBtYLv2w4l1TxCWtq8Q79yx/hOEJ3WmYzIsMef956WHuDB6ub5Kvj12\n+prE0g8vEcJy5ugu9VpVTx2x4ZYLr1X7+VP3j1b218WB8fPwh7l4TswO1fcM\nvM3hoIXjQVjS23gu7eFHs6pn1iE5+8Cz1yn59rUtjD3emJMv6+SMvAU6v7k5\nYQ374nn4Sz+/Co6zL7VJWdKj05IXK4oF3l6cLz5SOx6fh6Q+vXryVkrt6fpr\nE13pC149nl/j1L+jL2+xn8/y9TRitrwPfvvCqWQM0/Lt/QeYkzQu\n          "
               ],
               {{0, 28.0}, {20.0, 0}},
               {0, 255},
               ColorFunction -> RGBColor,
               ImageResolution -> {72.0, 72.0}
              ],
              BoxForm`ImageTag[
               "Byte",
               ColorSpace -> "RGB",
               Interleaving -> True
              ],
              Selectable -> False
             ],
             DefaultBaseStyle -> "ImageGraphics",
             ImageSizeRaw -> {20.0, 28.0},
             PlotRange -> {{0, 20.0}, {0, 28.0}}
            ],
            StyleBox[
             "\"29.7\"",
             "ExerciseNumberColor",
             ShowStringCharacters -> False,
             StripOnInput -> False
            ]
           },
           "RowWithSeparator"
          ],
          Alignment -> Right,
          ContentPadding -> False,
          FrameMargins -> False,
          ImageSizeAction -> "Crop",
          ImageSize -> {80, Automatic}
         ]
        ],
        ShowStringCharacters -> False
       ],
      ShowCellLabel -> False,
      CounterAssignments -> {
       {"ChapterNumber", 0},
       {"SectionNumber", 29},
       {"ExerciseNumber", 7},
       {"WebOnly", 0}
      },
      CellTags -> "Certification"
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          TagBox[
           ButtonBox[
            StyleBox[
             RowBox[
              {
               RowBox[{"EXPECTED", " ", "OUTPUT"}],
               " ",
               "\[RightGuillemet]"
              }
             ],
             FontFamily -> "Source Sans Pro",
             FontSize -> 12,
             FontColor -> GrayLevel[0.6]
            ],
            Appearance -> None,
            ButtonFunction :>
             (
             SelectionMove[
              ButtonNotebook[],
              All,
              ButtonCell,
              AutoScroll -> False
             ];

             FrontEndExecute[
              FrontEndToken[ButtonNotebook[], "OpenCloseGroup"]
             ]),
            Evaluator -> Automatic,
            Method -> "Preemptive"
           ],
           MouseAppearanceTag["LinkHand"]
          ]
         ],
         "ExerciseExpectedResult",
         Editable -> False,
         Deletable -> False,
         ShowCellBracket -> False
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "{",
            RowBox[
             {
              GraphicsBox[
               {
                Opacity[0.2],
                InterpretationBox[
                 PolygonBox[
                  NCache[
                   {
                    {Rational[1, 2]*Sqrt[3], Rational[-1, 2]},
                    {0, 1},
                    {Rational[-1, 2]*Sqrt[3], Rational[-1, 2]}
                   },
                   {{0.86603, -0.5}, {0, 1}, {-0.86603, -0.5}}
                  ]
                 ],
                 RegularPolygon[3]
                ]
               }
              ],
              ",",
              GraphicsBox[
               TagBox[
                RasterBox[
                 CompressedData[
                  "\n1:eJzt3c2rJfmW1+EvKoUIglAjZ8tJzhw58c7CyQahRr0RdBbdeG/j5Aq3BfG/\nt4LspDKr8uR52S9rRcTzgUe6Gwd5z1nxi8W+cWL/h3/433/3l3+R5J/+9a//\nz9/9/f/9L3/729//v+u/+/V/+W9//af/9Y9//fP//K9//T9//sc//+0//8O/\n/PX/+G9+/f/733/1ryJJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ\nkiRJOlD1q/8EAOxWRdOq9M8FAPBxFU2r0j8XwONd/1n3vwO4v4qmVemfC+Cx\n/vSrv/xq/dUy4N8D3FdF06r0zwXwWP8jn/erv/zz/9z97wHuq6JpVfrnAnic\nJb/tVl8sA/5dwP1UNK1K/1wAj7Pmj/vVOuDfBdxPRdOq9M8F8BiX/HG3+uKX\nAf8+4D4qmlalfy6Ax3hpt/ryGdafBvwbgdtVNK1K/1wA93fNj/erv8T7GuAo\nKppWpX8ugPta8vpu5X0NcBwVTavSPxfAfX39PobXeF8D7F9F06r0zwVwPz96\npv0llwH/buDjKppWpX8ugPtZ8/79ah3w7wY+rqJpVfrnAriP7Z0L792tPOsO\n+1fRtCr9cwHc7st3DH7UGu9rgL2qaFqV/rkAbveeZ9p9hgXHUtG0Kv1zAdxm\nye271RfLgP88wPtUNK1K/1wAt7nHZ1eedYf9qmhalf65AD7uI+9j8L4GOJaK\nplXpnwvg49bcf79aB/znAt6uomlV+ucC+Jhb3sfgWXc4joqmVemfC+D9bn0f\nw1s+w1oG/OcEXlfRtCr9cwG83z2faX+J7yaEfahoWpX+uQDeZ8njd6svlgH/\neYEfq2half65AN7nGZ9dedYd9qOiaVX65wJ4u0uet1t9cRnwnxt4WUXTqvTP\nBfB2z96tfIYF81U0rUr/XABvc03PfvWXeF8DTFbRtCr9cwG8bknfbvXlM6xl\nwM8B+KOKplXpnwvgdc98pv0l3tcAM1U0rUr/XAA/tqR/t/piGfDzAL5V0bQq\n/XMB/Nia/r3q6/+esPvnAXyromlV+ucCeNkjv2Pwo34Z8HMBflPRtCr9cwG8\nrHuXeukzrD8N+NkAn1U0rUr/XADfd03/LvWS64CfD/BZRdOq9M8F8EdL+neo\n1ywDfk6A/Wpilf65AP5owvsYXuN9DTBDRdOq9M8F8K1L+nent7oM+HnB2VU0\n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\nTavSPxfwXmv677ucw5r+eYfXVDStSv9cwHt4HwPPdk3/3MOPVDStSv9cwFtt\nfzPffa/lfNZ4XwOzVTStSv9cwFt5pp0u1/TPP7ykomlV+ucC3mJJ/z2Wc1vS\nfx3A91Q0rUr/XMBb+OyKbmv6rwP4noqmVemfC3jNJf33Vthc0n89wO9VNK1K\n/1zAa9b031dhs6b/eoDfq2half65gB+5pv+eCl/bZrL7uoCvVTStSv9cwEu8\nj4GJ1njWnVkqmlalfy7gJZ5pZyrfTcgkFU2r0j8X8D1L+u+h8CNL+q8T2FQ0\nrUr/XMD3+OyK6db0XyewqWhalf65gN+7pP/eCW+xfR9m9/UCFU2r0j8X8Hvd\n90x4qzW+m5B+FU2r0j8X8LVr+u+Z8B7bzHZfN5xbRdOq9M8FfLGk/14J77XG\ns+70qmhalf65gC88085eeV8DnSqaVqV/LmBzSf89Em6xpP864pwqmlalfy5g\ns6b//gi3WNN/HXFOFU2r0j8XsP2Ne/e9Ee7B+xroUNG0Kv1zAd33RLiXNd7X\nwPNVNK1K/1xwbp5p52iu6b+uOJeKplXpnwvOa0n/vRAeYUn/9cV5VDStSv9c\ncF4+u+Ko1vRfX5xHRdOq9M8F53RJ/z0QHumS/uuMc6hoWpX+ueCc1vTf/+CR\n1vRfZ5xDRdOq9M8F5+N9DJzFNf3XG8dX0bQq/XPBuWx/u959z4NnWeN9DTxe\nRdOq9M8F5+KZds7GdxPyaBVNq9I/F5zHkv57HXRY0n/9cVwVTavSPxech8+u\nOKs1/dcfx1XRtCr9c8E5XNJ/j4NOl/RfhxxTRdOq9M8F59B9b4Nua/qvQ46p\nomlV+ueC47um/94GE2zXQvf1yPFUNK1K/1xwbN7HAL9Z41l37q+iaVX654Jj\n80w7fMv7Gri3iqZV6Z8LjmtJ/70MJlrSf31yHBVNq9I/FxzXmv77GEy0pv/6\n5Dgqmlalfy44pkv672Ew2fY9nN3XKcdQ0bQq/XPBMXXfu2C6Nb6bkPuoaFqV\n/rngeK7pv3fBHmzXSvf1yv5VNK1K/1xwLEv671mwF2s8687tKppWpX8uOBbv\nY4D38b4GblXRtCr9c8FxXNJ/r4I9uqT/+mW/KppWpX8uOI41/fcp2KM1/dcv\n+1XRtCr9c8ExbH9r3n2Pgj3zvgY+qqJpVfrngv3zHYNwuzXe18DHVDStSv9c\nsH+eaYf7uKb/emZ/KppWpX8u2Lcl/fckOJIl/dc1+1LRtCr9c8G++ewK7mtN\n/3XNvlQ0rUr/XLBfl/Tfi+CILum/vtmPiqZV6Z8L9mtN/30IjmhN//XNflQ0\nrUr/XLBP3scAj3VN/3XOPlQ0rUr/XLA/3scAj7fGs+68TUXTqvTPBfvjmXZ4\nDt9NyFtUNK1K/1ywL0v67zlwJkv6r3tmq2half65YF98dgXPtab/ume2iqZV\n6Z8L9uOS/nsNnNEl/dc/c1U0rUr/XLAf3fcYOKs1/dc/c1U0rUr/XLAP1/Tf\nY+DMtmuw+xxgpoqmVemfC+bzPgbot8az7nxfRdOq9M8F83mmHWbwvga+p6Jp\nVfrngtmW9N9TgN8s6T8XmKWiaVX654LZ1vTfT4DfrOk/F5ilomlV+ueCuXzH\nIMy0XZvd5wNzVDStSv9cMFf3PQT4vjWf/+6k+4xghoqmVemfC2a6pv8eArxs\nu0a7zwlmqGhalf65YJ4l/fcO4HVL+s8L+lU0rUr/XDCP9zHAPnhfA5uKplXp\nnwtmuaT/ngG83SX95wa9KppWpX8umGVN//0CeLs1/ecGvSqaVqV/LpjD+xhg\nn67pPz/oU9G0Kv1zwQy+YxD2a433NZxZRdOq9M8FM3imHfbtmv5zhB4VTavS\nPxf0W9J/bwBut6T/POH5KppWpX8u6OezKziGNf3nCc9X0bQq/XNBr0v67wnA\n/VzSf67wXBVNq9I/F/Ra038/AO5nTf+5wnNVNK1K/1zQx/sY4Jiu6T9feJ6K\nplXpnwt6eB8DHNcaz7qfSUXTqvTPBT080w7H5rsJz6OiaVX654LnW9J/9gOP\nt6T/vOHxKppWpX8ueD6fXcE5rOk/b3i8iqZV6Z8LnuuS/jMfeJ5L+s8dHqui\naVX654Ln6j7rgeda03/u8FgVTavSPxc8zzX9Zz3wfNu1333+8DgVTavSPxc8\nx5L+Mx7oscaz7kdW0bQq/XPBc3imHc7N+xqOq6JpVfrngsdb0n+2A/2W9J9H\n3F9F06r0zwWPt6b/XAf6rek/j7i/iqZV6Z8LHst3DAJf286E7nOJ+6poWpX+\nueCxus9yYJY1n79/tPts4n4qmlalfy54nGv6z3Jgnu1s6D6fuJ+KplXpnwse\nY0n/GQ7MtaT/nOI+KppWpX8ueAzvYwB+ZE3/OcV9VDStSv9ccH+X9J/dwHyX\n9J9X3K6iaVX654L7W9N/bgPzrek/r7hdRdOq9M8F9+V9DMB7XNN/bnGbiqZV\n6Z8L7mf7m+vusxrYlzXe17B3FU2r0j8X3I9n2oGPuKb//OLjKppWpX8uuI8l\n/Wc0sF9L+s8xPqaiaVX654L78NkVcIs1/ecYH1PRtCr9c8HtLuk/m4H9u6T/\nPOP9KppWpX8uuF33mQwcw5r+84z3q2half654DbX9J/JwHFsZ0r3ucb7VDSt\nSv9c8HHexwDc2xrPuu9NRdOq9M8FH+eZduARtrOl+3zj7SqaVqV/LviYJf1n\nMHBcS/rPOd6momlV+ueCj/HZFfBIa/rPOd6momlV+ueC97uk/+wFjm/7PtPu\n847XVTStSv9c8H7dZy5wDmt8N+EeVDStSv9c8D7X9J+5wHlsZ073ucePVTSt\nSv9c8HZL+s9a4FzWeNZ9uoqmVemfC97OM+1AB+9rmK2iaVX654K3uaT/jAXO\na0n/Ocj3VTStSv9c8DZr+s9X4LzW9J+DfF9F06r0zwWv2/5GuvtsBfC+hpkq\nmlalfy54XfeZCrBZ430NE1U0rUr/XPBjnmkHJrmm/1zkWxVNq9I/F7xsSf9Z\nCvB7S/rPR35T0bQq/XPBy3x2BUy0pv985DcVTavSPxd83yX9ZyjASy7pPyf5\nrKJpVfrngu9b039+ArxkTf85yWcVTavSPxf8kfcxAHtwTf95if1qYpX+ueBb\n298+d5+ZAG+xxrPuE1Q0rUr/XPAtz7QDe+K7CftVNK1K/1zwmyX9ZyXAey3p\nPz/PrKJpVfrngt/47ArYozX95+eZVTStSv9c8Nkl/WckwEdd0n+OnlVF06r0\nzwWfdZ+NALdY03+OnlVF06r0zwWf/8a5+2wEuNV2lnWfp2dU0bQq/XNxdt7H\nABzFGs+6d6hoWpX+uTg7z7QDR+J9Dc9X0bQq/XNxZkv6z0KAe1vSf76eSUXT\nqvTPxZmt6T8HAe5tTf/5eiYVTavSPxdndUn/GQjwKNv3qHafs2dR0bQq/XNx\nVt1nH8Ajrfn89zvdZ+0ZVDStSv9cnNE1/WcfwKNtZ133eXsGFU2r0j8XZ7Ok\n/8wDeIY1nnV/hoqmVemfi7PxPgbgTLyv4fEqmlalfy7O5JL+sw7g2S7pP3+P\nrKJpVfrn4kzW9J9zAM+2pv/8PbKKplXpn4uz2P5WufuMA+jifQ2PU9G0Kv1z\ncQa+YxA4uzXe1/AoFU2r0j8XZ+CZdgDva3iUiqZV6Z+Lo1vSf6YBTLGk/1w+\nmoqmVemfi6Pz2RXAb9b0n8tHU9G0Kv1zcWSX9J9lANNc0n8+H0lF06r0z8WR\nrek/xwCmWdN/Ph9JRdOq9M/FUXkfA8DLruk/p4+iomlV+ufiiLyPAeDH1njW\n/V4qmlalfy6OyDPtAK/z3YT3UdG0Kv1zcTRL+s8sgL1Y0n9u711F06r0z8XR\n+OwK4O3W9J/be1fRtCr9c3Ekl/SfVQB7c0n/+b1nFU2r0j8XR9J9RgHs0Zr+\n83vPKppWpX8ujuKa/jMKYK+2M7T7HN+riqZV6Z+LI1jSfzYB7Nkaz7p/VEXT\nqvTPxRF4ph3gdt7X8DEVTavSPxd7t6T/TAI4iiX95/reVDStSv9c7N2a/vMI\n4CjW9J/re1PRtCr9c7FnvmMQ4P62s7X7fN+TiqZV6Z+LPes+gwCOaM3n73Ht\nPuP3oqJpVfrnYq+u6T+DAI5qO2O7z/m9qGhalf652KMl/WcPwNEt6T/v96Ci\naVX652KPvI8B4PG8r+FtKppWpX8u9uaS/jMH4Cwu6T/3p6toWpX+udibNf3n\nDcBZrOk/96eraFqV/rnYE+9jAHi+a/rP/8kqmlalfy72Yvtb4e4zBuCM1nhf\nw49UNK1K/1zshWfaAfpc038fmKqiaVX652IPlvSfLQBnt6T/fjBRRdOq9M/F\nHvjsCqDfmv77wUQVTavSPxfTXdJ/pgDw2SX994VpKppWpX8uplvTf54A8Nma\n/vvCNBVNq9I/F5N5HwPAPNf03x8mqWhalf65mMr7GABmWuNZ969VNK1K/1xM\n5Zl2gLl8N+FvKppWpX8uJlrSf3YA8GNL+u8XE1Q0rUr/XEzksyuA+db03y8m\nqGhalf65mOaS/jMDgLe5pP++0a2iaVX652Ka7rMCgLdb47sJK5pWpX8uJrmm\n/6wA4H22s7v7/tGpomlV+udiiiX9ZwQA77fm3M+6VzStSv9cTOGZdoD9OvP7\nGiqaVqV/Lia4pP9sAOA2S/rvJ/YrbVX652KCNf3nAgC3WdN/P7FfaavSPxfd\nfMcgwHFsZ3r3fcV+pUr/XHTrPgsAuJ8153tfQ0XTqvTPRadr+s8CAO5rO9u7\n7y/2q3NX6Z+LLkv6zwAAHmNJ/33GfnXeKv1z0cX7GACOa03/fcZ+dd4q/XPR\n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\nkiRJkiRJkiRJkiRJkiRJkqQT9/8BFh7YWg==\n      "
                 ],
                 {{0, 313.2}, {360.0, 0}},
                 {0, 255},
                 ColorFunction -> RGBColor,
                 ImageResolution -> 120.0
                ],
                BoxForm`ImageTag[
                 "Byte",
                 ColorSpace -> "RGB",
                 Interleaving -> True
                ],
                Selectable -> False
               ],
               DefaultBaseStyle -> "ImageGraphics",
               ImageSizeRaw -> {360.0, 313.2},
               PlotRange -> {{0, 360.0}, {0, 313.2}}
              ],
              ",",
              GraphicsBox[
               TagBox[
                RasterBox[
                 CompressedData[
                  "\n1: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\n4fx/h7faDg==\n      "
                 ],
                 {{0, 313.2}, {360.0, 0}},
                 {0, 255},
                 ColorFunction -> RGBColor,
                 ImageResolution -> 120.0
                ],
                BoxForm`ImageTag[
                 "Byte",
                 ColorSpace -> "RGB",
                 Interleaving -> True
                ],
                Selectable -> False
               ],
               DefaultBaseStyle -> "ImageGraphics",
               ImageSizeRaw -> {360.0, 313.2},
               PlotRange -> {{0, 360.0}, {0, 313.2}}
              ],
              ",",
              GraphicsBox[
               TagBox[
                RasterBox[
                 CompressedData[
                  "\n1:eJzt3b+LJE+e3vEHSXwRggPBWGMp5Ix3lhyNV3IaBC3nGoFaVt2h20OQnGBb\nINrac9RWWWrrrPPKKmtllSWvrP2jNB96i6mprh/5IzKfiMz3B17H7d5392aq\nIj/xdER05L/9m//xV7/7Z5Je/uWP//FXf/2//sPvf//Xr0//+se/+M9///Lf\n/+7v//a//ce//59/+3d/+/t//zf//Me/+a9+/LP/5Yd/IYqiKIqiKIqiKIqi\nKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi\nKIqiKIqiKIqiKIqiKGpGlX74dwBm66GAPwOAcSVRpVWSf1ygvUegpb/64fc/\n/OGH1z//a/efCXVz9z9cl0SVVkn+cYF2nn74HdDCyw//eOb//vBPBfzZUK/o\nQe4+iMuSqNIqyT8ucN93+Xsr6vCmz9kqctWffjj8sCngz4g6rX9Yyd8P8VkS\nVVol+ccF7nuWv7eibM0P7/qcrcL/00e++tOf//f3P//z7j8z6hO9yN0P8VkS\nVVol+ccFblvJ31NRtjhjdSlXha1+Zquj+Pfe//yfc//ZUZ+V/H0Rv0qiSqsk\n/7jAbWv5+ynKFGtQsd93LVuFgz7nq8PJ/30j1rLQzVr+vohfJVGlVZJ/XOC6\nB/l7Kcr0otu5Kuz0OVsd/fHkn3sXa1noht8nLEsSVVol+ccFrnP3UJTp1n7g\nqWvZ6riG9U9n/zwZC22t9fF7N+4eiQ9JVGmV5B8XuOxJ/h6KsrTZDzza63a+\n+tOf/5nz/9y72C9EO9Gj3H0SH5Ko0irJPy7w2Ur+3omyxB2hbXLVtTPt19aw\nthf+8+9iLQv3rcVZ91IkUaVVkn9c4DPuY8CpN7XPVuf3Mdzz/27895CxcA/3\nNZQhiSqtkvzjAr96kL9nogy37rTqc6b9mt2N/753sV+I2x7k75tLl0SVVkn+\ncYFfreXvl/Bre4a9zX0MbfYJb/13vou1LFy3lr9vLl0SVVol+ccFforfeXb3\nSnh1OcN+Lu5c6Jqtbp11P8ddWbjmSf7+uWRJVGmV5B8X+BC/6+zukfB6Ub9c\nFY7vGOzroM/3NbCWhbbW4r4GpySqtEryjwt84Ez7svXdD+xzpn3IGhZn33HN\nk/x9dKmSqNIqyT8uwH0MSzZkP/Boq+HZ6mjb4f/vu9gvxK9W8vfTJUqiSqsk\n/7gAa1dL9aphuSrn2lXbs+7sF+KWtfz9dImSqNIqyT8ulu5B/p6I6Q1dszrq\ncx/DkPsa2C/EPQ/y99WlSaJKqyT/uFi6tfz9ENOJ/bR35clW4aD8+erQ88/y\nLvYLwRqWQxJVWiX5x8WSPcrfCzGdoWfYzw25jyHnWXf2C3HuSf7+uiRJVGmV\n5B8XS/Vd/h6IaeQ4w35u6H0MbdawtgP+fO9iLWvJ1uKs+5SSqNIqyT8ulupZ\n/h6I8b0ob646ynmm/Zpb7yZkLQv3RI9z99mlSKJKqyT/uFiilfy9D+PLvR94\ntNX42epom+HPS8ZarpX8/XYJkqjSKsk/LpaItat5G2M/cOq1q6Fn3dkvRFjL\n32+XIIkqrZL842JpHuTveRjPq8bLVWGn6bLV0S7Tn/1drGUt0YP8fXfukqjS\nKsk/LpbG3eswjrHXrI6mzlY517DYL1ymtfx9d+6SqNIqyT8uluRJ/l6H/CJb\nvWv8bLWXJ1/9Sf3va7i1lvVSwHeHaUTvc/ffOUuiSqsk/7hYipX8PQ75jXWG\n/dxWvmx1XMPaZv47vYu1rKVYi7PuY0qiSqsk/7hYimf5exzymWo/8GjKM+3X\nDL2v4VbOagr4TjGu6IHuPjxXSVRpleQfF0uwkr+3IZ8XTZerSli7OrUd6e/4\nLtaylmAlfz+eoySqtEryj4slWMvf15DHVPuBpw7y56rTfcIx/65krHlby9+P\n5yiJKq2S/ONi7h7l72kYbur9wKMx3zHY1x9H/ju/i/3COYue6O7Lc5NElVZJ\n/nExd+5ehuFeNX2uOnJnqWtrWP808t/7XaxlzdVaH+9fdffmOUmiSqsk/7iY\nsyf5exn6c61ZHe3lz1LX7Cf6DMhY8xS90d2f5ySJKq2S/ONirlby9zD0F9nq\nXb5stZU/Q92zneiziO/hZeLvH+Nbyd+n5yKJKq2S/ONirp7l71/ox3GG/VwJ\n9zHcM9Z9DdcyFmtZ8xI90t2n5yKJKq2S/ONijh7k713ozr0feLSTPzu1tZv4\ns3kXZ9/n5EH+fj0HSVRpleQfF3O0lr9voZsX+XPV0UH+3NTWwfD5vIu1rLlY\ny9+v5yCJKq2S/ONibh7l71nopoT9wKMS72O4Z2/6rMhY8/Akf9+uXRJVWiX5\nx8WcfJe/V6G92GfayJ+pjuLOA3dW6ruGNfZ9DbfWspqe3z/KsBb3NQyVRJVW\nSf5xMSfP8vcqtPMqf546V8OZ9tLWsI4Zi7Wsuj3J379rlkSVVkn+cTEXK/l7\nFO4rbc3qaCt/Rhpqa/4M31p8/yjXSv4+XqskqrRK8o+LuXiWvz/hthd577S6\npea1q6NDAZ/ju7grq1Zr+ft4rZKo0irJPy7m4EH+3oTbSjrDfm4nfzbKZVfA\n5/ku9gtr9SB/P69RElVaJfnHxRys5e9LuKxRmfuBpw7y56I5rWGd5qz4/t1j\nEO2t5e/nNUqiSqsk/7io3ZP8PQmXvcg/x9+zlz8T5bYv4HM9zVisZdUleqq7\nr9cmiSqtkvzjombf5e9FuKzk/cCjWu9jaLOGtS3g8z1FxqrHWpx17yqJKq2S\n/OOiZs/y9yL8KvaDNvLP523M4Uz7NVO+m7Ctd7FfWIvore7+XpMkqrRK8o+L\nWq3k70H41av8c3hbW/kz0Ni2BXzOlzIWa1l1WMnf52uRRJVWSf5xUav4+crd\nf/ChpjWrozmvXR0dCvicr4nx4h63uG0tf5+vRRJVWiX5x0WNHuTvPfjwIv9c\n3dVO/uwzlV0Bn/c17+KurNI9yN/va5BElVZJ/nFRI3fPwYcazrBf4s48U69h\nud5N2DZjsV9YrrV4N2EbSVRpleQfF7V5kr/nLF2j+vYDj/byZ56p7Qv43Nvk\nrBhX7rGNz6Lnuvt+6ZKo0irJPy5qspK/1yzdi/xzcV9b+bOOaw1rW8Dn3yZj\nsZZVnrU4635PElVaJfnHRU2e5e81S1brfuDREs60X1PifQ3XkLHKE73X3f9L\nlkSVVkn+cVGLB/l7zFLFvs1G/nl3iJ38GcdtW8D30Na72C8szUr+eaBUSVRp\nleQfF7VYy99fluhV/rk2h4P8+cbtUMD30DVjsZZVjrX880CpkqjSKsk/Lmrw\nKH9vWZpYO9jIP8fm8Ef5s00p/ljA99FVjEP384AP0Yvd80GJkqjSKsk/Lmrg\n7ilL8yL/nJqTO9OU5KCy72u45l3clVWCtbiv4ZIkqrRK8o+L0j3J31OWpPYz\n7Of28mea0uwL+F76Ziz2C/2iJ7vnhdIkUaVVkn9clGwlfy9Zikbz2Q882sqf\nZUq1LeD7GZKzYry6n5klW8k/P5QkiSqtkvzjomTP8veRJXiRf84cw5LvY7jn\nUMD3MzRjsZbls5Z/fihJElVaJfnHRake5O8hSzC3/cCjnfwZpnS7Ar6nochY\n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\nTv7xjtsiY5W6lhVzHflqmZXkyVdr+cZ7I9asaneQf97FMsRYc493tPMmf546\ntxb5aqmVNH22epRvrL+IO61qx30MmNpe/nGPdqK/R59356pTTyJfLbGSps1W\n3+Ub45xhr1/8zrx7rsXyHMR9DTWJjFXSfuFa49/XkESVVknT5qtnTT+2G7Ef\nOBecaYfLXv7xj24iZzXy56sp1rCSqNIqabpstdL0Y/pF/mcceWzln2OxbDEG\n3c8BuilpLWsl8tWSKmm+a1fsB84La1dwO8j/HKCfEjLWWuSrJVXSNNnqQdON\n4UbsB87NTv65FQg7+Z8H9BNrWY28GSvmQvLVMippmny11jRj91X+Zxj5xbqB\ne14FAmtYdYuM5VzLWot8tZRKGj9bPYk1K/S3l39OBU7FmHQ/FxhmI1/GijmR\nfDX/Sho3W33X+GP1Rf5nFePgPgaUKNawtvI/Hxgm1rJi/nCsYa1Evpp7JY2b\nr5417jjlDPu8caYdpeLdhPMQGcuxX/gs8tXcK2m8bLXSeGOzEfuBcxfrA+45\nFLiFNaz5iJzVaNqMtRL5as6VVN/aFfuBy8DaFUp3kP85QT5Tr2WtRb6acyWN\nk60eNM54ZD9wGXbyz51AG/E+TPfzgrymzFiPIl/NtZLGyVe5x2Aj9gOXxD1n\nAm3FGhbvJpyfqfYL18rzbsIkqrRKyp+tnsSaFfrbyz9nAl3EmHU/N8hvqv3C\nmDPJV/OrpLzZaiXWrNDfVv65Eugq1rBi7LqfH4xjo3HXstYaftY9iSqtkvLm\nq2flGW8v8j9TmB5n2lEr7muYt1jLinlprIz1LPLV3CopX7Z6EPuB6G8n/xwJ\nDMEa1ryNvV+4EvlqTpWUL1+txX4g+os9Fvf8CAwRY9j9HGF8kbMajbNPSL6a\nTyXlyVaPYj8Q/cXvuLvnRiAH7mtYhrHWsh5FvppLJeXJV+wHYgj3nAjkEmtY\n3NewHLkz1lr97mtIokqrpOHZ6lnsB6I/zrRjbvbyP1eYTu79wieRr+ZQScOy\n1UqsWaG/rfxzITCGGNvu5wvTyb1fuBL5qvZKmnbtqhFrVviJtSvMVewTup8v\nTG+jPGtZa5Gvaq+k/tnqQd3Gy4v8Yx/l2Mk/BwJj2sn/nGF6sZYV893QjBVz\nLPmq3krqn6/WYj8Q/cXP9+75DxgTa1jLlWO/cC3yVc2V1C9bPYr9QPTHfQxY\n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\nFEVRFEVR1ILr/wNebJhC\n      "
                 ],
                 {{0, 313.2}, {360.0, 0}},
                 {0, 255},
                 ColorFunction -> RGBColor,
                 ImageResolution -> 120.0
                ],
                BoxForm`ImageTag[
                 "Byte",
                 ColorSpace -> "RGB",
                 Interleaving -> True
                ],
                Selectable -> False
               ],
               DefaultBaseStyle -> "ImageGraphics",
               ImageSizeRaw -> {360.0, 313.2},
               PlotRange -> {{0, 360.0}, {0, 313.2}}
              ],
              ",",
              GraphicsBox[
               TagBox[
                RasterBox[
                 CompressedData[
                  "\n1:eJzt3T+MJE2a3/cfJOGFIIAAgbHGYsgZS2fR4VgqOQMIaDrbEKChoyLBW4JA\n8wRcE6DG6nU4VstRW2eVxbHaWlptFR22Q1pHq62yVlZb9No6zoPexGRX5/+M\niCcy8/sAH4I87h7etyoy4tcRT0X+z//s//7d7/87Sdf/48//43f/9N/8b3/9\n1//02+Xf//n/+D/+6vpf/ou/+st//r//1b/+y3/xl3/9j/7Zf//zf/g//fzP\n/p8//Q+iKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi\nKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiVlThp38IYLW+/PT5p8uf\ndgX88wCIL4gqrYL8xwWGuwAG+t1P/89P/+6n+5/+7U83P3376WsB/3xYHu/5\nD+2CqNIqyH9cYJjLn34PDPCHnx5/+s81//9Pf/vT3/zZnV6zlvc/K5bD5iDv\neRDNgqjSKsh/XKCfne94z60on+1P/Xu9zVXGctXf/fTy01G/MlaVs24K+GdH\n+fbijLlUQVRpFeQ/LtDPznO851aUy/KRZaVHvc9W5r/qNV/93Z//7/afO4ic\nhfFsLvKeD/FeEFVaBfmPC3TbyX9ORZmqXPVHNecq86Rf2api/7PHP//3/kbk\nLIyzk/+8iLeCqNIqyH9coNte/vMpynGlX7nK9qDsvK8tWxk7EzzPVy+1//+j\n3u9lkbPQZS//eRFvBVGlVZD/uEC7L/KfS1GGeq4yP9Sdq8xJ77NV5U+1/9yj\nmveyyFlow+8JyxJElVZB/uMC7bznUPg7z1V954F1bdmq2sP627P/fFvGques\nqwI+E/jb6/V3N95zJF4FUaVVkP+4QLNL+c+h8NOUq4acB1ae1Z2v/u7P/5nz\n/96jms8LyVk4Z3OU9zyJV0FUaRXkPy7w3k7+cyd8NOUqc69huaqtp71tD+up\n4b//qO69rCpnfRc5a8v2ote9FEFUaRXkPy7wHvcxbE9brjIPGp6tzu9j6PNf\nO/739GWses66LuAzRH7c11CGIKq0CvIfF3jri/znTORjueq7mrOLndM9aly2\n6uppb3Pq+N/3qO7zwjr797gu4DNFXl/kP29uXRBVWgX5jwu8tZf/fIn0unLV\nmB72IfcxDDkn7Prf+ahhe1n1Pa3rAj5j5LGX/7y5dUFUaRXkPy7wi/3m2Xuu\nRFqWq27Vnk3G9LCfszsXxmarrl73c213ZZGzcCn/+XPLgqjSKsh/XOCV/dbZ\ne45EOtd6zRtdeeSHpuUqU71jcKqm+xpi7GVVOetbAd8B0tmL+xo8BVGlVZD/\nuMAretrXyXrW79SfQaaeB07paZ+zhzWm973tbgfv7wRpXMp/Ht2qIKq0CvIf\nF+A+hjUamqvmnAdWht7HMETTfQ0xet/JWduwk/98ukVBVGkV5D8uwN7VmrTd\nsdDkXvNyVcy9q6G97jHOC8lZ67WX/3y6RUFUaRXkPy627ov850TMYz3rY3KV\nmbtnVZlyH0Of04R/jqkZi5y1Pl/kP69uTRBVWgX5j4ut28t/PsQ0U3KVnac9\nKk62MrbfFDtfjd3DmnteSM5al73859WtCaJKqyD/cbFlF/KfCzHelFwVo4f9\n3Jz7GGL2usc6LzzPWVcFfNeY5lL+8+uWBFGlVZD/uNiqz/KfAzHO1FwVo4f9\n3Nz7GIbsYT3N+Od71Ly9LHLWsu1Fr3tOQVRpFeQ/Lrbqq/znQAwzNVeZH4qb\nqyoxe9rbdL2bMNdeVpWzvouctTQ2x3nPs1sRRJVWQf7jYot28p/70G9Orkpx\nHlixfaXU2aoyZw+rEiNj1XPWdabvH/Pt5D/fbkEQVVoF+Y+LLWLvqmyWq75r\neg5IcR6Ye++qfk4Y45/5UfPPC+vs+7lO9P0jnr3859stCKJKqyD/cbE1X+Q/\n56HZ3Fxl7pUuV5mT8mWryinSP/uj4u1lVW5FzirdF/nPu2sXRJVWQf7jYmu8\n5zq8Z7nK1uk563zqPatK7mwVcw8r9nnh+dnh9cTvH2nt5T/vrl0QVVoF+Y+L\nLbmU/1yHX6417B02Q7LVo9Jnq2f55Ku/0/T7Grr2sn5E+Oybcta3gd8/8rG5\nz3v+XbMgqrQK8h8XW7GT/xyHVzeKk6tMqh72c0/yy1bVHtZT5H+nR6XZyyJn\nlWcvet1TCqJKqyD/cbEVX+U/x21dzFyV6zywkrOnvc3c+xq6ctYh0vfSlLNu\n5D/2wH0NKQVRpVWQ/7jYgp3857Yts/U15pr9Q/lyVQl7V3Wx97By7GWRs8qx\nk/98vEZBVGkV5D8utmAv/3lta64UP1flPA+ss7M571xVPydM+e+aMmORs/zt\n5T8fr1EQVVoF+Y+LtbuQ/5y2JalyVe7zwErKdwxO9afE/86PSndeSM7yZ3Oi\n97y8NkFUaRXkPy7Wznsu24pUucrcK3+uqnhnqbY9rL9N/O/9qPR7WfWcZePH\newxvxV6v71/1npvXJIgqrYL8x8WaXcp/Llu7lLnKa8+q8iz/LNXmOdNnkCNj\nkbPys7nRe35ekyCqtAryHxdrtZP/HLZmKXNVla0e5ZetnuSfofo8Zfos7Hv4\nkfC7Ps9Z30XOymEn/3l6LYKo0irIf1ys1Vf5z19rlDpXGY8e9nMl3MfQJ9V9\nDW0ZK9deVj1nXct/zK+VzZHe8/RaBFGlVZD/uFijL/Kfu9bGctV3pV1Tvc8D\nKyf5Z6ehTpk/m0el730/Z+PuWv7PwBp9kf98vQZBVGkV5D8u1mgv/3lrLXLk\nKvND/rmq8iL/3DTUi8Pn86i8e1mVW5GzYtvLf75egyCqtAryHxdrcyH/OWsN\nLFfZepZj3SzhPLBS4n0MfZ6dPiuPjGXuRM6K6VL+8/bSBVGlVZD/uFiTz/Kf\nq5buWvHeYdPHzpmO8s9UFbvzwDsrTd3DSn1fQ5tH5T8vrOesb/J/ZpZuL+5r\nmCuIKq2C/MfFmnyV/1y1VDfKl6vMvfzz1Lkl9LSXtodVZSyvvSxyVhyX8p+/\nlyyIKq2C/MfFWuzkP0ctUe5cVdqeVeVJ/hlprifnz/BhwPefOmfZePZ+ppZq\nJ/95fKmCqNIqyH9crAV7V+PYOpR7/fsh3zutuix576ryUsDn+Kh8d2WRs+La\ny38eX6ogqrQK8h8Xa/BF/nPTElzJJ1eZknrYz53kn41iORXweT7K97yQnDXd\nF/nP50sURJVWQf7jYg328p+XSuaZqw4q8zywzvZ9vHPRmvaw6jnLvn9y1nLs\n5T+fL1EQVVoF+Y+LpbuU/5xUKs9cZX7If43v8yz/TBTbcwGfaz1jlbCXVc9Z\n9lx4P5slsznVe15fmiCqtAryHxdL9ln+c1GJvHOVKfk8sLLU+xiG7GE9FfD5\n1pWSschZ/fai132sIKq0CvIfF0v2Vf5zUUlKyFV2HnSU/3o+xBp62tvkfDfh\nUI8q47ywnrO+i5zVxOZW7/l9SYKo0irIf1ws1U7+c1ApSshV5l7+a/hQT/LP\nQKk9FfA5N2Wskvay6jnrWv7Pckl28p/nlyKIKq2C/MfFUtnfV97zjzfLVd/l\nvz4tac+qsua9q8pLAZ9zGxsv3uO2iT1P1/J/tkuwl/88vxRBVGkV5D8uluiL\n/OceT6XkKvND/mv1WCf5Z59cTgV83m0e5X9XVptbkbPMF/nP90sQRJVWQf7j\nYom85xwvlqts3vdeeypL6GFv4p15cu9heb2bcGjGKu28sO5O285Ze/FuwiGC\nqNIqyH9cLM2l/Oec3K6V9x02fQ5a3nlg5Vn+mSe35wI+9yE5y8aV99juylnf\n5D8XeLA513veL10QVVoF+Y+LJdnJf67J6UZl5SrzQ/5r8VRP8s86XntYTwV8\n/kMyVsl7WVvNWXvR694niCqtgvzHxZJ8lf9cs9VcZZZ6HljZQk97mxLva2hT\nesaqcpY9p95zRS4293rP/yULokqrIP9xsRRf5D/HbDVX2bnNUf7r7hwn+Wcc\nb08FfA9DPars88It5qyd/NeBUgVRpVWQ/7hYir3855cUrlTG3VVt7uW/1sbw\nIv984+2lgO9hbMZawl7WVnLWXv7rQKmCqNIqyH9cLMGF/OeWreUq2zs4yn+N\njeFP8s82pfhTAd/HWDYOvZ8HctYrm4u914MSBVGlVZD/uFgC7zllS7nK/JD/\nmhqTd6YpyYvKvq+hzaPKvSurK2fZ8+4958S0F/c1NAmiSqsg/3FRukv5zylb\nyVVm6T3s557ln2lK81zA9zI1Yy3lvHDNOcvmZO91oTRBVGkV5D8uSraT/1yy\nlVx10HrOAytP8s8ypXoq4PuZk7NsvHo/M2Nz1netJ2ft5L8+lCSIKq2C/MdF\nyb7Kfx5Ze64yP+S/Zqaw5fsY+rwU8P3MzVhL28uq56xr+c9Rc+zlvz6UJIgq\nrYL8x0Wpvsh/Dpmaq2z+9J7Hh1rbeWDlJP8MU7pTAd/TXEvMWJWl5yybo73X\niVIEUaVVkP+4KNVe/vPHmnPVQes7D6x7kX9+Kd1LAd9TDI9a3nnhGnLWXv7r\nRCmCqNIqyH9clOhC/nPHmFx1K/85eoy17llVuI9huOcCvq9YGWvJe1nmTsvL\nWZfyXy9KEESVVkH+46I0n+U/ZwxxrTLvWu9if+Mf5b8WpmR3D3hnliV50TLv\na2hj49vGufezNjdnfZP/HDfEXtzXYIKo0irIf1yU5qv854wuN1perjI/5L/2\n5UBP+3hLejfhEI9a1l1ZS89ZNmd7rxvegqjSKsh/XJRkJ/+5Ym25yqz9PLDy\nJP+sslRPBXx/sTPW0s8L6znL5h/vObDLTv7rh6cgqrQK8h8XJbG/g7zniTXl\nqoPWfx5Yx97VdC8FfH+pcpY9B97P4tpz1l7+64enIKq0CvIfF6X4Iv85onKl\n5dxd1eaH/Ne2nE7yzyhLdyrge0yVsdayl1VyzrI53Hsd8RJElVZB/uOiFN5z\nw1pyldnKeWCddzZZg5cCvseU1pSxSsxZe/mvI16CqNIqyH9clOBS5KoYDnr9\nW917HcvtWf7ZZC2eC/g+U7Lnw54T72c1Rc6yecw7Y9lc7r2eeAiiSqsg/3Hh\n7bPIVTFscc/KcB9DXC9aX697U8Za215WKTlrr232ugdRpVWQ/7jw9lXkqjns\nb/Gj/NcsL/S0x7e2+xra2HNjz4/3M5wiZ32XX86yOd17XSFfUUH+48LTTuSq\nOX7If43y9CT/LLJWTwV8vznYXta9/J/llDnrWvkz1k7+6wv5atsV5D8uPNnf\nOblylc0z3vNdTFs9D6xj7yqdlwK+35wZa43nhXW5c9Ze/usL+WrbFeQ/Lrx8\nEblqioO2fR5YOck/g6zdnwr4nnPnLHu+vJ/xteSsC/mvM+Sr7VaQ/7jwkjpX\n3cp/Lovth/zXoFJ4Z48teNG63k04NGOtfS/L3Cl9ztprO+8mDKJKqyD/ceHh\nUmmeZ5svbN7wnrtS4Dzwl2f5Z4+teC7g+/awhYxV5axvSpexbK73Xm/IV9us\nIP9xkdtO8Z9hmx/WmqsO2uadVm2e5J85tuRF2+l1P2fPnT1/3nPAknPWXtvo\ndQ+iSqsg/3GR21fFe3ZvtN5cZdizeo+e9vy2cl9Dk62cF9Zzls2rMTOWzfne\n6w75ansV5D8ucvoictUQ9jfzUf5rS2lO8s8aW3Uq4Pv3ZM+jPZfec8NSc5bN\n/d7rD/lqWxXkPy5y2mt+rvKed1L7If+1pFQv8s8ZW/VSwPfvzfay7uU/Rywx\nZ+3lv/6Qr7ZVQf7jIpcLTXsur7SNXGU4D2xndwV4Z4yt29p9DW22dF4YM2dd\nyH8dIl9tp4L8x0UOn0Wu6nIQ54FdeMdgGV60vfsa2thelj233nOHV8660rQ9\nLFsLvNcj8tU2Ksh/XOTwVeSqNpwH9qOnvRzPDt9/qSxjbXEva07OupT/ekS+\n2kYF+Y+L1HYiV7V5kP8aUbon+WcKvPWU8ftfgq1mrCpnfde4nLWT/7pEvlp/\nBfmPi9S+ilx17iDutBqKvavyvGT8/pdiq+eF5znrWtvsdQ+iSqsg/3GR0hd1\n5yp7Hr3nhdzoYR/uJP8sgWanDN//0mz5vLBuSM6ytcF7fSJfrbuC/MdFSnuR\nqyr2t+1R/mvAkrzIP0eg2UuG73+p7Dm35917zvHWlbP28l+fyFfrriD/cZHK\nhd7nqlv5P/Me6GEfj/sYyvec8PtfOtvLupf/3FOCOzXnrEv5r1Pkq/VWkP+4\nSOGzfj1D9lzZ8+X9jHvhPHA87mNYhhfR696H88K3Oeub3u5h7eS/XpGv1llB\n/uMiha9a9zuXhziI88Cp6Glfji2/m3Corfe+n6vnrK/yX6/IV+usIP9xkSJb\nbTlXmXv5z+lL9ST/zIBxniJ+/2tF7/t7tk7caB17WEFUaRXkPy5iudDrfu+t\n/J9bTw/yn8uXjL2r5XmJ+P2vHRnrvf9Xy393ThBVWgX5j4sYuao6T/8m/2fV\ny0HcaTXXSf5ZAdOcInz/W8F54Xvf9Pr3+YX81zTy1ToqyH9cTPFZze9r9n5G\nvdDDHod3RsB0LxG+/y3hvPCtO73te7+Q/zpHvlp2BfmPi7F2ar7PhDutMMez\n/DMC5nme8f1vlc0fNo94z2UlsDXk/I6spdxDGkSVVkH+42KsSzXfGer9bObG\nnVbxcB/DOryIXvcp2Mt6daf392R9lf+aR75aZgX5j4ux9nqfr27l/2zmxHlg\nXPS0rwf3NUxHxnpdS5Z4z3sQVVoF+Y+Lsc6z1bX8n8lcDuI8MLYn+WcCxPU0\n4vvHW/S+v9/D2sl/3SNfLa+C/MfFGE3va76T//OYw7385941epF/HkBcLyO+\nf7y39fNCW1PIV9TcCvIfF2Nc6u24v5H/s5jDg/zn3DXiHYPr9acB3z+6bTlj\n2dqypPcUBlGlVZD/uBhjr23dx3AQd1ql5J0BkM6LXn+34D3Glm6r54V3ev3d\n1FJ6sIKo0irIf1yMsaX7GOhhT+tZ/hkAaT13fP8YbqvnhfX7GrzXPvLV8irI\nf1wMVe+9upb/s5eK/a14lP+cumZP8l/7kd6L6HWPaWt7WXf61eu+k/8aSL5a\nVgX5j4uhLrT++xi40yoP7mPYDu5riGtre1m3el1zLuS/BpKvllVB/uNiqEut\n+x2DnAfmcZL/mo+8TvIfd2uzpYxla85X+a+B5KtlVZD/uBhqrfcxHMR5YE4v\n8l/vkdeL/MfdGm3lvNDWnL3810Dy1bIqyH9cDLHTOu9juJf/HLkl3MewXc/y\n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\nV+aHuufE7/Kfy5cuR75a4x5WzPsYyFdx2Z722Hxljko3l53kP18DWIbU2eqo\n/vnQ5lHvuXzpcuUrs6b7Gj6JfFWyW43PVwelndPodwfQJ3U/+5C9K+M9h69B\nzny1ll73D0r7OZGv5rvRtD2sB6Wb0+yckH53AG1S97Mbm+P65sHv8p/D1yBn\nvjKWTZZese9jIF/FZ3vbU/LVQWnnNvrdATRJ3c9eOYizwVxy56ul72F9VPrP\niHwVx62mZax7pc9Y3nM5gLKk7rkyffcxcDYYV+58ZYKWWb8pz+dDvorjRtP3\nsI5KO8+d5D+fAyhDjmz1qGHz33f5z91r4ZGvlvpuwk8iXy3JtablK/ND6ec7\n+t0B5OhnNzanDZn7bN70nrvXwiNfmU9aVqW8j4F8lc6tpmeso9LOd/S7A9uW\no5/dHDV83vOes9fEK1+ZJe1hfRL5aoluND1fHZR+3qPfHdimXP3sY/auvst/\nzl4Tz3y1lF73D8r7uZCv4rnW9HxlHpQnY3nP9QDyytFzZWwOGzrf2XzpPWev\niWe+MpZdSq/cnwn5Kp4rzctXB+WZA0/yn+8B5JErW5kx8533fL023vmq9D2s\nIPLV0n3XvIx1rzzzIP3uwPrl6mc3NncNnedsnvSeq9fGO1+ZoDIrZ087+Sqd\na83fwzoq/VxIvzuwbrn62c1R4+Y5mye95+q1KSFflXpfwyeRr9bgSvPylfmh\nPHMi/e7AOtlznStbGZuzOBv0VUK+Mp9UVnntXZGv0rjV/Ix1VL6M5b0WAIgr\nZ8/VUePmtu/yn6PXqJR8ZUraw0r9jkHyVV7Xmp+vDso3P57kvx4AiCNntjIH\njZvbvsl/jl6jkvJVKb3uH+X7OZCv4rvS/Hxl7P1dueZI+t2B5cvZz26GvmOQ\ns8H0SspXxrKNd3l/BuSrNG4VZw/rUXnmSfrdgWXL2c9eGTunfZf/3LxWpeUr\n28P6TX4VGv6ZyFfrcK04e1j3yjdX0u8OLJM9t7mzlc1NY+czzgbTKS1fmSCf\n8uxpJ1+ld6U4+coclTdjea8VAMbJ3XN11LS5zHteXrMS85Xx6HX/NOOfl3y1\nDLeKk69+KO/ceZL/egFgmNzZyticxNlgWUrNV5+Utz5E/GcnX5XrWvH2sB6U\nd/6k3x0oX+5+dmNz0ZQ5jLPBtErNV8YyT67yvI+BfLVMV4qX1YY4KO+5JIBx\n7PnMOSdUruQ/H+K9kvNVrvsaPmb8dxriMxbjQq9zWy5/rV9ZC0A5qpyT2+/k\nPw+imXeW6BOUvj4AE33U61l2Tv/LT18BFOUfKv9cYLznQCxXSXe6UxRFURRF\nURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRFURRF\nURRFURRFURRFURRFURRFURRFURRFURRFURuu/wbwRF/u\n      "
                 ],
                 {{0, 313.2}, {360.0, 0}},
                 {0, 255},
                 ColorFunction -> RGBColor,
                 ImageResolution -> 120.0
                ],
                BoxForm`ImageTag[
                 "Byte",
                 ColorSpace -> "RGB",
                 Interleaving -> True
                ],
                Selectable -> False
               ],
               DefaultBaseStyle -> "ImageGraphics",
               ImageSizeRaw -> {360.0, 313.2},
               PlotRange -> {{0, 360.0}, {0, 313.2}}
              ],
              ",",
              GraphicsBox[
               TagBox[
                RasterBox[
                 CompressedData[
                  "\n1:eJzt3T+MZEuW3/cfJOKBEECAQFtjKeS0xbXW4fMunQcIaDnTEKCWwyTBXUJA\nawlMCxCeVetMWU2H6WisHIftqK1Zh20lHT6L1tLZttKadVgW5bAdSXVQe9FZ\nWfdm3j8Rcc6993uADwESNN5URUb8Os6pyP/hn/+rX//5fyPpw99//D9+/c/+\nz3/ym9/8s5/f/sPH/8v//Bcf/rd/+Rd/9i/+x7/4P/7sX/7Zb/7xP/9vH/8f\n/7vH/7//y6O/J4qiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi\nKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKGpFlR79KTDDj4/e\nPfpzhPTzo/eP7h99CPDfg+d2evoMeX+OsWxJVLRK8l8XGO5NML9+9JtHdwjn\nt4/+70d/8+j06N89+sOjz48+Bvjvw3eWge2z5P15vsV7/0O/JCpaJfmvCwzz\nVv7/1j5ndyJ2Tv8O4fzVo2+P/r8O//Hv/KKnrOX934onez19prw/19fYHuS9\nD6JbEhWtkvzXBW77Uf57K9kqPruf+lt156rWf9H3jNXmrD8E+G9H/Iy1e9TI\nfz/ES0lUtEryXxe47Z3891ayVVyWjywrfdP1bNWy/39/LXJWRHvFzljv5L8f\n4qUkKlol+a8LXNfIf08lW8XU5qo/aliuusxYf9TzjEXOimGv2Bmrkf++iOeS\nqGiV5L8ucN1O/vsp2SqOg77nKruDsn7f2Gx12S+8vMsiZ/nbK27G2sl/X8Rz\nSVS0SvJfF+j3k/z3UrJVDOe5ynzVvFw15C6LnOVrr7gZi78njCWJilZJ/usC\n/bz3ULKVv8tcNbUfOERfxjrPWYcAP5Mt2StmxtqJd7siSaKiVZL/ukC3t/Lf\nQ8lWfrpyVY5+4JTZd3KWr71iZizbo7z3STxJoqJVkv+6wEuN/PdOspWPrlxl\nTiqbq4b2C89z1heRs2rZK17G2olZ9yiSqGiV5L8u8NI7ka22pi9XmQfVy1ZD\n+4WXOetTgJ/h2u0VL2O9k/9+CfJVxEryXxd47ieRrbbEctUXdWcX69N9k0+2\nGtovPGf/O8hZZe0VL2PZnuW9b25dEhWtkvzXBZ7biWy1BddyVckZ9lL9wss7\nLXJWOXvFylg7+e+bW5dERask/3WB7+xvnslW62a56qj+bFJjhn2qvreyyFn1\n7RUrY72V//65ZUlUtEryXxd48qPIVmtmOcPyxrU88lX+GSr3XVabsz4H+B2s\nzV5xMtZOvNfgKYmKVkn+6wJP3olstUY2s34rV0XrBw4xNmO1OYu3SvPaK07G\neiv/fXSrkqholeS/LuD3HgPZqpyhuSpyP3DIXdaYfiE5q4y94mSsRv776RYl\nUdEqyX9dwOfuimxVRt8bC11O8s9IOTLWlLssclZee8XIWDv576dblERFqyT/\ndbF1P4lstXQHjctVZql3Vn2mZixyVj57xchYtqd576tbk0RFqyT/dbF1O5Gt\nlmpKrorwplXJu6wp/UJyVj57+Wesnfz31a1JoqJVkv+62LI3Ilst0ZRcZZY2\nwz41Y825yzrPWYcAv+sl2ss/Y72V//66JUlUtEryXxdb9aPIVkszNVcteYbd\n6y6LnDXPXr4Zaydm3WtKoqJVkv+62Kp3IlstxdRcZb7KP+ss+S6rzVlfRM4a\nay/fjPVO/vvsViRR0SrJf11sUSOy1RLMyVVb6QcOkSNjneesT5V+/2uwl2/G\nauS/325BEhWtkvzXxRa9E9kqMstVXzQ9B2yxH3jLN83vF56z3w85a5i9/DLW\nTv777RYkUdEqyX9dbM1PIltFNTdXmZP8s0xU35TvLqt1FDlriL38Mpbted77\n7tolUdEqyX9dbA3ZKh7LVXZOzznnubMaLnfGanuH5Kzr9vLJWDv577trl0RF\nqyT/dbElb0W2isTOYzuX557ta37TqhT7eX3N8LPvylmfB/7+t2gvn4xle5/3\n/rtmSVS0SvJfF1vRiGwVxdDvBhyCGfZ5GavEXRY567q96mesnZh1LymJilZJ\n/utiK96JbOUtZ66iH5g3Z+Wcfb/MWbwJ/9Je9TPWO/nvw2uVREWrJP91sQWN\nyFae5ryx0OWr/DPJ2nxTubsscla3vepnrEb++/EaJVHRKsl/XWzBTmSr2g7K\nn6sM/cCySmYsctZLe9XNWDv578drlERFqyT/dbF2b0S2qqlUrqIfWM83lesX\nkrNe2qtuxrI90XtfXpskKlol+a+LtSNb1VEqV5mT/DPH1nxT+bus85xl68d7\nDXvaq17G2unp+1e99+Y1SaKiVZL/uliztyJblVYyV3Fn5a9GxiJn1c9Ytjd6\n789rkkRFqyT/dbFWjchWS81Vbbb6Jv98gXJvZfXlrC/abs7aq17GauS/T69F\nEhWtkvzXxVq9E9mqhNK5yjDDHs831bvLOs9Zn+S/5teasWyP9N6n1yKJilZJ\n/utijX4S2apErrLzruSZSj8wvm8qP/t+aYs5a686Gcv2Su/9eg2SqGiV5L8u\n1mgnstWScpX5Kv/sgOEZq+ZdVuuobeWsvcpnrJ389+s1SKKiVZL/ulibNyJb\n5cpVdp7VODfpBy6TR8Yyv2g7OWuv8hnrrfz37aVLoqJVkv+6WJMfRbaay84t\nO79qnJP0A5fvm+r3C89z1mf5f2aWnrF24r2GuZKoaJXkvy7W5J3IVlPl/G7A\nIU7yzwbIl7G87rK2krP2Kpux3sp//16yJCpaJfmvi7VoRLZaQq7izmq9Hgb8\n/kvnrDW/Cb9X2YzVyH8fX6okKlol+a+LtXgnstXYXFX7/Psq3rRau2+q91bW\nFnPWXuUy1k7++/hSJVHRKsl/XazBTyJbDXGQT64yzLBvxzf59gvXnrP2Kpex\nbC/13s+XKImKVkn+62INdiJbRc1V9AO365v8Zt/XnrP2KpOxdvLfz5coiYpW\nSf7rYuneimwVMVeZr/I/4+GfsSLcZZ3nrIP8P5uRM5btqd77+tIkUdEqyX9d\nLNmPIltFzFWGfiDORclYa8tZe+XPWDsx6z5WEhWtkvzXxZK9E9kqWq6iH4g+\n3xSjX3ies75o+Tlrr/wZy/ZW7/19SZKoaJXkvy6WqhHZKlKuMif5n+GIzTJW\npLus85z1Sf6f5UgZq5H/Pr8USVS0SvJfF0tl/77aerY6qM53A97CnRXGsvXi\nvW67LDln7ZU3Y+3kv88vRRIVrZL818US/aRtZ6uDYuQq81X+ZzWW6Zv838rq\nc9Qyc9ZeeTOW7bXe+/0SJFHRKsl/XSzRVrPVQfW+c3kIZtgxl2WsaP3Cc9Y7\nXFrO2itfxtqJ7yYcIomKVkn+62Jp3mp72cr2d9vnvc+aFv1A5GY5K9Lse1fO\n+iz/vcAjY9me673vR5dERask/3WxJI22la1qfzfgEF/lfxZjnSxjRb7LWlrO\n2itPxtqJWfdbkqholeS/LpbknbaRrSLmKkM/EDVEz1htzlrCm/B75clYtvd6\n7/+RJVHRKsl/XSyFzVmuPVtFzVX0A1HbN8XuFy4pZ+2VJ2M18j8HokqiolWS\n/7pYip3Wma0OivF2VZ+T/M9abJNlrCXcZS0hZ+01P2Pt5H8ORJVERask/3Wx\nBG+0vmx1UOxcxZ0Vooj6VtbSctZe8zOW7cXe50FESVS0SvJfF0uwpmx1UOxc\nZb7K/0wFzn1T3LeyruWsg/z3nJwZayfea+iSREWrJP91Ed1brSNb2T4bPVcZ\nZtgRlWWspfQLI+esveZlLNuTvc+FaJKoaJXkvy4ia7T8bGX76hJyFf1ALIXl\nrCXMvl/mrC+Kk7P2mpexGvmfD5EkUdEqyX9dRPZOy81Wto8uIVeZr/I/M4Ex\nLGMt7S7rPGd9kv8etdf0jLWT//kQSRIVrZL810VUP2mZ2eqgON8NOAT9QCzZ\nEjNWK0LO2mt6xrI92vuciCKJilZJ/usiqp2Wla0OWlauoh+Itfim5fULI+Ws\nvaZlrJ38z4kokqholeS/LiJ6o+Vkq4NifefyENxZYW0sYy35LstY79ArZ+01\nLWO9lf95EUESFa2S/NdFND9qGdnK9kHbD7335DG4s8La2fpe8l1Wm7M+axkZ\nayfeazBJVLRK8l8X0bxT7GwV9Ttsbvkq/7MPqMHusmy9e3/mlpiz9hqfsWzP\n9j43vCVR0SrJf11E0ihutlpqrjL0A7E1lrGW3i88z1k134Tfa3zGauR/fnhK\noqJVkv+6iOTa3ZVXtlpyrqIfiK2znLX0fqFHztprXMbayf/88JRERask/3UR\nhf2tb5RsddBy3q7q81X+ZxsQwZrusmrmrL3GZSzbw73PES9JVLRK8l8XUUTI\nVgctP1cZ+oHAS2vKWLVy1l7DM9ZO/ueIlyQqWiX5r4sI3so3Wx20jlxlfRD7\nt7r3OQZEZZ+PtfQLL3PWQf4Zy/Zy7/PEQxIVrZL814W3H+WXrWw/WkOuMtxZ\nAcNYxlrbXVbpnDU0Y+20zVn3JCpaJfmvC2/vVD9b2f6zllzFDDswzRreyurL\nWV+UP2cNzVi2p3ufK+QrKsl/XXhqVDdb2X6zllxlvsr/jAKWzO6yTvL/LJfM\nWZ9UP2M18j9fyFfbriT/deHp8u6qVLY6aFnfDTgE/UAgD8tYa+wXnsuZs4Zk\nrJ38zxfy1bYryX9deLl8j6FEtjpofbmKfiBQhuWsNfYLS+SsIRnrjfzPGfLV\ndivJf114KZmtDlredy4PQT8QKGsLd1nGeodzc9atjLXTdr6bMImKVkn+68LD\nW5XJVrZf2L7hvXeVQD8QqGcLGavNWZ9VLmPZXu993pCvtllJ/uuitkb5s5Xt\n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\nteiweg==\n      "
                 ],
                 {{0, 313.2}, {360.0, 0}},
                 {0, 255},
                 ColorFunction -> RGBColor,
                 ImageResolution -> 120.0
                ],
                BoxForm`ImageTag[
                 "Byte",
                 ColorSpace -> "RGB",
                 Interleaving -> True
                ],
                Selectable -> False
               ],
               DefaultBaseStyle -> "ImageGraphics",
               ImageSizeRaw -> {360.0, 313.2},
               PlotRange -> {{0, 360.0}, {0, 313.2}}
              ]
             }
            ],
            "}"
           }
          ]
         ],
         "Output",
         CellTags -> "Certification",
         CellLabel -> "Out[171]="
        ]
       },
       {1}
      ]
     ],
     Cell[
      CellGroupData[
       {
        Cell[
         BoxData[
          StyleBox[
           DynamicBox[
            ToBoxes[SolutionResponseText["x"], StandardForm],
            ImageSizeCache -> {123.95, {3.0, 9.0}}
           ],
           "SolutionResponseText"
          ]
         ],
         "Subsection",
         Editable -> False,
         Selectable -> False,
         Deletable -> False,
         ShowCellBracket -> False,
         CellMargins -> {{24, 25}, {3, 0}},
         CellFrameMargins -> {{8, 0}, {0, 0}},
         TextAlignment -> Right,
         ShowStringCharacters -> False,
         FontFamily -> "Source Sans Pro",
         FontSize -> 12,
         FontWeight -> "Plain",
         FontSlant -> "Plain",
         Background -> GrayLevel[1]
        ],
        Cell[
         BoxData[
          RowBox[
           {
            "FoldList",
            "[",
            RowBox[
             {
              "ImageAdd",
              ",",
              " ",
              RowBox[
               {
                "Table",
                "[",
                RowBox[
                 {
                  RowBox[
                   {
                    "Graphics",
                    "[",
                    RowBox[
                     {
                      "{",
                      RowBox[
                       {
                        RowBox[{"Opacity", "[", "0.2", "]"}],
                        ",",
                        RowBox[{"RegularPolygon", "[", "n", "]"}]
                       }
                      ],
                      "}"
                     }
                    ],
                    "]"
                   }
                  ],
                  ",",
                  RowBox[
                   {
                    "{",
                    RowBox[
                     {
                      "n",
                      ",",
                      " ",
                      RowBox[{"Range", "[", RowBox[{"3", ",", "8"}], "]"}]
                     }
                    ],
                    "}"
                   }
                  ]
                 }
                ],
                "]"
               }
              ]
             }
            ],
            "]"
           }
          ]
         ],
         "Input",
         CellLabel -> "In[71]:= "
        ]
       },
       Open
      ]
     ]
    },
    Open
   ]
  ],
  Cell[
   BoxData[PaneBox["\[ThickSpace]", ImageSize -> Full]],
   "CodeSectionDividerCloud",
   Editable -> False,
   Selectable -> False,
   Deletable -> False,
   CellMargins -> {{0, 0}, {0, 30}},
   CellBracketOptions -> {"OverlapContent" -> True}
  ]
 },
 Saveable -> True,
 ScreenStyleEnvironment -> "Working",
 CellInsertionPointCell -> None,
 WindowTitle -> "29 | Exercises: More about Pure Functions",
 DockedCells -> {
  Cell[
   BoxData[
    DynamicModuleBox[
     { },
     StyleBox[
      TagBox[
       GridBox[
        {
         {
          PaneBox[
           "\"29 | Exercises: More about Pure Functions\"",
           ImageSize -> Full,
           ImageMargins -> {{15, 10}, {4, 0}}
          ],
          ButtonBox[
           StyleBox[
            "\"Download Notebook \[RightGuillemet]\"",
            13,
            GrayLevel[1],
            StripOnInput -> False
           ],
           ButtonFunction :>
            FrontEndExecute[
             {
              NotebookLocate[
               {
                URL[
                 URLBuild[
                  {
                   $CloudBase,
                   "files",
                   Information[$EvaluationCloudObject, "UUID"]
                  },
                  {"contentDisposition" -> "attachment"}
                 ]
                ],
                None
               }
              ]
             }
            ],
           Method -> "Queued",
           Appearance -> None,
           Evaluator -> Automatic
          ]
         }
        },
        AutoDelete -> False,
        GridBoxFrame -> {"Columns" -> None, "Rows" -> None},
        GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}
       ],
       "Grid"
      ],
      "Text",
      GrayLevel[1],
      FontSize -> 18,
      StripOnInput -> False
     ],
     DynamicModuleValues :> { },
     Initialization :>
      (Clear[SolutionResponseText];
      
      SolutionResponseText[
       Pattern[WebsiteBuilder`Private`a, BlankNullSequence[]]
      ] := 
       " ";

      
      Map[
       (SolutionResponseText[#1] := " ") &,
       {
        "029.1",
        "029.2",
        "029.3",
        "029.4",
        "029.5",
        "029.6",
        "029.7"
       }
      ];

      Clear[SolutionResponseDetails];
      
      SolutionResponseDetails[
       Pattern[WebsiteBuilder`Private`str, Blank[String]],
       True
      ] := 
       Style[WebsiteBuilder`Private`str, "SolutionTrue"];

      
      SolutionResponseDetails[
       Pattern[WebsiteBuilder`Private`str, Blank[String]],
       False
      ] := 
       Style[WebsiteBuilder`Private`str, "SolutionFalse"];

      
      SolutionResponseDetails[
       Pattern[WebsiteBuilder`Private`str, Blank[String]]
      ] := 
       WebsiteBuilder`Private`str;

      SolutionResponseDetails[Missing[BlankSequence[]]] := " ";
      SolutionResponseDetails[BlankNullSequence[]] := " ";
      Clear[GetUserSolutions];
      
      GetUserSolutions[] := 
       Flatten[
        Cases[
         Options[EvaluationNotebook[], TaggingRules],
         ("EIWLExercises" ->
          Pattern[WebsiteBuilder`Private`ex, Blank[]]
) :> WebsiteBuilder`Private`ex,
         Infinity
        ]
       ];

      Clear[GetUserSolutionsTotal];
      
      GetUserSolutionsTotal[] := 
       Length[
        Union[
         Flatten[
          Cases[
           Cases[
            Options[EvaluationNotebook[], TaggingRules],
            ("EIWLExercises" ->
             Pattern[WebsiteBuilder`Private`ex, Blank[]]
) :> WebsiteBuilder`Private`ex,
            Infinity
           ],
           ("ExercisesTotal" ->
            Pattern[WebsiteBuilder`Private`t, Blank[]]
) :> WebsiteBuilder`Private`t,
           Infinity
          ]
         ]
        ]
       ];

      Clear[GetUserSolutionsTried];
      
      GetUserSolutionsTried[] := 
       Length[
        Union[
         Flatten[
          Cases[
           Cases[
            Options[EvaluationNotebook[], TaggingRules],
            ("EIWLExercises" ->
             Pattern[WebsiteBuilder`Private`ex, Blank[]]
) :> WebsiteBuilder`Private`ex,
            Infinity
           ],
           ("ExercisesTried" ->
            Pattern[WebsiteBuilder`Private`t, Blank[]]
) :> WebsiteBuilder`Private`t,
           Infinity
          ]
         ]
        ]
       ];

      Clear[GetUserSolutionsCorrect];
      
      GetUserSolutionsCorrect[] := 
       Length[
        Union[
         Flatten[
          Cases[
           Cases[
            Options[EvaluationNotebook[], TaggingRules],
            ("EIWLExercises" ->
             Pattern[WebsiteBuilder`Private`ex, Blank[]]
) :> WebsiteBuilder`Private`ex,
            Infinity
           ],
           ("ExercisesCorrect" ->
            Pattern[WebsiteBuilder`Private`t, Blank[]]
) :> WebsiteBuilder`Private`t,
           Infinity
          ]
         ]
        ]
       ];

      EIWLExerciseSolutionsTotal = GetUserSolutionsTotal[];
      EIWLExerciseSolutionsTried = GetUserSolutionsTried[];
      EIWLExerciseSolutionsCorrect = GetUserSolutionsCorrect[];
      Clear[SetUserSolutionsTried];
      
      SetUserSolutionsTried[
       Pattern[WebsiteBuilder`Private`value, Blank[]]
      ] := 
       Module[ { WebsiteBuilder`Private`data, WebsiteBuilder`Private`tr },
        
        WebsiteBuilder`Private`data = 
         Flatten[
          Cases[
           Options[EvaluationNotebook[], TaggingRules],
           ("EIWLExercises" ->
            Pattern[WebsiteBuilder`Private`ex, Blank[]]
) :> WebsiteBuilder`Private`ex,
           Infinity
          ]
         ];

        
        WebsiteBuilder`Private`tr = 
         ReplaceAll[
          TaggingRules,
          Options[EvaluationNotebook[], TaggingRules]
         ];

        
        WebsiteBuilder`Private`tr = 
         DeleteCases[
          WebsiteBuilder`Private`tr,
          "EIWLExercises" -> Blank[],
          Infinity
         ];

        
        AppendTo[
         WebsiteBuilder`Private`tr,
         "EIWLExercises" -> {
          "ExercisesTotal" ->
           ReplaceAll["ExercisesTotal", WebsiteBuilder`Private`data],
          "ExercisesTried" ->
           Append[
            Flatten[
             Cases[
              WebsiteBuilder`Private`data,
              ("ExercisesTried" ->
               Pattern[WebsiteBuilder`Private`t, Blank[]]
) :> WebsiteBuilder`Private`t,
              Infinity
             ]
            ],
            WebsiteBuilder`Private`value
           ],
          "ExercisesCorrect" ->
           ReplaceAll["ExercisesCorrect", WebsiteBuilder`Private`data]
         }
        ];

        
        SetOptions[
         EvaluationNotebook[],
         TaggingRules -> WebsiteBuilder`Private`tr
        ];

        EIWLExerciseSolutionsTried = GetUserSolutionsTried[];
       ];

      Clear[SetUserSolutionsCorrect];
      
      SetUserSolutionsCorrect[
       Pattern[WebsiteBuilder`Private`value, Blank[]]
      ] := 
       Module[ { WebsiteBuilder`Private`data, WebsiteBuilder`Private`tr },
        
        WebsiteBuilder`Private`data = 
         Flatten[
          Cases[
           Options[EvaluationNotebook[], TaggingRules],
           ("EIWLExercises" ->
            Pattern[WebsiteBuilder`Private`ex, Blank[]]
) :> WebsiteBuilder`Private`ex,
           Infinity
          ]
         ];

        
        WebsiteBuilder`Private`tr = 
         ReplaceAll[
          TaggingRules,
          Options[EvaluationNotebook[], TaggingRules]
         ];

        
        WebsiteBuilder`Private`tr = 
         DeleteCases[
          WebsiteBuilder`Private`tr,
          "EIWLExercises" -> Blank[],
          Infinity
         ];

        
        AppendTo[
         WebsiteBuilder`Private`tr,
         "EIWLExercises" -> {
          "ExercisesTotal" ->
           ReplaceAll["ExercisesTotal", WebsiteBuilder`Private`data],
          "ExercisesTried" ->
           ReplaceAll["ExercisesTried", WebsiteBuilder`Private`data],
          "ExercisesCorrect" ->
           Append[
            Flatten[
             Cases[
              WebsiteBuilder`Private`data,
              ("ExercisesCorrect" ->
               Pattern[WebsiteBuilder`Private`t, Blank[]]
) :> WebsiteBuilder`Private`t,
              Infinity
             ]
            ],
            WebsiteBuilder`Private`value
           ]
         }
        ];

        
        SetOptions[
         EvaluationNotebook[],
         TaggingRules -> WebsiteBuilder`Private`tr
        ];

        EIWLExerciseSolutionsCorrect = GetUserSolutionsCorrect[];
       ];

      Clear[WebsiteBuilder`Private`GetCurrentTallyCell];
      GetCurrentTallyCell[] := 
       Module[ {  },
        With[
         {
          WebsiteBuilder`Private`solutionsTried = 
           GetUserSolutionsTried[],
          WebsiteBuilder`Private`solutionsTotal = 
           GetUserSolutionsTotal[],
          WebsiteBuilder`Private`solutionsCorrect = 
           GetUserSolutionsCorrect[]
         },
         Cell[
          BoxData[
           PaneBox[
            TemplateBox[
             {
              StyleBox[
               "COMPLETED\[ThickSpace]\[ThickSpace]",
               "DockedCellCompletedExerciseText"
              ],
              StyleBox[
               WebsiteBuilder`Private`solutionsTried,
               "DockedCellCompletedExerciseText"
              ],
              StyleBox["/", "DockedCellSolutionDivider"],
              StyleBox[
               WebsiteBuilder`Private`solutionsTotal,
               "DockedCellCompletedExerciseText"
              ],
              StyleBox[
               "\[ThinSpace]|\[ThinSpace]",
               "DockedCellSolutionDivider"
              ],
              StyleBox[
               WebsiteBuilder`Private`solutionsCorrect,
               "DockedCellCorrectExerciseText"
              ],
              StyleBox[
               "\[ThickSpace]\[ThickSpace]CORRECT",
               "DockedCellCorrectExerciseText"
              ]
             },
             "RowDefault"
            ],
            Alignment -> Right,
            ImageSize -> Full
           ]
          ],
          "Output",
          TextAlignment -> Right,
          CellFrame -> 1,
          CellMargins -> {{0, 0}, {10, 0}},
          CellFrameMargins -> {{14, 24}, {4, 7}},
          CellFrameColor -> RGBColor[1, 0.95686, 0.87843],
          MenuSortingValue -> 10000,
          Background -> RGBColor[1, 0.95686, 0.87843],
          CellTags -> "SolutionTallyCell"
         ]
        ]
       ])
    ]
   ],
   "Output",
   CellMargins -> 0,
   CellFrameMargins -> {{0, 24}, {3, 6}},
   Background -> RGBColor[0.97647, 0.48235, 0],
   CellFrame -> 1,
   CellFrameColor -> RGBColor[0.97647, 0.48235, 0]
  ]
 },
 TaggingRules -> {
  "EIWLExercises" -> {
   "ExercisesTotal" -> "ExercisesTotal",
   "ExercisesTried" -> {"29.5", "29.5", "29.6", "29.7", "29.1"},
   "ExercisesCorrect" -> {"ExercisesCorrect", "29.5", "29.6", "29.7", "29.1"}
  }
 },
 CellContext -> CellGroup,
 ShowCellTags -> False,
 FrontEndVersion -> "13.2 for Linux ARM (64-bit) (February 23, 2023)",
 StyleDefinitions ->
  Notebook[
   {
    Cell[StyleData[StyleDefinitions -> "Default.nb"]],
    Cell[
     CellGroupData[
      {
       Cell["Style Environments", "Section"],
       Cell[StyleData[All, "Working"]],
       Cell[
        StyleData[All, "Printout"],
        PrintingOptions -> {
         "PageSize" -> {504, 720},
         "PrintRegistrationMarks" -> True
        },
        Magnification -> 0.6
       ]
      },
      Open
     ]
    ],
    Cell[
     CellGroupData[
      {
       Cell["Custom Styles", "Section"],
       Cell[
        StyleData["Notebook"],
        ShowCellBracket -> Automatic,
        CreateCellID -> True,
        CellContext -> Notebook,
        CellLabelAutoDelete -> False,
        DefaultNewCellStyle -> "Input",
        ShowSyntaxStyles -> True,
        MenuSortingValue -> None
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["Title"],
           CellMargins -> {{64, Inherited}, {50, 72}},
           MenuCommandKey :> None,
           FontFamily -> "Verdana",
           FontSize -> 42,
           FontWeight -> "Bold",
           FontColor -> GrayLevel[0.4]
          ],
          Cell[
           StyleData["Title", "Printout"],
           CellMargins -> {{64, Inherited}, {50, 72}}
          ]
         },
         Closed
        ]
       ],
       Cell[StyleData["Chapter"], MenuCommandKey :> None],
       Cell[StyleData["Subchapter"], MenuCommandKey :> None],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["Section"],
           CellFrame -> {{0, 0}, {0, 0}},
           CellDingbat ->
            Cell[
             TextData[
              CounterBox["Section"],
              StyleBox[
               "|\[NegativeThinSpace]",
               FontColor -> RGBColor[0.90196, 0.41176, 0.027451],
               FontFamily -> "Courier",
               FontSize -> 36,
               FontWeight -> Plain
              ]
             ],
             "SectionNumber"
            ],
           CellMargins -> {{96, Inherited}, {12, 64}},
           Evaluatable -> True,
           CellGroupingRules -> {"SectionGrouping", 60},
           PageBreakAbove -> True,
           ShowCellLabel -> False,
           CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}},
           CounterIncrements -> "Section",
           CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}},
           FontFamily -> "Source Sans Pro Semibold",
           FontSize -> 26,
           FontSlant -> "Plain",
           FontColor -> RGBColor[0.90196, 0.41176, 0.027451],
           InterpretationBoxOptions -> {Editable -> True}
          ],
          Cell[
           StyleData["Section", "Printout"],
           CellMargins -> {{96, Inherited}, {12, 2}}
          ]
         },
         Closed
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["SectionDoubleDigit"],
           CellFrame -> {{0, 0}, {0, 0}},
           CellDingbat ->
            Cell[
             TextData[
              CounterBox["Section"],
              StyleBox[
               "|\[NegativeThinSpace]",
               FontColor -> RGBColor[0.90196, 0.41176, 0.027451],
               FontFamily -> "Courier",
               FontSize -> 36,
               FontWeight -> Plain
              ]
             ],
             "SectionNumber"
            ],
           CellMargins -> {{112, Inherited}, {12, 64}},
           Evaluatable -> True,
           CellGroupingRules -> {"SectionGrouping", 60},
           PageBreakAbove -> True,
           ShowCellLabel -> False,
           CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}},
           CounterIncrements -> "Section",
           CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}},
           FontFamily -> "Source Sans Pro Semibold",
           FontSize -> 26,
           FontSlant -> "Plain",
           FontColor -> RGBColor[0.90196, 0.41176, 0.027451],
           InterpretationBoxOptions -> {Editable -> True}
          ],
          Cell[
           StyleData["SectionDoubleDigit", "Printout"],
           CellMargins -> {{112, Inherited}, {12, 2}}
          ]
         },
         Closed
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["SectionNumber"],
           CellBaseline -> Baseline,
           FontFamily -> "Source Sans Pro Semibold",
           FontSize -> 26,
           FontColor -> RGBColor[0.90196, 0.41176, 0.027451]
          ],
          Cell[StyleData["SectionNumber", "Printout"]]
         },
         Closed
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["SectionInline"],
           FontFamily -> "Source Sans Pro Semibold",
           FontColor -> RGBColor[0.90196, 0.41176, 0.027451]
          ],
          Cell[StyleData["SectionInline", "Printout"]]
         },
         Closed
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["SectionNoDingbat"],
           CellMargins -> {{64, Inherited}, {12, 64}},
           Evaluatable -> True,
           CellGroupingRules -> {"SectionGrouping", 60},
           PageBreakAbove -> True,
           ShowCellLabel -> False,
           CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}},
           CounterIncrements -> "Section",
           CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {"Exercise", 0}},
           FontFamily -> "Source Sans Pro Semibold",
           FontSize -> 26,
           FontSlant -> "Plain",
           FontColor -> RGBColor[0.90196, 0.41176, 0.027451],
           InterpretationBoxOptions -> {Editable -> True}
          ],
          Cell[
           StyleData["SectionNoDingbat", "Printout"],
           CellMargins -> {{64, Inherited}, {12, 2}}
          ]
         },
         Closed
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["Exercise"],
           CellDingbat ->
            Cell[
             TextData[
              {"  ", CounterBox["Section"], ".", CounterBox["Exercise"]}
             ],
             "ExerciseNumber",
             FontColor -> RGBColor[0.90196, 0.41176, 0.027451]
            ],
           ShowCellBracket -> False,
           ShowGroupOpener -> False,
           CellMargins -> {{86, 10}, {4, 18}},
           CellGroupingRules -> "InputGrouping",
           CounterIncrements -> "Exercise",
           MenuSortingValue -> 10020,
           MenuCommandKey :> "2",
           FontFamily -> "Source Sans Pro",
           FontSize -> 16,
           FontWeight -> "Plain",
           FontSlant -> "Plain",
           FontColor -> GrayLevel[0.25]
          ],
          Cell[
           StyleData["Exercise", "Printout"],
           ShowGroupOpener -> False,
           CellMargins -> {{110, Inherited}, {4, 8}}
          ]
         },
         Closed
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["ExerciseNumber"],
           FontFamily -> "Source Sans Pro",
           FontSize -> 16,
           FontWeight -> "Bold",
           FontColor -> GrayLevel[0.25]
          ],
          Cell[StyleData["ExerciseNumber", "Printout"]]
         },
         Closed
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData[
            "ExerciseInput",
            StyleDefinitions -> StyleData["Input"]
           ],
           CellMargins -> {{55, 30}, {4, 7}},
           ShowCellLabel -> False,
           CellFrameLabels -> {{None, None}, {None, None}},
           SpanMaxSize -> 1,
           FontSize -> 14,
           GeneratedCellStyles -> {"Output" -> "ExerciseOutput"}
          ],
          Cell[
           StyleData["ExerciseInput", "Printout"],
           CellMargins -> {{88, 10}, {4, 7}}
          ]
         },
         Closed
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData[
            "ExerciseOutput",
            StyleDefinitions -> StyleData["Output"]
           ],
           CellMargins -> {{55, 15}, {0, 6}},
           CellGroupingRules -> "OutputGrouping",
           ShowCellLabel -> False,
           FontSize -> 14
          ],
          Cell[
           StyleData["ExerciseOutput", "Printout"],
           CellMargins -> {{88, 10}, {10, 4}}
          ]
         },
         Closed
        ]
       ],
       Cell[
        StyleData["ExerciseExpectedResult"],
        ShowCellBracket -> False,
        ShowGroupOpener -> False,
        CellMargins -> {{65, 40}, {1, 14}},
        CellGroupingRules -> "InputGrouping",
        CounterIncrements -> "Exercise",
        MenuSortingValue -> 10000,
        FontFamily -> "Source Sans Pro",
        FontSize -> 12,
        FontWeight -> "Plain",
        FontSlant -> "Plain"
       ],
       Cell[
        StyleData["ExerciseNumberColor"],
        ShowStringCharacters -> False,
        FontFamily -> "Source Sans Pro",
        FontSize -> 16,
        FontWeight -> "Bold",
        FontColor -> RGBColor[0.90196, 0.41176, 0.027451]
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["Picture"],
           CellMargins -> {{66, 10}, {10, 10}},
           CellGroupingRules -> "GraphicsGrouping",
           StyleMenuListing -> None
          ],
          Cell[
           StyleData["Picture", "Printout"],
           CellMargins -> {{66, 10}, {8, 8}}
          ]
         },
         Closed
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["Tentative"],
           CellBracketOptions -> {"Color" -> RGBColor[0.3, 0.6, 0.7], "Thickness" -> 5},
           Evaluatable -> False,
           CellFrameMargins -> 4,
           StyleMenuListing -> None,
           Background -> RGBColor[0.85, 0.95, 1]
          ],
          Cell[
           StyleData["Tentative", "Printout"],
           CellElementSpacings -> {"CellMinHeight" -> 0.1},
           CellOpen -> False,
           CellFrameMargins -> 0,
           FontSize -> 0.1,
           Magnification -> 0.01
          ]
         },
         Closed
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell[
           StyleData["WebOnly"],
           CellBracketOptions -> {"Color" -> RGBColor[0.91, 0.92, 0.9], "Thickness" -> 5},
           CellFrameMargins -> 4,
           StyleMenuListing -> None,
           Background -> RGBColor[0.91, 0.92, 0.86]
          ],
          Cell[
           StyleData["WebOnly", "Printout"],
           CellElementSpacings -> {"CellMinHeight" -> 0.1},
           CellOpen -> False,
           CellFrameMargins -> 0,
           FontSize -> 0.1,
           Magnification -> 0.01
          ]
         },
         Closed
        ]
       ],
       Cell[
        StyleData["Lockdown"],
        CellBracketOptions -> {"Color" -> RGBColor[0.8, 0.5, 0.4], "Thickness" -> 3},
        Evaluatable -> False,
        StyleMenuListing -> None
       ],
       Cell[
        StyleData["InlineCode"],
        SpanMaxSize -> 0,
        FontColor -> GrayLevel[0]
       ],
       Cell[
        StyleData["ExpectedOutputNote"],
        Selectable -> False,
        FontFamily -> "Source Sans Pro",
        FontColor -> GrayLevel[0.3]
       ],
       Cell[
        StyleData["EIWLTextLink"],
        LineBreakWithin -> False,
        TemplateBoxOptions -> {
         DisplayFunction :>
          (Function[
           TagBox[
            ButtonBox[
             #1,
             Appearance -> None,
             ButtonData -> #2,
             BaseStyle -> {
              "Hyperlink",
              FontWeight -> Bold,
              FontSize -> 16,
              FontFamily -> "Source Sans Pro"
             }
            ],
            MouseAppearanceTag["LinkHand"]
           ]
          ])
        },
        ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
       ],
       Cell[
        StyleData["CheckAnswerDividerCloud"],
        ShowCellBracket -> False,
        CellMargins -> {{40, 40}, {3, 6}},
        CellBracketOptions -> {"OverlapContent" -> True},
        CellGroupingRules -> {"SectionGrouping", 40},
        CellFrameMargins -> {{20, 20}, {2, 2}},
        TextAlignment -> Right
       ],
       Cell[
        StyleData["CodeSectionDividerCloud"],
        Selectable -> False,
        ShowCellBracket -> False,
        CellMargins -> {{0, 0}, {0, 30}},
        CellBracketOptions -> {"OverlapContent" -> True},
        CellElementSpacings -> {"CellMinHeight" -> 6},
        CellGroupingRules -> {"SectionGrouping", -5},
        CellFrameMargins -> {{20, 20}, {2, 2}},
        DefaultNewCellStyle -> "Input",
        FontSize -> 6,
        Background -> GrayLevel[0.95]
       ],
       Cell[
        StyleData["InlineCode"],
        SpanMaxSize -> 0,
        FontColor -> GrayLevel[0]
       ],
       Cell[
        StyleData["InlineCodeText"],
        SpanMaxSize -> 0,
        FontFamily -> "Source Sans Pro"
       ],
       Cell[
        StyleData["Input"],
        CellMargins -> {{92, 20}, {5, 8}},
        CellFrameLabels -> {
         {
          None,
          DynamicModuleBox[
           {
            EIWLExerciseCheck = Automatic,
            buttonLabel = " CHECK MY SOLUTION "
           },
           DynamicBox[
            ToBoxes[
             If[ TrueQ[EIWLExerciseCheck == Automatic],
              MouseAppearance[
               Tooltip[
                Button[
                 Framed[
                  Panel[
                   Style[
                    buttonLabel,
                    FontFamily -> "Source Sans Pro",
                    FontSize -> 10,
                    FontColor -> RGBColor[0.95395, 0.30564, 0.028534]
                   ],
                   Appearance -> None,
                   Background -> GrayLevel[1],
                   FrameMargins -> {{2, 2}, {0, 0}},
                   ImageMargins -> 0
                  ],
                  FrameStyle -> {Thickness[Tiny], RGBColor[0.95395, 0.30564, 0.028534]},
                  RoundingRadius -> 3
                 ],
                 Block[
                  {
                   usersCell,
                   solutionResult,
                   exerciseNumber,
                   exerciseSwitchResult
                  },
                  
                  exerciseNumber = 
                   StringJoin[
                    If[ TrueQ[CurrentValue[{"CounterValue", "WebOnly"}] == 1],
                     "x",
                     ""
                    ],
                    If[ False,
                     StringJoin[
                      ToString[CurrentValue[{"CounterValue", "ChapterNumber"}]],
                      "."
                     ],
                     ""
                    ],
                    ToString[CurrentValue[{"CounterValue", "SectionNumber"}]],
                    ".",
                    ToString[CurrentValue[{"CounterValue", "ExerciseNumber"}]]
                   ];

                  
                  buttonLabel = 
                   Row[
                    {
                     " CHECKING ",
                     ProgressIndicator[Appearance -> "Percolate"]
                    }
                   ];

                  
                  SelectionMove[
                   ButtonNotebook[],
                   All,
                   ButtonCell,
                   AutoScroll -> False
                  ];

                  usersCell = NotebookRead[InputNotebook[]];
                  If[ TrueQ[Length[Flatten[{usersCell}]] == 1],
                   
                   solutionResult = 
                    ToExpression[
                     URLFetch[
                      CloudObject[
                       "https://www.wolframcloud.com/obj/online-courses/grader/api/exercise_grader/api/check"
                      ],
                      Method -> "POST",
                      "Parameters" -> {
                       "exNum" -> exerciseNumber,
                       "answer" ->
                        ToString[
                         usersCell,
                         InputForm,
                         CharacterEncoding -> "ASCII"
                        ],
                       "id" -> ToString[$WolframID],
                       "uuid" -> ToString[$WolframUUID],
                       "course" -> "an-elementary-introduction-to-the-wolfram-language"
                      }
                     ]
                    ];

                   
                   If[ MemberQ[{"Pass", "Fail"}, solutionResult["Status"]],
                    questionIndex = Last[StringSplit[exerciseNumber, "."]];
                    correctQ = solutionResult["CorrectQ"];
                    
                    databinPayload = <|
                     "id" -> ToString[$WolframID],
                     "uuid" -> ToString[$WolframUUID],
                     "date" -> DateString["ISODateTime"],
                     "exNum" -> exerciseNumber,
                     "questionIndex" -> questionIndex,
                     "response" -> solutionResult
                    |>;

                    destination = 
                     URLExecute[
                      CloudObject[
                       "https://www.wolframcloud.com/obj/online-courses/an-elementary-introduction-to-the-wolfram-language/api/log/exercise"
                      ],
                      {
                       "id" -> ToString[$WolframID],
                       "uuid" -> ToString[$WolframUUID],
                       "exNum" -> exerciseNumber,
                       "correctQ" -> ToString[correctQ],
                       "response" ->
                        ExportString[
                         Map[ToString, solutionResult],
                         "JSON",
                         "Compact" -> True
                        ]
                      }
                     ]
                   ];

                   
                   SolutionResponseText[exerciseNumber] = 
                    SolutionResponseDetails[
                     solutionResult["Text"],
                     solutionResult["CorrectQ"]
                    ];

                   exerciseSwitchResult = 
                    Switch[
                     solutionResult["CorrectQ"],
                     True,
                     EIWLExerciseCheck = True;
                     SetUserSolutionsCorrect[exerciseNumber];
                     SetUserSolutionsTried[exerciseNumber];,
                     Blank[],
                     EIWLExerciseCheck = False;
                     SetUserSolutionsTried[exerciseNumber]
                    ],
                   CloudSystem`CreateCloudDialog[
                    StyleBox[
                     "Select a cell to be checked.",
                     Selectable -> False
                    ],
                    WindowTitle -> " "
                   ]
                  ]
                 ],
                 Appearance -> None,
                 Evaluator -> Automatic,
                 Method -> "Queued"
                ],
                "Click to check your solution.",
                TooltipDelay -> 0.15
               ],
               "LinkHand"
              ],
              If[ TrueQ[EIWLExerciseCheck],
               MouseAppearance[
                Button[
                 Framed[
                  Row[
                   {
                    Panel[
                     Style[
                      ToExpression[
                       "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" 1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxFJADGKrbtYa RUMUpZzMcNnnQRWjMk5lf/vzDWggtYwCkgNiFDBAsPqCPFcBjcLURYkH0fRS HlZwE6gV7EATfvz98f3Pd6rEIBClncpMPZlJFaNGEd0QANRpOvM= \"], {{0, 20}, { 26, 0}}, {0, 255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", Interleaving -> True, Magnification -> 1], Selectable->False], BaseStyle->\"ImageGraphics\", ImageSize->Magnification[1], ImageSizeRaw->{26, 20}, PlotRange->{{0, 26}, {0, 20}}]\)"
                      ],
                      Selectable -> False
                     ],
                     Background -> RGBColor[0.14694, 0.70164, 0.16466],
                     FrameMargins -> {{5, 5}, {0, 0}},
                     ImageMargins -> 0,
                     Appearance -> None
                    ],
                    Panel[
                     Style[
                      " CORRECT ",
                      FontSize -> 10,
                      FontColor -> RGBColor[0.14694, 0.70164, 0.16466],
                      FontFamily -> "Source Sans Pro"
                     ],
                     Background -> White,
                     FrameMargins -> {{5, 5}, {0, 0}},
                     Appearance -> None
                    ]
                   }
                  ],
                  FrameStyle -> {Thickness[Tiny], RGBColor[0.14694, 0.70164, 0.16466]},
                  FrameMargins -> 0,
                  RoundingRadius -> 3
                 ],
                 buttonLabel = " CHECK MY SOLUTION ";
                 EIWLExerciseCheck = Automatic,
                 Appearance -> None
                ],
                "LinkHand"
               ],
               MouseAppearance[
                Button[
                 Framed[
                  Row[
                   {
                    Panel[
                     Style[
                      ToExpression[
                       "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" 1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxGJADGK/YtAZ RTRCb1W8PnhlYooDBYFSxJgAVPnvy7cPfrkogn65IEFsJmM3BKIeZggal1RD yNOOMOT7DyAiTzvlJlDoCwpDkvLYpDxFjSLyEAAHORZk \"], {{0, 20}, {22, 0}}, { 0, 255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", Interleaving -> True, Magnification -> 1], Selectable->False], BaseStyle->\"ImageGraphics\", ImageSize->Magnification[1], ImageSizeRaw->{22, 20}, PlotRange->{{0, 22}, {0, 20}}]\)"
                      ],
                      Selectable -> False
                     ],
                     Background -> RGBColor[0.91826, 0, 0.17249],
                     FrameMargins -> {{5, 5}, {0, 0}},
                     ImageMargins -> 0,
                     Appearance -> None
                    ],
                    Panel[
                     Style[
                      " TRY AGAIN ",
                      FontSize -> 10,
                      FontColor -> RGBColor[0.91826, 0, 0.17249],
                      FontFamily -> "Source Sans Pro"
                     ],
                     Background -> White,
                     FrameMargins -> {{5, 5}, {0, 0}},
                     Appearance -> None
                    ]
                   }
                  ],
                  FrameStyle -> {Thickness[Tiny], RGBColor[0.91826, 0, 0.17249]},
                  FrameMargins -> 0,
                  RoundingRadius -> 3
                 ],
                 buttonLabel = " CHECK MY SOLUTION ";
                 EIWLExerciseCheck = Automatic,
                 Appearance -> None
                ],
                "LinkHand"
               ]
              ]
             ],
             StandardForm
            ],
            ImageSizeCache -> {109.0, {9.0, 16.0}}
           ],
           DynamicModuleValues :> { }
          ]
         },
         {None, None}
        },
        MenuSortingValue -> 10000,
        FontSize -> 15
       ],
       Cell[
        StyleData["Output"],
        Deletable -> True,
        ShowCellBracket -> True,
        CellMargins -> {{92, 50}, {10, 5}},
        CellBracketOptions -> {"OverlapContent" -> True},
        CellEditDuplicate -> True,
        GeneratedCell -> True,
        CellAutoOverwrite -> True,
        LinebreakAdjustments -> {1, 2.0, 12.0, 1.25, 1.0},
        MenuSortingValue -> None,
        FontSize -> 15
       ],
       Cell[
        StyleData[
         "InputButtonCell",
         StyleDefinitions -> StyleData["Input"]
        ],
        StyleMenuListing -> None
       ],
       Cell[
        StyleData["Message"],
        CellMargins -> {{77, Inherited}, {Inherited, Inherited}}
       ],
       Cell[
        StyleData["EmptyCell"],
        Editable -> False,
        Selectable -> False,
        CellMargins -> {{0, 0}, {-2, 0}},
        CellElementSpacings -> {"CellMinHeight" -> 1},
        MenuSortingValue -> 10000,
        FontSize -> 1
       ],
       Cell[
        StyleData["CellLabel"],
        MenuSortingValue -> 10000,
        FontColor -> GrayLevel[0.6]
       ],
       Cell[
        StyleData["Link"],
        LineBreakWithin -> False,
        TemplateBoxOptions -> {
         DisplayFunction :>
          (Function[
           TagBox[
            ButtonBox[
             #1,
             Appearance -> None,
             ButtonData -> #2,
             BaseStyle -> {
              "Hyperlink",
              FontSize -> 15,
              FontFamily -> "Source Sans Pro"
             }
            ],
            MouseAppearanceTag["LinkHand"]
           ]
          ])
        },
        ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
       ],
       Cell[
        StyleData["ExpectedOutputText"],
        FontFamily -> "Arial",
        FontSize -> 13,
        FontColor -> RGBColor[0.85791, 0.42638, 0.0]
       ],
       Cell[
        StyleData["CodeSectionDividerCloud"],
        Selectable -> False,
        ShowCellBracket -> False,
        CellMargins -> {{0, 0}, {0, 35}},
        CellBracketOptions -> {"OverlapContent" -> True},
        CellElementSpacings -> {"CellMinHeight" -> 6},
        CellGroupingRules -> {"SectionGrouping", -5},
        CellFrameMargins -> {{20, 20}, {2, 2}},
        DefaultNewCellStyle -> "EmptyCell",
        FontSize -> 6,
        Background -> GrayLevel[0.95]
       ],
       Cell[
        StyleData["DockedCellAuthorName"],
        MenuSortingValue -> 10000,
        FontFamily -> "Source Sans Pro",
        FontSize -> 12,
        FontColor -> RGBColor[1, 0.92941, 0.72157]
       ],
       Cell[
        StyleData["DockedCellSectionTitle"],
        MenuSortingValue -> 10000,
        FontFamily -> "Source Sans Pro",
        FontSize -> 18,
        FontColor -> GrayLevel[1]
       ],
       Cell[
        StyleData["DockedCellSecondCell"],
        CellFrame -> 1,
        CellMargins -> {{0, 0}, {0, 0}},
        CellFrameMargins -> {{10, 10}, {10, 10}},
        CellFrameColor -> RGBColor[1, 0.95686, 0.87843],
        MenuSortingValue -> 10000,
        Background -> RGBColor[1, 0.95686, 0.87843]
       ],
       Cell[
        StyleData["CompletedExerciseHeader"],
        MenuSortingValue -> 10000,
        FontFamily -> "Source Sans Pro",
        FontSize -> 14,
        FontColor -> GrayLevel[0.5]
       ],
       Cell[
        StyleData["DockedCellShareButton"],
        MenuSortingValue -> 10000,
        FontFamily -> "Source Sans Pro",
        FontSize -> 13,
        FontColor -> GrayLevel[1]
       ],
       Cell[
        StyleData["DockedCellLinksSections"],
        MenuSortingValue -> 10000,
        FontFamily -> "Source Sans Pro",
        FontSize -> 14,
        FontWeight -> "Plain",
        FontSlant -> "Plain",
        FontColor -> RGBColor[0.97647, 0.48235, 0]
       ],
       Cell[
        StyleData["DockedCellLinksDivider"],
        MenuSortingValue -> 10000,
        FontFamily -> "Courier",
        FontSize -> 18,
        FontWeight -> "Plain",
        FontSlant -> "Plain",
        FontColor -> RGBColor[0.97647, 0.48235, 0]
       ],
       Cell[
        StyleData["DockedCellSectionTitleDivider"],
        MenuSortingValue -> 10000,
        FontFamily -> "Courier",
        FontSize -> 24,
        FontWeight -> "Plain",
        FontSlant -> "Plain",
        FontColor -> GrayLevel[1]
       ],
       Cell[
        StyleData["SolutionTrue"],
        MenuSortingValue -> 10000,
        FontFamily -> "Source Sans Pro",
        FontSize -> 12,
        FontWeight -> "Plain",
        FontSlant -> "Plain",
        FontColor -> RGBColor[0.12, 0.7, 0.22]
       ],
       Cell[
        StyleData["SolutionFalse"],
        MenuSortingValue -> 10000,
        FontFamily -> "Source Sans Pro",
        FontSize -> 12,
        FontWeight -> "Plain",
        FontSlant -> "Plain",
        FontColor -> RGBColor[0.94, 0.08, 0.2]
       ],
       Cell[
        StyleData["SolutionResponseText"],
        ShowStringCharacters -> False,
        FontFamily -> "Source Sans Pro",
        FontSize -> 12,
        FontWeight -> "Plain",
        FontSlant -> "Plain",
        FontColor -> GrayLevel[1]
       ],
       Cell[
        StyleData["SolutionResponse"],
        ShowCellBracket -> False,
        CellMargins -> {{24, 25}, {6, 0}},
        CellFrameMargins -> {{8, 0}, {0, 12}},
        TextAlignment -> Right,
        ShowStringCharacters -> False,
        FontFamily -> "Source Sans Pro",
        FontSize -> 12,
        FontWeight -> "Plain",
        FontSlant -> "Plain",
        Background -> GrayLevel[1]
       ],
       Cell[
        StyleData["DockedCellCompletedExerciseText"],
        MenuSortingValue -> 10000,
        FontFamily -> "Source Sans Pro",
        FontSize -> 12,
        FontWeight -> "Plain",
        FontSlant -> "Plain",
        FontColor -> GrayLevel[0.4]
       ],
       Cell[
        StyleData["DockedCellSolutionDivider"],
        MenuSortingValue -> 10000,
        FontFamily -> "Courier",
        FontSize -> 16,
        FontWeight -> "Plain",
        FontSlant -> "Plain",
        FontColor -> GrayLevel[0.6]
       ],
       Cell[
        StyleData["DockedCellCorrectExerciseText"],
        MenuSortingValue -> 10000,
        FontFamily -> "Source Sans Pro",
        FontSize -> 12,
        FontWeight -> "Plain",
        FontSlant -> "Plain",
        FontColor -> RGBColor[0.12, 0.7, 0.22]
       ],
       Cell[StyleData["Text"], CellMargins -> {{55, 10}, {4, 18}}],
       Cell[
        CellGroupData[
         {
          Cell["EIWL Cloud Link styles", "Subsubsection"],
          Cell[
           StyleData["EIWLTextLink"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 16,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["EIWLTextLinkAnswer"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["EIWLTextLinkCodeCaption"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 14,
                 FontColor -> GrayLevel[0.6],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["EIWLTextLinkExercise"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["EIWLTextLinkExerciseNote"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["EIWLTextLinkInlineCode"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["EIWLTextLinkMoreExplore"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["EIWLTextLinkQuestion"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontWeight -> Bold,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["EIWLTextLinkTechNote"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["EIWLTextLinkText"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 17,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["EIWLTextLinkInlineCodeLink"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 17,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["EIWLTextLinkVocabularyTable"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ]
         },
         Open
        ]
       ],
       Cell[
        CellGroupData[
         {
          Cell["EIWL Cloud Link", "Subsubsection"],
          Cell[
           StyleData["CodeLinkAnswer"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["CodeLinkCodeCaption"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 14,
                 FontColor -> GrayLevel[0.6],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["CodeLinkExercise"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["CodeLinkQuestion"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontWeight -> Bold,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["CodeLinkTechNote"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 14,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["CodeLinkText"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 17,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["CodeLinkVocabularyTable"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 14,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["CodeLinkVocabularyTable3Column"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 14,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["LinkAnswer"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["LinkCodeCaption"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 14,
                 FontColor -> GrayLevel[0.6],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["LinkExercise"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["LinkExerciseNote"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["LinkIndex"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["LinkIndexSubentry"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["LinkMoreExplore"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["LinkQuestion"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 14,
                 FontWeight -> Bold,
                 FontColor -> GrayLevel[0],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["LinkTechNote"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontColor -> GrayLevel[0.25],
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["LinkText"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 16,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ],
          Cell[
           StyleData["LinkVocabularyTable"],
           LineBreakWithin -> False,
           TemplateBoxOptions -> {
            DisplayFunction :>
             (Function[
              TagBox[
               ButtonBox[
                #1,
                Appearance -> None,
                ButtonData -> #2,
                BaseStyle -> {
                 "Hyperlink",
                 FontSize -> 13,
                 FontFamily -> "Source Sans Pro"
                }
               ],
               MouseAppearanceTag["LinkHand"]
              ]
             ])
           },
           ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}
          ]
         },
         Open
        ]
       ]
      },
      Open
     ]
    ]
   },
   Visible -> False,
   FrontEndVersion -> "13.2 for Linux ARM (64-bit) (February 23, 2023)",
   StyleDefinitions -> "Default.nb"
  ],
 ExpressionUUID -> "01493ce1-cd3d-412b-b90b-c1c3bd8e840f"
]
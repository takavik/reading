(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    157844,       3956]
NotebookOptionsPosition[     98221,       2760]
NotebookOutlinePosition[    150744,       3843]
CellTagsIndexPosition[    150622,       3837]
WindowTitle->32 | Exercises: Patterns
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJyNVUloFEEUfRp3ROKKSkQibqA3UTyJHkRFDxKNelAxIYseEuPM9BImMiIK
KriiiAQUXAi45CKKoiCC8aI3RTEKmpjFycxkEhQMURzfr1QPPc10Txqqqfr1
69Vf3v9VWnm4rGYsgPAk/soqrA2hUEXjjmIuyuvDh2rrq6u21Eeqa6tDayuL
KCzhmMUxDqP7+g1sS5rYOUr1wC8Tw1hivUsa+MT5aE1QXzqK0n4Tp3rDmJO1
zcL+lImMGgaqHHnnEcxIWDiWMLDMD09w9LnfqQguCD5t++bg9UfwfcDGIvp/
mutfIiPefF/fgDE8/zdrT57B/X/udaYG44N8pk6v62wnbTqasrGZ602c25R9
ce0nCsVQYq91b3bHMGXQxlL6X8NxMBXGyvY6TOT8ssb86D2fsLGKZxsSJu5z
P66xHkouOb/k9Y9YN96XY4Lcp2VdzH2Lus/ECsqbPfEZ6mvAPMlzQAyvpWMo
Js5AjtzAHX3Xa1cO70nOKBsOyonEQXCzcgtvyKHJ4nM8grmUdSvdCOqSFg4E
5ViPELm5V89/ELvEHcfsno3d3IsWwqMPZ5MhbFQ+GdjnxuqyMTPLW4lrBLWF
8IQ7zPcufeZzh43pisPkI9cvXPm7PmhgSUH7bKzmvedc9j7JlKPIxSUnRwMq
dxZuB+TjkcTezX1ls4kziTDWE6OJ62dOTfLeK/EYpnL+NA/WK4kP5ycdftGm
lxwnpI5y6neEw+3azibpVX0Wtiq/LFxMmyhT/Us4IDw38EH4VqB+4y7f2yTm
qo9FsTBtYLv2w4l1TxCWtq8Q79yx/hOEJ3WmYzIsMef956WHuDB6ub5Kvj12
+prE0g8vEcJy5ugu9VpVTx2x4ZYLr1X7+VP3j1b218WB8fPwh7l4TswO1fcM
vM3hoIXjQVjS23gu7eFHs6pn1iE5+8Cz1yn59rUtjD3emJMv6+SMvAU6v7k5
YQ374nn4Sz+/Co6zL7VJWdKj05IXK4oF3l6cLz5SOx6fh6Q+vXryVkrt6fpr
E13pC149nl/j1L+jL2+xn8/y9TRitrwPfvvCqWQM0/Lt/QeYkzQu
     "], {{0, 28.}, {20., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{72., 72.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{20., 28.},
   PlotRange->{{0, 20.}, {0, 28.}}]],ExpressionUUID->
  "295f4f1b-6a51-4109-8d43-0c2b3115a3fb"],
 "  Badges indicate graded exercises for certification"
}], "SmallText",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{20, 10}, {12, 
  6}},ExpressionUUID->"7ccc2cf8-a749-4a4a-bd7c-c6862080e841"],

Cell["\<\
Find lists of length 3 or more beginning with 1 and ending with 9 in \
\>", "Exercise",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{
       TemplateBox[{0}, "Spacer1"], 
       StyleBox[
       "\"32.1\"", "ExerciseNumberColor", ShowStringCharacters -> False, 
        StripOnInput -> False]}, "RowWithSeparator"], Alignment -> Right, 
     ContentPadding -> False, FrameMargins -> False, ImageSizeAction -> 
     "Crop", ImageSize -> {80, Automatic}]], ShowStringCharacters -> False],
 ShowCellLabel->False,
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {
   "ExerciseNumber", 1}, {
   "WebOnly", 0}},ExpressionUUID->"cd7ebb87-83bf-4dc9-a8d5-2b9bbd3463db"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   ButtonBox[
    StyleBox["IntegerDigits",
     FontFamily->"Source Sans Pro"],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL["https://reference.wolfram.com/language/ref/IntegerDigits.html"], 
      None},
    ButtonNote->
     "https://reference.wolfram.com/language/ref/IntegerDigits.html"],
   FontFamily->"Source Sans Pro"], "[", 
  RowBox[{
   StyleBox[
    ButtonBox[
     StyleBox["Range",
      FontFamily->"Source Sans Pro"],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL["https://reference.wolfram.com/language/ref/Range.html"], None},
     ButtonNote->"https://reference.wolfram.com/language/ref/Range.html"],
    FontFamily->"Source Sans Pro"], "[", "1000", "]"}], 
  "]"}]], "ExerciseInput",ExpressionUUID->"6b06c35d-1d3a-4a2e-bd87-\
2b9c04fa66ae"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
     RowBox[{"EXPECTED", " ", "OUTPUT"}], " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->
  False,ExpressionUUID->"c26ccd3b-347d-46a0-ab0a-42b3c80cf2c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1]=",ExpressionUUID->"7af1f057-a83c-4612-9442-2d057f51f409"]
}, {1}]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    SolutionResponseText["x"], StandardForm],
   ImageSizeCache->{2.390625, {4., 12.}}], 
  "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[
  1],ExpressionUUID->"e0692397-66f8-4952-a93a-46e8a4415ddb"],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "_", ",", "9"}], "}"}], " ", "|", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "_", ",", "_", ",", "9"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8902044182455187`*^9, 3.8902044410775967`*^9}},
 CellLabel->
  "In[111]:= ",ExpressionUUID->"d152e44f-0895-4ebb-96cf-780d3f6b8c2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 30}},
 CellBracketOptions->{
 "OverlapContent"->
  True},ExpressionUUID->"db681084-97ae-4ef7-a308-aa601ffd6804"],

Cell["Find lists of three identical elements in ", "Exercise",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{
       TemplateBox[{0}, "Spacer1"], 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJyNVUloFEEUfRp3ROKKSkQibqA3UTyJHkRFDxKNelAxIYseEuPM9BImMiIK
KriiiAQUXAi45CKKoiCC8aI3RTEKmpjFycxkEhQMURzfr1QPPc10Txqqqfr1
69Vf3v9VWnm4rGYsgPAk/soqrA2hUEXjjmIuyuvDh2rrq6u21Eeqa6tDayuL
KCzhmMUxDqP7+g1sS5rYOUr1wC8Tw1hivUsa+MT5aE1QXzqK0n4Tp3rDmJO1
zcL+lImMGgaqHHnnEcxIWDiWMLDMD09w9LnfqQguCD5t++bg9UfwfcDGIvp/
mutfIiPefF/fgDE8/zdrT57B/X/udaYG44N8pk6v62wnbTqasrGZ602c25R9
ce0nCsVQYq91b3bHMGXQxlL6X8NxMBXGyvY6TOT8ssb86D2fsLGKZxsSJu5z
P66xHkouOb/k9Y9YN96XY4Lcp2VdzH2Lus/ECsqbPfEZ6mvAPMlzQAyvpWMo
Js5AjtzAHX3Xa1cO70nOKBsOyonEQXCzcgtvyKHJ4nM8grmUdSvdCOqSFg4E
5ViPELm5V89/ELvEHcfsno3d3IsWwqMPZ5MhbFQ+GdjnxuqyMTPLW4lrBLWF
8IQ7zPcufeZzh43pisPkI9cvXPm7PmhgSUH7bKzmvedc9j7JlKPIxSUnRwMq
dxZuB+TjkcTezX1ls4kziTDWE6OJ62dOTfLeK/EYpnL+NA/WK4kP5ycdftGm
lxwnpI5y6neEw+3azibpVX0Wtiq/LFxMmyhT/Us4IDw38EH4VqB+4y7f2yTm
qo9FsTBtYLv2w4l1TxCWtq8Q79yx/hOEJ3WmYzIsMef956WHuDB6ub5Kvj12
+prE0g8vEcJy5ugu9VpVTx2x4ZYLr1X7+VP3j1b218WB8fPwh7l4TswO1fcM
vM3hoIXjQVjS23gu7eFHs6pn1iE5+8Cz1yn59rUtjD3emJMv6+SMvAU6v7k5
YQ374nn4Sz+/Co6zL7VJWdKj05IXK4oF3l6cLz5SOx6fh6Q+vXryVkrt6fpr
E13pC149nl/j1L+jL2+xn8/y9TRitrwPfvvCqWQM0/Lt/QeYkzQu
          "], {{0, 28.}, {20., 0}}, {0, 255}, ColorFunction -> RGBColor, 
          ImageResolution -> {72., 72.}], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {20., 28.}, PlotRange -> {{0, 20.}, {0, 28.}}], 
       StyleBox[
       "\"32.2\"", "ExerciseNumberColor", ShowStringCharacters -> False, 
        StripOnInput -> False]}, "RowWithSeparator"], Alignment -> Right, 
     ContentPadding -> False, FrameMargins -> False, ImageSizeAction -> 
     "Crop", ImageSize -> {80, Automatic}]], ShowStringCharacters -> False],
 ShowCellLabel->False,
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {
   "ExerciseNumber", 2}, {"WebOnly", 0}},
 CellTags->
  "Certification",ExpressionUUID->"b467cfd1-3a99-44fb-8bcd-7a6c530fe522"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   ButtonBox[
    StyleBox["IntegerDigits",
     FontFamily->"Source Sans Pro"],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL["https://reference.wolfram.com/language/ref/IntegerDigits.html"], 
      None},
    ButtonNote->
     "https://reference.wolfram.com/language/ref/IntegerDigits.html"],
   FontFamily->"Source Sans Pro"], "[", 
  RowBox[{
   StyleBox[
    ButtonBox[
     StyleBox["Range",
      FontFamily->"Source Sans Pro"],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL["https://reference.wolfram.com/language/ref/Range.html"], None},
     ButtonNote->"https://reference.wolfram.com/language/ref/Range.html"],
    FontFamily->"Source Sans Pro"], "[", "1000", "]"}], 
  "]"}]], "ExerciseInput",
 CellTags->
  "Certification",ExpressionUUID->"c5de50a9-4f39-4941-ac22-536d1712a604"],

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
     RowBox[{"EXPECTED", " ", "OUTPUT"}], " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->
  False,ExpressionUUID->"ae07d4e6-8dac-487c-8139-dd4b5d80d105"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    SolutionResponseText["x"], StandardForm],
   ImageSizeCache->{2.390625, {4., 12.}}], 
  "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[
  1],ExpressionUUID->"fbffb517-8806-4608-a446-4395780f2b83"],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"Range", "[", "1000", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "x_", ",", "x_"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[115]:= ",ExpressionUUID->"0c0ee02f-fdb4-44d8-937c-565ea4f77b08"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 30}},
 CellBracketOptions->{
 "OverlapContent"->
  True},ExpressionUUID->"cfe92789-5d15-4ccb-93be-9ff14041a8fe"],

Cell["\<\
In the digit lists for the first 1000 squares, find those that begin with 9 \
and end with 0 or 1.\
\>", "Exercise",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{
       TemplateBox[{0}, "Spacer1"], 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJyNVUloFEEUfRp3ROKKSkQibqA3UTyJHkRFDxKNelAxIYseEuPM9BImMiIK
KriiiAQUXAi45CKKoiCC8aI3RTEKmpjFycxkEhQMURzfr1QPPc10Txqqqfr1
69Vf3v9VWnm4rGYsgPAk/soqrA2hUEXjjmIuyuvDh2rrq6u21Eeqa6tDayuL
KCzhmMUxDqP7+g1sS5rYOUr1wC8Tw1hivUsa+MT5aE1QXzqK0n4Tp3rDmJO1
zcL+lImMGgaqHHnnEcxIWDiWMLDMD09w9LnfqQguCD5t++bg9UfwfcDGIvp/
mutfIiPefF/fgDE8/zdrT57B/X/udaYG44N8pk6v62wnbTqasrGZ602c25R9
ce0nCsVQYq91b3bHMGXQxlL6X8NxMBXGyvY6TOT8ssb86D2fsLGKZxsSJu5z
P66xHkouOb/k9Y9YN96XY4Lcp2VdzH2Lus/ECsqbPfEZ6mvAPMlzQAyvpWMo
Js5AjtzAHX3Xa1cO70nOKBsOyonEQXCzcgtvyKHJ4nM8grmUdSvdCOqSFg4E
5ViPELm5V89/ELvEHcfsno3d3IsWwqMPZ5MhbFQ+GdjnxuqyMTPLW4lrBLWF
8IQ7zPcufeZzh43pisPkI9cvXPm7PmhgSUH7bKzmvedc9j7JlKPIxSUnRwMq
dxZuB+TjkcTezX1ls4kziTDWE6OJ62dOTfLeK/EYpnL+NA/WK4kP5ycdftGm
lxwnpI5y6neEw+3azibpVX0Wtiq/LFxMmyhT/Us4IDw38EH4VqB+4y7f2yTm
qo9FsTBtYLv2w4l1TxCWtq8Q79yx/hOEJ3WmYzIsMef956WHuDB6ub5Kvj12
+prE0g8vEcJy5ugu9VpVTx2x4ZYLr1X7+VP3j1b218WB8fPwh7l4TswO1fcM
vM3hoIXjQVjS23gu7eFHs6pn1iE5+8Cz1yn59rUtjD3emJMv6+SMvAU6v7k5
YQ374nn4Sz+/Co6zL7VJWdKj05IXK4oF3l6cLz5SOx6fh6Q+vXryVkrt6fpr
E13pC149nl/j1L+jL2+xn8/y9TRitrwPfvvCqWQM0/Lt/QeYkzQu
          "], {{0, 28.}, {20., 0}}, {0, 255}, ColorFunction -> RGBColor, 
          ImageResolution -> {72., 72.}], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {20., 28.}, PlotRange -> {{0, 20.}, {0, 28.}}], 
       StyleBox[
       "\"32.3\"", "ExerciseNumberColor", ShowStringCharacters -> False, 
        StripOnInput -> False]}, "RowWithSeparator"], Alignment -> Right, 
     ContentPadding -> False, FrameMargins -> False, ImageSizeAction -> 
     "Crop", ImageSize -> {80, Automatic}]], ShowStringCharacters -> False],
 ShowCellLabel->False,
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {
   "ExerciseNumber", 3}, {"WebOnly", 0}},
 CellTags->
  "Certification",ExpressionUUID->"d20e3fcc-6a95-48f1-88f0-b6de23e84dd0"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
     RowBox[{"EXPECTED", " ", "OUTPUT"}], " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->
  False,ExpressionUUID->"b0a2e29f-41eb-4329-9ea5-1272dba7d972"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0", ",", "6", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "5", ",", "4", ",", "8", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "7", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0", ",", "0", ",", "6", ",", "0", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0", ",", "2", ",", "5", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0", ",", "4", ",", "4", ",", "0", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1", ",", "9", ",", "6", ",", "8", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2", ",", "1", ",", "6", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2", ",", "3", ",", "5", ",", "2", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3", ",", "8", ",", "9", ",", "6", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4", ",", "0", ",", "9", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4", ",", "2", ",", "8", ",", "4", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "5", ",", "8", ",", "4", ",", "4", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "0", ",", "4", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "2", ",", "3", ",", "6", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "7", ",", "8", ",", "1", ",", "2", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8", ",", "2", ",", "0", ",", "8", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "9", ",", "8", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellTags->"Certification",
 CellLabel->"Out[3]=",ExpressionUUID->"16d7738e-1ff0-4306-87de-c52bf70ab2e8"]
}, {1}]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    SolutionResponseText["x"], StandardForm],
   ImageSizeCache->{2.390625, {4., 12.}}], 
  "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[
  1],ExpressionUUID->"6e726bdf-d94f-439a-9e68-26118bd33bd0"],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "^", "2"}], " ", "&"}], ",", "1000"}], "]"}], "]"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"9", ",", "__", ",", 
     RowBox[{"0", "|", "1"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[123]:= ",ExpressionUUID->"1cf8bbad-0f91-4782-b1bd-9442c682e6f0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 30}},
 CellBracketOptions->{
 "OverlapContent"->
  True},ExpressionUUID->"1b9aae3f-7574-473c-bccd-bd7531d5bea0"],

Cell[TextData[{
 "In ",
 Cell[BoxData[{
  StyleBox[
   ButtonBox[
    StyleBox["IntegerDigits",
     FontFamily->"Source Sans Pro"],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL["https://reference.wolfram.com/language/ref/IntegerDigits.html"], 
      None},
    ButtonNote->
     "https://reference.wolfram.com/language/ref/IntegerDigits.html"],
   FontFamily->"Source Sans Pro"], "\n", "[", "\n", 
  RowBox[{
   StyleBox[
    ButtonBox[
     StyleBox["Range",
      FontFamily->"Source Sans Pro"],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL["https://reference.wolfram.com/language/ref/Range.html"], None},
     ButtonNote->"https://reference.wolfram.com/language/ref/Range.html"],
    FontFamily->"Source Sans Pro"], "[", "100", "]"}], "\n", 
 "]"}], "InlineCode",ExpressionUUID->"b45253f5-c167-43da-a1f2-a200eb059c03"],
 ", replace all 0s by ",
 StyleBox[ButtonBox["Gray",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Gray.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Gray.html"],
  FontFamily->"Source Sans Pro"],
 " and all 9s by ",
 StyleBox[ButtonBox["Orange",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Orange.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Orange.html"],
  FontFamily->"Source Sans Pro"],
 "."
}], "Exercise",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{
       TemplateBox[{0}, "Spacer1"], 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJyNVUloFEEUfRp3ROKKSkQibqA3UTyJHkRFDxKNelAxIYseEuPM9BImMiIK
KriiiAQUXAi45CKKoiCC8aI3RTEKmpjFycxkEhQMURzfr1QPPc10Txqqqfr1
69Vf3v9VWnm4rGYsgPAk/soqrA2hUEXjjmIuyuvDh2rrq6u21Eeqa6tDayuL
KCzhmMUxDqP7+g1sS5rYOUr1wC8Tw1hivUsa+MT5aE1QXzqK0n4Tp3rDmJO1
zcL+lImMGgaqHHnnEcxIWDiWMLDMD09w9LnfqQguCD5t++bg9UfwfcDGIvp/
mutfIiPefF/fgDE8/zdrT57B/X/udaYG44N8pk6v62wnbTqasrGZ602c25R9
ce0nCsVQYq91b3bHMGXQxlL6X8NxMBXGyvY6TOT8ssb86D2fsLGKZxsSJu5z
P66xHkouOb/k9Y9YN96XY4Lcp2VdzH2Lus/ECsqbPfEZ6mvAPMlzQAyvpWMo
Js5AjtzAHX3Xa1cO70nOKBsOyonEQXCzcgtvyKHJ4nM8grmUdSvdCOqSFg4E
5ViPELm5V89/ELvEHcfsno3d3IsWwqMPZ5MhbFQ+GdjnxuqyMTPLW4lrBLWF
8IQ7zPcufeZzh43pisPkI9cvXPm7PmhgSUH7bKzmvedc9j7JlKPIxSUnRwMq
dxZuB+TjkcTezX1ls4kziTDWE6OJ62dOTfLeK/EYpnL+NA/WK4kP5ycdftGm
lxwnpI5y6neEw+3azibpVX0Wtiq/LFxMmyhT/Us4IDw38EH4VqB+4y7f2yTm
qo9FsTBtYLv2w4l1TxCWtq8Q79yx/hOEJ3WmYzIsMef956WHuDB6ub5Kvj12
+prE0g8vEcJy5ugu9VpVTx2x4ZYLr1X7+VP3j1b218WB8fPwh7l4TswO1fcM
vM3hoIXjQVjS23gu7eFHs6pn1iE5+8Cz1yn59rUtjD3emJMv6+SMvAU6v7k5
YQ374nn4Sz+/Co6zL7VJWdKj05IXK4oF3l6cLz5SOx6fh6Q+vXryVkrt6fpr
E13pC149nl/j1L+jL2+xn8/y9TRitrwPfvvCqWQM0/Lt/QeYkzQu
          "], {{0, 28.}, {20., 0}}, {0, 255}, ColorFunction -> RGBColor, 
          ImageResolution -> {72., 72.}], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {20., 28.}, PlotRange -> {{0, 20.}, {0, 28.}}], 
       StyleBox[
       "\"32.4\"", "ExerciseNumberColor", ShowStringCharacters -> False, 
        StripOnInput -> False]}, "RowWithSeparator"], Alignment -> Right, 
     ContentPadding -> False, FrameMargins -> False, ImageSizeAction -> 
     "Crop", ImageSize -> {80, Automatic}]], ShowStringCharacters -> False],
 ShowCellLabel->False,
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {
   "ExerciseNumber", 4}, {"WebOnly", 0}},
 CellTags->
  "Certification",ExpressionUUID->"2521909b-65c6-4f27-8c1c-331cbcfde384"],

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
     RowBox[{"EXPECTED", " ", "OUTPUT"}], " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellTags->
  "expected-output-heading",ExpressionUUID->"ea66b9d7-85aa-4ad7-b1eb-\
2f6c4b305109"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    SolutionResponseText["x"], StandardForm],
   ImageSizeCache->{2.390625, {4., 12.}}], 
  "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[
  1],ExpressionUUID->"709295c6-e20e-48df-8f6e-6f629a6502aa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"Range", "[", "100", "]"}], "]"}], " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"0", "\[Rule]", "Gray"}], ",", 
    RowBox[{"9", "\[Rule]", "Orange"}]}], "}"}]}]], "Input",ExpressionUUID->\
"4af91889-a8c5-4f20-b935-445a8f4cc57d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 30}},
 CellBracketOptions->{
 "OverlapContent"->
  True},ExpressionUUID->"571ae4da-d09d-4e56-914d-7dad727aa0c2"],

Cell[TextData[{
 "Make a list of the digits of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "^", "1000"}], TraditionalForm]],ExpressionUUID->
  "946e5e49-34a4-439d-9b77-ee9756d41ec5"],
 ", replacing all zeros by ",
 StyleBox[ButtonBox["Red",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/Red.html"], None},
  ButtonNote->"https://reference.wolfram.com/language/ref/Red.html"],
  FontFamily->"Source Sans Pro"],
 "."
}], "Exercise",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{
       TemplateBox[{0}, "Spacer1"], 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJyNVUloFEEUfRp3ROKKSkQibqA3UTyJHkRFDxKNelAxIYseEuPM9BImMiIK
KriiiAQUXAi45CKKoiCC8aI3RTEKmpjFycxkEhQMURzfr1QPPc10Txqqqfr1
69Vf3v9VWnm4rGYsgPAk/soqrA2hUEXjjmIuyuvDh2rrq6u21Eeqa6tDayuL
KCzhmMUxDqP7+g1sS5rYOUr1wC8Tw1hivUsa+MT5aE1QXzqK0n4Tp3rDmJO1
zcL+lImMGgaqHHnnEcxIWDiWMLDMD09w9LnfqQguCD5t++bg9UfwfcDGIvp/
mutfIiPefF/fgDE8/zdrT57B/X/udaYG44N8pk6v62wnbTqasrGZ602c25R9
ce0nCsVQYq91b3bHMGXQxlL6X8NxMBXGyvY6TOT8ssb86D2fsLGKZxsSJu5z
P66xHkouOb/k9Y9YN96XY4Lcp2VdzH2Lus/ECsqbPfEZ6mvAPMlzQAyvpWMo
Js5AjtzAHX3Xa1cO70nOKBsOyonEQXCzcgtvyKHJ4nM8grmUdSvdCOqSFg4E
5ViPELm5V89/ELvEHcfsno3d3IsWwqMPZ5MhbFQ+GdjnxuqyMTPLW4lrBLWF
8IQ7zPcufeZzh43pisPkI9cvXPm7PmhgSUH7bKzmvedc9j7JlKPIxSUnRwMq
dxZuB+TjkcTezX1ls4kziTDWE6OJ62dOTfLeK/EYpnL+NA/WK4kP5ycdftGm
lxwnpI5y6neEw+3azibpVX0Wtiq/LFxMmyhT/Us4IDw38EH4VqB+4y7f2yTm
qo9FsTBtYLv2w4l1TxCWtq8Q79yx/hOEJ3WmYzIsMef956WHuDB6ub5Kvj12
+prE0g8vEcJy5ugu9VpVTx2x4ZYLr1X7+VP3j1b218WB8fPwh7l4TswO1fcM
vM3hoIXjQVjS23gu7eFHs6pn1iE5+8Cz1yn59rUtjD3emJMv6+SMvAU6v7k5
YQ374nn4Sz+/Co6zL7VJWdKj05IXK4oF3l6cLz5SOx6fh6Q+vXryVkrt6fpr
E13pC149nl/j1L+jL2+xn8/y9TRitrwPfvvCqWQM0/Lt/QeYkzQu
          "], {{0, 28.}, {20., 0}}, {0, 255}, ColorFunction -> RGBColor, 
          ImageResolution -> {72., 72.}], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {20., 28.}, PlotRange -> {{0, 20.}, {0, 28.}}], 
       StyleBox[
       "\"32.5\"", "ExerciseNumberColor", ShowStringCharacters -> False, 
        StripOnInput -> False]}, "RowWithSeparator"], Alignment -> Right, 
     ContentPadding -> False, FrameMargins -> False, ImageSizeAction -> 
     "Crop", ImageSize -> {80, Automatic}]], ShowStringCharacters -> False],
 ShowCellLabel->False,
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {
   "ExerciseNumber", 5}, {"WebOnly", 0}},
 CellTags->
  "Certification",ExpressionUUID->"514c14c3-0fda-4a4f-81f2-b2f1862f4e35"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
     RowBox[{"EXPECTED", " ", "OUTPUT"}], " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->
  False,ExpressionUUID->"c6cb6378-d14d-4858-9c2a-4de6715741cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "7", ",", "1", ",", "5", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "8", ",", "6", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "7", ",", "1", ",", "8", ",", "6", ",", "2", ",",
    "6", ",", "7", ",", "3", ",", "2", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "9", ",", "4", ",", "8", ",", "4", ",", "2", ",",
    "5", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "4", ",", "9", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "6", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "1", ",", "8", ",", "1", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "5", ",", "6", ",", "1", ",", "4", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "4", ",", "8", ",", "1", ",", "1", ",", "7", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "5", ",", "5", ",", "3", ",", "3", ",", "6", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "7", ",", "4", ",", "4", ",", "3", ",", "7", ",",
    "5", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "3", ",", "8", ",", "8", ",", "3", ",", "7", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "3", ",", "5", ",", "1", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "5", ",", "1", ",", "1", ",", "2", ",", "4", ",",
    "9", ",", "3", ",", "6", ",", "1", ",", "2", ",", "2", ",", "4", ",", "9",
    ",", "3", ",", "1", ",", "9", ",", "8", ",", "3", ",", "7", ",", "8", ",",
    "8", ",", "1", ",", "5", ",", "6", ",", "9", ",", "5", ",", "8", ",", "5",
    ",", "8", ",", "1", ",", "2", ",", "7", ",", "5", ",", "9", ",", "4", ",",
    "6", ",", "7", ",", "2", ",", "9", ",", "1", ",", "7", ",", "5", ",", "5",
    ",", "3", ",", "1", ",", "4", ",", "6", ",", "8", ",", "2", ",", "5", ",",
    "1", ",", "8", ",", "7", ",", "1", ",", "4", ",", "5", ",", "2", ",", "8",
    ",", "5", ",", "6", ",", "9", ",", "2", ",", "3", ",", "1", ",", "4", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "4", ",", "3", ",", "5", ",", "9", ",", "8", ",",
    "4", ",", "5", ",", "7", ",", "7", ",", "5", ",", "7", ",", "4", ",", "6",
    ",", "9", ",", "8", ",", "5", ",", "7", ",", "4", ",", "8", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "3", ",", "9", ",", "3", ",", "4", ",", "5", ",",
    "6", ",", "7", ",", "7", ",", "7", ",", "4", ",", "8", ",", "2", ",", "4",
    ",", "2", ",", "3", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "9", ",", "8", ",", "5", ",", "4", ",", "2", ",",
    "1", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "7", ",", "4", ",", "6", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "5", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "6", ",", "2", ",", "3", ",", "7", ",", "1", ",",
    "1", ",", "4", ",", "1", ",", "8", ",", "7", ",", "7", ",", "9", ",", "5",
    ",", "4", ",", "1", ",", "8", ",", "2", ",", "1", ",", "5", ",", "3", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "4", ",", "6", ",", "4", ",", "7", ",", "4", ",",
    "9", ",", "8", ",", "3", ",", "5", ",", "8", ",", "1", ",", "9", ",", "4",
    ",", "1", ",", "2", ",", "6", ",", "7", ",", "3", ",", "9", ",", "8", ",",
    "7", ",", "6", ",", "7", ",", "5", ",", "5", ",", "9", ",", "1", ",", "6",
    ",", "5", ",", "5", ",", "4", ",", "3", ",", "9", ",", "4", ",", "6", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "7", ",", "7", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "6", ",", "2", ",", "9", ",", "1", ",", "4", ",",
    "5", ",", "7", ",", "1", ",", "1", ",", "9", ",", "6", ",", "4", ",", "7",
    ",", "7", ",", "6", ",", "8", ",", "6", ",", "5", ",", "4", ",", "2", ",",
    "1", ",", "6", ",", "7", ",", "6", ",", "6", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "4", ",", "2", ",", "9", ",", "8", ",", "3", ",",
    "1", ",", "6", ",", "5", ",", "2", ",", "6", ",", "2", ",", "4", ",", "3",
    ",", "8", ",", "6", ",", "8", ",", "3", ",", "7", ",", "2", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "5", ",", "6", ",", "6", ",", "8", ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.66667, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 
          1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification])}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", "6", ",", "9", ",", "3", ",", "7", ",", "6"}], 
  "}"}]], "Output",
 CellTags->"Certification",
 CellLabel->"Out[5]=",ExpressionUUID->"711504ad-aacf-4b11-bfa2-a679c8f8a511"]
}, {1}]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    SolutionResponseText["x"], StandardForm],
   ImageSizeCache->{2.390625, {4., 12.}}], 
  "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[
  1],ExpressionUUID->"22f61ba1-2b73-4117-947e-aa5e0aee9a8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerDigits", "[", 
   RowBox[{"2", "^", "1000"}], "]"}], " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{"0", "\[Rule]", "Red"}], "}"}]}]], "Input",ExpressionUUID->\
"b6457057-1674-41d7-90e3-cd620e90dd4c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 30}},
 CellBracketOptions->{
 "OverlapContent"->
  True},ExpressionUUID->"2d6225e6-def6-4098-b9e1-98240471b8fb"],

Cell[TextData[{
 "Remove the vowels ",
 StyleBox["a",
  FontSlant->"Italic"],
 ", ",
 StyleBox["e",
  FontSlant->"Italic"],
 ", ",
 StyleBox["i",
  FontSlant->"Italic"],
 ", ",
 StyleBox["o",
  FontSlant->"Italic"],
 " and ",
 StyleBox["u",
  FontSlant->"Italic"],
 " from the list of characters in \[OpenCurlyDoubleQuote]The Wolfram Language\
\[CloseCurlyDoubleQuote]."
}], "Exercise",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{
       TemplateBox[{0}, "Spacer1"], 
       StyleBox[
       "\"32.6\"", "ExerciseNumberColor", ShowStringCharacters -> False, 
        StripOnInput -> False]}, "RowWithSeparator"], Alignment -> Right, 
     ContentPadding -> False, FrameMargins -> False, ImageSizeAction -> 
     "Crop", ImageSize -> {80, Automatic}]], ShowStringCharacters -> False],
 ShowCellLabel->False,
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {
   "ExerciseNumber", 6}, {
   "WebOnly", 0}},ExpressionUUID->"3e95aead-4500-4f5c-a2c6-19ebd0329a95"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
     RowBox[{"EXPECTED", " ", "OUTPUT"}], " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->
  False,ExpressionUUID->"687f8852-38b4-4f5b-95dc-397b6680bae5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"T\"\>", ",", "\<\"h\"\>", ",", "\<\" \"\>", ",", "\<\"W\"\>", 
   ",", "\<\"l\"\>", ",", "\<\"f\"\>", ",", "\<\"r\"\>", ",", "\<\"m\"\>", 
   ",", "\<\" \"\>", ",", "\<\"L\"\>", ",", "\<\"n\"\>", ",", "\<\"g\"\>", 
   ",", "\<\"g\"\>"}], "}"}]], "Output",
 CellLabel->"Out[6]=",ExpressionUUID->"26d1b44e-13cc-41ab-addd-ff7e32948e6e"]
}, {1}]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    SolutionResponseText["x"], StandardForm],
   ImageSizeCache->{2.390625, {4., 12.}}], 
  "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[
  1],ExpressionUUID->"565e87cc-a827-4ace-ad71-16992ef4b291"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Characters", "[", "\"\<The Wolfram Language\>\"", "]"}], " ", "/.",
   " ", 
  RowBox[{
   RowBox[{
   "\"\<a\>\"", "|", "\"\<e\>\"", "|", "\"\<i\>\"", "|", "\"\<o\>\"", "|", 
    "\"\<u\>\""}], " ", "\[Rule]", " ", "Nothing"}]}]], "Input",ExpressionUUID\
->"f29cdf1c-388c-449b-adcf-73ff327406d9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 30}},
 CellBracketOptions->{
 "OverlapContent"->
  True},ExpressionUUID->"86ba9d0a-40b8-40f5-9686-ce9c10b4f159"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  StyleBox[
   ButtonBox[
    StyleBox["Cases",
     FontFamily->"Source Sans Pro"],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL["https://reference.wolfram.com/language/ref/Cases.html"], None},
    ButtonNote->"https://reference.wolfram.com/language/ref/Cases.html"],
   FontFamily->"Source Sans Pro"]], "InlineCode",ExpressionUUID->
  "50dde7e8-2ee7-4d0b-88be-15fac9b2c4fb"],
 " to find a simpler form for "
}], "Exercise",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{
       TemplateBox[{0}, "Spacer1"], 
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJyNVUloFEEUfRp3ROKKSkQibqA3UTyJHkRFDxKNelAxIYseEuPM9BImMiIK
KriiiAQUXAi45CKKoiCC8aI3RTEKmpjFycxkEhQMURzfr1QPPc10Txqqqfr1
69Vf3v9VWnm4rGYsgPAk/soqrA2hUEXjjmIuyuvDh2rrq6u21Eeqa6tDayuL
KCzhmMUxDqP7+g1sS5rYOUr1wC8Tw1hivUsa+MT5aE1QXzqK0n4Tp3rDmJO1
zcL+lImMGgaqHHnnEcxIWDiWMLDMD09w9LnfqQguCD5t++bg9UfwfcDGIvp/
mutfIiPefF/fgDE8/zdrT57B/X/udaYG44N8pk6v62wnbTqasrGZ602c25R9
ce0nCsVQYq91b3bHMGXQxlL6X8NxMBXGyvY6TOT8ssb86D2fsLGKZxsSJu5z
P66xHkouOb/k9Y9YN96XY4Lcp2VdzH2Lus/ECsqbPfEZ6mvAPMlzQAyvpWMo
Js5AjtzAHX3Xa1cO70nOKBsOyonEQXCzcgtvyKHJ4nM8grmUdSvdCOqSFg4E
5ViPELm5V89/ELvEHcfsno3d3IsWwqMPZ5MhbFQ+GdjnxuqyMTPLW4lrBLWF
8IQ7zPcufeZzh43pisPkI9cvXPm7PmhgSUH7bKzmvedc9j7JlKPIxSUnRwMq
dxZuB+TjkcTezX1ls4kziTDWE6OJ62dOTfLeK/EYpnL+NA/WK4kP5ycdftGm
lxwnpI5y6neEw+3azibpVX0Wtiq/LFxMmyhT/Us4IDw38EH4VqB+4y7f2yTm
qo9FsTBtYLv2w4l1TxCWtq8Q79yx/hOEJ3WmYzIsMef956WHuDB6ub5Kvj12
+prE0g8vEcJy5ugu9VpVTx2x4ZYLr1X7+VP3j1b218WB8fPwh7l4TswO1fcM
vM3hoIXjQVjS23gu7eFHs6pn1iE5+8Cz1yn59rUtjD3emJMv6+SMvAU6v7k5
YQ374nn4Sz+/Co6zL7VJWdKj05IXK4oF3l6cLz5SOx6fh6Q+vXryVkrt6fpr
E13pC149nl/j1L+jL2+xn8/y9TRitrwPfvvCqWQM0/Lt/QeYkzQu
          "], {{0, 28.}, {20., 0}}, {0, 255}, ColorFunction -> RGBColor, 
          ImageResolution -> {72., 72.}], 
         BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {20., 28.}, PlotRange -> {{0, 20.}, {0, 28.}}], 
       StyleBox[
       "\"32.7\"", "ExerciseNumberColor", ShowStringCharacters -> False, 
        StripOnInput -> False]}, "RowWithSeparator"], Alignment -> Right, 
     ContentPadding -> False, FrameMargins -> False, ImageSizeAction -> 
     "Crop", ImageSize -> {80, Automatic}]], ShowStringCharacters -> False],
 ShowCellLabel->False,
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {
   "ExerciseNumber", 7}, {"WebOnly", 0}},
 CellTags->
  "Certification",ExpressionUUID->"1db4016b-1c8b-4577-8137-64aadd5d8c2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox[
    ButtonBox[
     StyleBox["Select",
      FontFamily->"Source Sans Pro"],
     BaseStyle->"Hyperlink",
     ButtonData->{
       URL["https://reference.wolfram.com/language/ref/Select.html"], None},
     ButtonNote->"https://reference.wolfram.com/language/ref/Select.html"],
    FontFamily->"Source Sans Pro"], "[", 
   RowBox[{
    RowBox[{
     StyleBox[
      ButtonBox[
       StyleBox["IntegerDigits",
        FontFamily->"Source Sans Pro"],
       BaseStyle->"Hyperlink",
       ButtonData->{
         URL["https://reference.wolfram.com/language/ref/IntegerDigits.html"],
          None},
       ButtonNote->
        "https://reference.wolfram.com/language/ref/IntegerDigits.html"],
      FontFamily->"Source Sans Pro"], "[", 
     RowBox[{"2", 
      StyleBox["^",
       FontFamily->"Source Sans Pro"], "1000"}], "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["#",
        FontFamily->"Source Sans Pro"], 
       StyleBox["\[Equal]",
        FontFamily->"Source Sans Pro"], "0"}], "||", 
      RowBox[{
       StyleBox["#",
        FontFamily->"Source Sans Pro"], 
       StyleBox["\[Equal]",
        FontFamily->"Source Sans Pro"], "1"}]}], 
     StyleBox["&",
      FontFamily->"Source Sans Pro"]}]}], "]"}], "."}]], "ExerciseInput",
 CellTags->
  "Certification",ExpressionUUID->"be07ba89-5b9f-4826-b14f-b19e206832d3"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
     RowBox[{"EXPECTED", " ", "OUTPUT"}], " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->
  False,ExpressionUUID->"ed812304-69e5-4beb-b1b1-05795fac37cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", 
   "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
   ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 CellTags->"Certification",
 CellLabel->"Out[7]=",ExpressionUUID->"4cd37c48-f3e9-407a-a93e-752877c1cca2"]
}, {1}]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    SolutionResponseText["x"], StandardForm],
   ImageSizeCache->{2.390625, {4., 12.}}], 
  "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[
  1],ExpressionUUID->"3bc6a7ba-0793-4e9c-a570-f8639fc3bc43"],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"2", "^", "1000"}], "]"}], ",", 
   RowBox[{"0", "|", "1"}]}], "]"}]], "Input",ExpressionUUID->"674214ce-4fd1-\
4238-a0bf-0590b1ccec78"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 30}},
 CellBracketOptions->{
 "OverlapContent"->
  True},ExpressionUUID->"b5257eaf-40a6-4599-9ffc-dc8a866541db"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  StyleBox[
   ButtonBox[
    StyleBox["Cases",
     FontFamily->"Source Sans Pro"],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL["https://reference.wolfram.com/language/ref/Cases.html"], None},
    ButtonNote->"https://reference.wolfram.com/language/ref/Cases.html"],
   FontFamily->"Source Sans Pro"]], "InlineCode",ExpressionUUID->
  "bb8792cb-bf4b-448b-bd58-e2ccd18ee34d"],
 " to find a simpler form for "
}], "Exercise",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{
       TemplateBox[{0}, "Spacer1"], 
       StyleBox[
       "\"32.8\"", "ExerciseNumberColor", ShowStringCharacters -> False, 
        StripOnInput -> False]}, "RowWithSeparator"], Alignment -> Right, 
     ContentPadding -> False, FrameMargins -> False, ImageSizeAction -> 
     "Crop", ImageSize -> {80, Automatic}]], ShowStringCharacters -> False],
 ShowCellLabel->False,
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {
   "ExerciseNumber", 8}, {
   "WebOnly", 0}},ExpressionUUID->"eb906423-8325-482c-b934-3adac0c31a3b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   ButtonBox[
    StyleBox["Select",
     FontFamily->"Source Sans Pro"],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL["https://reference.wolfram.com/language/ref/Select.html"], None},
    ButtonNote->"https://reference.wolfram.com/language/ref/Select.html"],
   FontFamily->"Source Sans Pro"], "[", 
  RowBox[{
   RowBox[{
    StyleBox[
     ButtonBox[
      StyleBox["IntegerDigits",
       FontFamily->"Source Sans Pro"],
      BaseStyle->"Hyperlink",
      ButtonData->{
        URL["https://reference.wolfram.com/language/ref/IntegerDigits.html"], 
        None},
      ButtonNote->
       "https://reference.wolfram.com/language/ref/IntegerDigits.html"],
     FontFamily->"Source Sans Pro"], "[", 
    RowBox[{
     StyleBox[
      ButtonBox[
       StyleBox["Range",
        FontFamily->"Source Sans Pro"],
       BaseStyle->"Hyperlink",
       ButtonData->{
         URL["https://reference.wolfram.com/language/ref/Range.html"], None},
       ButtonNote->"https://reference.wolfram.com/language/ref/Range.html"],
      FontFamily->"Source Sans Pro"], "[", 
     RowBox[{"100", ",", "999"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox[
       ButtonBox[
        StyleBox["First",
         FontFamily->"Source Sans Pro"],
        BaseStyle->"Hyperlink",
        ButtonData->{
          URL["https://reference.wolfram.com/language/ref/First.html"], None},
        
        ButtonNote->"https://reference.wolfram.com/language/ref/First.html"],
       FontFamily->"Source Sans Pro"], "[", 
      StyleBox["#",
       FontFamily->"Source Sans Pro"], "]"}], 
     StyleBox["\[Equal]",
      FontFamily->"Source Sans Pro"], 
     RowBox[{
      StyleBox[
       ButtonBox[
        StyleBox["Last",
         FontFamily->"Source Sans Pro"],
        BaseStyle->"Hyperlink",
        ButtonData->{
          URL["https://reference.wolfram.com/language/ref/Last.html"], None},
        ButtonNote->"https://reference.wolfram.com/language/ref/Last.html"],
       FontFamily->"Source Sans Pro"], "[", 
      StyleBox["#",
       FontFamily->"Source Sans Pro"], "]"}]}], 
    StyleBox["&",
     FontFamily->"Source Sans Pro"]}]}], "]"}]], "ExerciseInput",ExpressionUUI\
D->"fe722d64-e4f1-49b4-9b9f-1fe831e0fe17"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  ButtonBox[
   StyleBox[
    RowBox[{
     RowBox[{"EXPECTED", " ", "OUTPUT"}], " ", "\[RightGuillemet]"}],
    FontFamily->"Source Sans Pro",
    FontSize->12,
    FontColor->GrayLevel[0.6]],
   Appearance->None,
   ButtonFunction:>(SelectionMove[
      ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; FrontEndExecute[
      FrontEndToken[
       ButtonNotebook[], "OpenCloseGroup"]]),
   Evaluator->Automatic,
   Method->"Preemptive"],
  MouseAppearanceTag["LinkHand"]]], "ExerciseExpectedResult",
 Editable->False,
 Deletable->False,
 ShowCellBracket->
  False,ExpressionUUID->"021d91ae-a91a-4380-bcc5-b0c140e9618e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "8", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "8", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "9", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "6", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "8", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "9", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "7", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "8", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "9", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "9", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "1", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "9", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "0", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "4", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "8", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "0", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "5", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "6", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "7", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "9", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[8]=",ExpressionUUID->"e5099325-cac9-41d6-9fce-c7fc342d53ac"]
}, {1}]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  DynamicBox[ToBoxes[
    SolutionResponseText["x"], StandardForm],
   ImageSizeCache->{2.390625, {4., 12.}}], 
  "SolutionResponseText"]], "Subsection",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 25}, {3, 0}},
 CellFrameMargins->{{8, 0}, {0, 0}},
 TextAlignment->Right,
 ShowStringCharacters->False,
 FontFamily->"Source Sans Pro",
 FontSize->12,
 FontWeight->"Plain",
 FontSlant->"Plain",
 Background->GrayLevel[
  1],ExpressionUUID->"2ee63426-d0c9-4215-b0d8-1362442bc0ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"IntegerDigits", "[", 
    RowBox[{"Range", "[", 
     RowBox[{"100", ",", "999"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "_", ",", "x_"}], "}"}]}], "]"}]], "Input",ExpressionUU\
ID->"0087c93c-8284-4853-87d4-311f68238710"],

Cell[BoxData[
 TemplateBox[{
  "URLExecute", "nvldarg", 
   "\"The argument \\!\\(\\*RowBox[{\\\"exerciseNumber\\\"}]\\) should be a \
string.\"", 2, 1, 2, 32504116182170206098, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.890204307565633*^9},
 CellLabel->"",
 CellID->2022341969,ExpressionUUID->"bd84520b-28cb-4514-8e48-bcce335443bc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 PaneBox["\[ThickSpace]",
  ImageSize->Full]], "CodeSectionDividerCloud",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellMargins->{{0, 0}, {0, 30}},
 CellBracketOptions->{
 "OverlapContent"->
  True},ExpressionUUID->"6b3523ac-7476-4ef4-abd4-4720ebc05573"]
},
Saveable->True,
ScreenStyleEnvironment->"Working",
CellInsertionPointCell->None,
WindowSize->{1440., 761.25},
WindowMargins->{{0, Automatic}, {Automatic, 0.07086614173228512}},
WindowTitle->"32 | Exercises: Patterns",
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{}, 
     StyleBox[
      TagBox[
       GridBox[{{
          PaneBox[
          "\"32 | Exercises: Patterns\"", ImageSize -> Full, 
           ImageMargins -> {{15, 10}, {4, 0}}], 
          ButtonBox[
           StyleBox["\"Download Notebook \[RightGuillemet]\"", 13, 
            GrayLevel[1], StripOnInput -> False], ButtonFunction :> 
           FrontEndExecute[{
              NotebookLocate[{
                URL[
                 URLBuild[{$CloudBase, "files", 
                   Information[$EvaluationCloudObject, "UUID"]}, {
                  "contentDisposition" -> "attachment"}]], None}]}], Method -> 
           "Queued", Appearance -> None, Evaluator -> Automatic]}}, 
        AutoDelete -> False, 
        GridBoxFrame -> {"Columns" -> None, "Rows" -> None}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
      "Text", 
      GrayLevel[1], FontSize -> 18, StripOnInput -> False], 
     DynamicModuleValues :> {}, 
     Initialization :> (Clear[SolutionResponseText]; SolutionResponseText[
         Pattern[WebsiteBuilder`Private`a, 
          BlankNullSequence[]]] := " "; 
      Map[(SolutionResponseText[#] := " ")& , {
        "032.1", "032.2", "032.3", "032.4", "032.5", "032.6", "032.7", 
         "032.8"}]; Clear[SolutionResponseDetails]; SolutionResponseDetails[
         Pattern[WebsiteBuilder`Private`str, 
          Blank[String]], True] := 
       Style[WebsiteBuilder`Private`str, "SolutionTrue"]; 
      SolutionResponseDetails[
         Pattern[WebsiteBuilder`Private`str, 
          Blank[String]], False] := 
       Style[WebsiteBuilder`Private`str, "SolutionFalse"]; 
      SolutionResponseDetails[
         Pattern[WebsiteBuilder`Private`str, 
          Blank[String]]] := WebsiteBuilder`Private`str; 
      SolutionResponseDetails[
         Missing[
          BlankSequence[]]] := " "; SolutionResponseDetails[
         BlankNullSequence[]] := " "; Clear[GetUserSolutions]; 
      GetUserSolutions[] := Flatten[
         Cases[
          Options[
           EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
           Pattern[WebsiteBuilder`Private`ex, 
             Blank[]]) :> WebsiteBuilder`Private`ex, Infinity]]; 
      Clear[GetUserSolutionsTotal]; GetUserSolutionsTotal[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[WebsiteBuilder`Private`ex, 
                Blank[]]) :> WebsiteBuilder`Private`ex, Infinity], (
             "ExercisesTotal" -> Pattern[WebsiteBuilder`Private`t, 
               Blank[]]) :> WebsiteBuilder`Private`t, Infinity]]]]; 
      Clear[GetUserSolutionsTried]; GetUserSolutionsTried[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[WebsiteBuilder`Private`ex, 
                Blank[]]) :> WebsiteBuilder`Private`ex, Infinity], (
             "ExercisesTried" -> Pattern[WebsiteBuilder`Private`t, 
               Blank[]]) :> WebsiteBuilder`Private`t, Infinity]]]]; 
      Clear[GetUserSolutionsCorrect]; GetUserSolutionsCorrect[] := Length[
         Union[
          Flatten[
           Cases[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[WebsiteBuilder`Private`ex, 
                Blank[]]) :> WebsiteBuilder`Private`ex, Infinity], (
             "ExercisesCorrect" -> Pattern[WebsiteBuilder`Private`t, 
               Blank[]]) :> WebsiteBuilder`Private`t, Infinity]]]]; 
      EIWLExerciseSolutionsTotal = GetUserSolutionsTotal[]; 
      EIWLExerciseSolutionsTried = GetUserSolutionsTried[]; 
      EIWLExerciseSolutionsCorrect = GetUserSolutionsCorrect[]; 
      Clear[SetUserSolutionsTried]; SetUserSolutionsTried[
         Pattern[WebsiteBuilder`Private`value, 
          Blank[]]] := 
       Module[{WebsiteBuilder`Private`data, WebsiteBuilder`Private`tr}, 
         WebsiteBuilder`Private`data = Flatten[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[WebsiteBuilder`Private`ex, 
                Blank[]]) :> WebsiteBuilder`Private`ex, Infinity]]; 
         WebsiteBuilder`Private`tr = ReplaceAll[TaggingRules, 
            Options[
             EvaluationNotebook[], TaggingRules]]; 
         WebsiteBuilder`Private`tr = 
          DeleteCases[
           WebsiteBuilder`Private`tr, "EIWLExercises" -> Blank[], Infinity]; 
         AppendTo[
          WebsiteBuilder`Private`tr, 
           "EIWLExercises" -> {
            "ExercisesTotal" -> 
             ReplaceAll["ExercisesTotal", WebsiteBuilder`Private`data], 
             "ExercisesTried" -> Append[
               Flatten[
                Cases[
                WebsiteBuilder`Private`data, ("ExercisesTried" -> 
                  Pattern[WebsiteBuilder`Private`t, 
                    Blank[]]) :> WebsiteBuilder`Private`t, Infinity]], 
               WebsiteBuilder`Private`value], "ExercisesCorrect" -> 
             ReplaceAll["ExercisesCorrect", WebsiteBuilder`Private`data]}]; 
         SetOptions[
           EvaluationNotebook[], TaggingRules -> WebsiteBuilder`Private`tr]; 
         EIWLExerciseSolutionsTried = GetUserSolutionsTried[]; Null]; 
      Clear[SetUserSolutionsCorrect]; SetUserSolutionsCorrect[
         Pattern[WebsiteBuilder`Private`value, 
          Blank[]]] := 
       Module[{WebsiteBuilder`Private`data, WebsiteBuilder`Private`tr}, 
         WebsiteBuilder`Private`data = Flatten[
            Cases[
             Options[
              EvaluationNotebook[], TaggingRules], ("EIWLExercises" -> 
              Pattern[WebsiteBuilder`Private`ex, 
                Blank[]]) :> WebsiteBuilder`Private`ex, Infinity]]; 
         WebsiteBuilder`Private`tr = ReplaceAll[TaggingRules, 
            Options[
             EvaluationNotebook[], TaggingRules]]; 
         WebsiteBuilder`Private`tr = 
          DeleteCases[
           WebsiteBuilder`Private`tr, "EIWLExercises" -> Blank[], Infinity]; 
         AppendTo[
          WebsiteBuilder`Private`tr, 
           "EIWLExercises" -> {
            "ExercisesTotal" -> 
             ReplaceAll["ExercisesTotal", WebsiteBuilder`Private`data], 
             "ExercisesTried" -> 
             ReplaceAll["ExercisesTried", WebsiteBuilder`Private`data], 
             "ExercisesCorrect" -> Append[
               Flatten[
                Cases[
                WebsiteBuilder`Private`data, ("ExercisesCorrect" -> 
                  Pattern[WebsiteBuilder`Private`t, 
                    Blank[]]) :> WebsiteBuilder`Private`t, Infinity]], 
               WebsiteBuilder`Private`value]}]; SetOptions[
           EvaluationNotebook[], TaggingRules -> WebsiteBuilder`Private`tr]; 
         EIWLExerciseSolutionsCorrect = GetUserSolutionsCorrect[]; Null]; 
      Clear[WebsiteBuilder`Private`GetCurrentTallyCell]; 
      GetCurrentTallyCell[] := Module[{}, 
         With[{
          WebsiteBuilder`Private`solutionsTried = GetUserSolutionsTried[], 
           WebsiteBuilder`Private`solutionsTotal = GetUserSolutionsTotal[], 
           WebsiteBuilder`Private`solutionsCorrect = 
           GetUserSolutionsCorrect[]}, 
          Cell[
           BoxData[
            PaneBox[
             TemplateBox[{
               StyleBox[
               "COMPLETED\[ThickSpace]\[ThickSpace]", 
                "DockedCellCompletedExerciseText"], 
               StyleBox[
               WebsiteBuilder`Private`solutionsTried, 
                "DockedCellCompletedExerciseText"], 
               StyleBox["/", "DockedCellSolutionDivider"], 
               StyleBox[
               WebsiteBuilder`Private`solutionsTotal, 
                "DockedCellCompletedExerciseText"], 
               StyleBox[
               "\[ThinSpace]|\[ThinSpace]", "DockedCellSolutionDivider"], 
               StyleBox[
               WebsiteBuilder`Private`solutionsCorrect, 
                "DockedCellCorrectExerciseText"], 
               StyleBox[
               "\[ThickSpace]\[ThickSpace]CORRECT", 
                "DockedCellCorrectExerciseText"]}, "RowDefault"], Alignment -> 
             Right, ImageSize -> Full]], "Output", TextAlignment -> Right, 
           CellFrame -> 1, CellMargins -> {{0, 0}, {10, 0}}, 
           CellFrameMargins -> {{14, 24}, {4, 7}}, CellFrameColor -> 
           RGBColor[1, 0.95686, 0.87843], MenuSortingValue -> 10000, 
           Background -> RGBColor[1, 0.95686, 0.87843], CellTags -> 
           "SolutionTallyCell"]]])]], "Output", CellMargins -> 0, 
   CellFrameMargins -> {{0, 24}, {3, 6}}, Background -> 
   RGBColor[0.97647, 0.48235, 0], CellFrame -> 1, CellFrameColor -> 
   RGBColor[0.97647, 0.48235, 0]]},
TaggingRules->{
 "EIWLExercises" -> {
   "ExercisesTotal" -> "ExercisesTotal", 
    "ExercisesTried" -> {
     "32.1", "32.1", "32.2", "32.3", "32.4", "32.5", "32.6", "32.6", "32.7", 
      "32.8", "32.2", "32.1"}, 
    "ExercisesCorrect" -> {
     "ExercisesCorrect", "32.1", "32.2", "32.3", "32.4", "32.5", "32.6", 
      "32.6", "32.7", "32.8", "32.2", "32.1"}}},
CellContext->CellGroup,
ShowCellTags->False,
FrontEndVersion->"13.2 for Linux ARM (64-bit) (February 23, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Style Environments", "Section"], 
      Cell[
       StyleData[All, "Working"]], 
      Cell[
       StyleData[All, "Printout"], 
       PrintingOptions -> {
        "PageSize" -> {504, 720}, "PrintRegistrationMarks" -> True}, 
       Magnification -> 0.6]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Custom Styles", "Section"], 
      Cell[
       StyleData["Notebook"], ShowCellBracket -> Automatic, CreateCellID -> 
       True, CellContext -> Notebook, CellLabelAutoDelete -> False, 
       DefaultNewCellStyle -> "Input", ShowSyntaxStyles -> True, 
       MenuSortingValue -> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Title"], CellMargins -> {{64, Inherited}, {50, 72}}, 
          MenuCommandKey :> None, FontFamily -> "Verdana", FontSize -> 42, 
          FontWeight -> "Bold", FontColor -> GrayLevel[0.4]], 
         Cell[
          StyleData["Title", "Printout"], 
          CellMargins -> {{64, Inherited}, {50, 72}}]}, Closed]], 
      Cell[
       StyleData["Chapter"], MenuCommandKey :> None], 
      Cell[
       StyleData["Subchapter"], MenuCommandKey :> None], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Section"], CellFrame -> {{0, 0}, {0, 0}}, CellDingbat -> 
          Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[0.90196, 0.41176, 0.027451], FontFamily -> "Courier", 
              FontSize -> 36, FontWeight -> Plain]], "SectionNumber"], 
          CellMargins -> {{96, Inherited}, {12, 64}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[0.90196, 0.41176, 0.027451], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["Section", "Printout"], 
          CellMargins -> {{96, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionDoubleDigit"], CellFrame -> {{0, 0}, {0, 0}}, 
          CellDingbat -> Cell[
            TextData[
             CounterBox["Section"], 
             StyleBox[
             "|\[NegativeThinSpace]", FontColor -> 
              RGBColor[0.90196, 0.41176, 0.027451], FontFamily -> "Courier", 
              FontSize -> 36, FontWeight -> Plain]], "SectionNumber"], 
          CellMargins -> {{112, Inherited}, {12, 64}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[0.90196, 0.41176, 0.027451], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionDoubleDigit", "Printout"], 
          CellMargins -> {{112, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNumber"], CellBaseline -> Baseline, FontFamily -> 
          "Source Sans Pro Semibold", FontSize -> 26, FontColor -> 
          RGBColor[0.90196, 0.41176, 0.027451]], 
         Cell[
          StyleData["SectionNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionInline"], FontFamily -> 
          "Source Sans Pro Semibold", FontColor -> 
          RGBColor[0.90196, 0.41176, 0.027451]], 
         Cell[
          StyleData["SectionInline", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["SectionNoDingbat"], 
          CellMargins -> {{64, Inherited}, {12, 64}}, Evaluatable -> True, 
          CellGroupingRules -> {"SectionGrouping", 60}, PageBreakAbove -> 
          True, ShowCellLabel -> False, 
          CellFrameLabelMargins -> {{2, Inherited}, {Inherited, Inherited}}, 
          CounterIncrements -> "Section", 
          CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
            "Exercise", 0}}, FontFamily -> "Source Sans Pro Semibold", 
          FontSize -> 26, FontSlant -> "Plain", FontColor -> 
          RGBColor[0.90196, 0.41176, 0.027451], 
          InterpretationBoxOptions -> {Editable -> True}], 
         Cell[
          StyleData["SectionNoDingbat", "Printout"], 
          CellMargins -> {{64, Inherited}, {12, 2}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Exercise"], CellDingbat -> Cell[
            TextData[{"  ", 
              CounterBox["Section"], ".", 
              CounterBox["Exercise"]}], "ExerciseNumber", FontColor -> 
            RGBColor[0.90196, 0.41176, 0.027451]], ShowCellBracket -> False, 
          ShowGroupOpener -> False, CellMargins -> {{86, 10}, {4, 18}}, 
          CellGroupingRules -> "InputGrouping", CounterIncrements -> 
          "Exercise", MenuSortingValue -> 10020, MenuCommandKey :> "2", 
          FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
          "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["Exercise", "Printout"], ShowGroupOpener -> False, 
          CellMargins -> {{110, Inherited}, {4, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseNumber"], FontFamily -> "Source Sans Pro", 
          FontSize -> 16, FontWeight -> "Bold", FontColor -> GrayLevel[0.25]], 
         Cell[
          StyleData["ExerciseNumber", "Printout"]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["ExerciseInput", StyleDefinitions -> StyleData["Input"]], 
          CellMargins -> {{55, 30}, {4, 7}}, 
          GeneratedCellStyles -> {"Output" -> "ExerciseOutput"}, 
          ShowCellLabel -> False, 
          CellFrameLabels -> {{None, None}, {None, None}}, SpanMaxSize -> 1, 
          FontSize -> 14], 
         Cell[
          StyleData["ExerciseInput", "Printout"], 
          CellMargins -> {{88, 10}, {4, 7}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData[
          "ExerciseOutput", StyleDefinitions -> StyleData["Output"]], 
          CellMargins -> {{55, 15}, {0, 6}}, CellGroupingRules -> 
          "OutputGrouping", ShowCellLabel -> False, FontSize -> 14], 
         Cell[
          StyleData["ExerciseOutput", "Printout"], 
          CellMargins -> {{88, 10}, {10, 4}}]}, Closed]], 
      Cell[
       StyleData["ExerciseExpectedResult"], ShowCellBracket -> False, 
       ShowGroupOpener -> False, CellMargins -> {{65, 40}, {1, 14}}, 
       CellGroupingRules -> "InputGrouping", CounterIncrements -> "Exercise", 
       MenuSortingValue -> 10000, FontFamily -> "Source Sans Pro", FontSize -> 
       12, FontWeight -> "Plain", FontSlant -> "Plain"], 
      Cell[
       StyleData["ExerciseNumberColor"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> "Bold", 
       FontColor -> RGBColor[0.90196, 0.41176, 0.027451]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Picture"], CellMargins -> {{66, 10}, {10, 10}}, 
          CellGroupingRules -> "GraphicsGrouping", StyleMenuListing -> None], 
         
         Cell[
          StyleData["Picture", "Printout"], 
          CellMargins -> {{66, 10}, {8, 8}}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Tentative"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.3, 0.6, 0.7], "Thickness" -> 5}, Evaluatable -> 
          False, CellFrameMargins -> 4, StyleMenuListing -> None, Background -> 
          RGBColor[0.85, 0.95, 1]], 
         Cell[
          StyleData["Tentative", "Printout"], 
          CellElementSpacings -> {"CellMinHeight" -> 0.1}, CellOpen -> False, 
          CellFrameMargins -> 0, FontSize -> 0.1, Magnification -> 0.01]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["WebOnly"], 
          CellBracketOptions -> {
           "Color" -> RGBColor[0.91, 0.92, 0.9], "Thickness" -> 5}, 
          CellFrameMargins -> 4, StyleMenuListing -> None, Background -> 
          RGBColor[0.91, 0.92, 0.86]], 
         Cell[
          StyleData["WebOnly", "Printout"], 
          CellElementSpacings -> {"CellMinHeight" -> 0.1}, CellOpen -> False, 
          CellFrameMargins -> 0, FontSize -> 0.1, Magnification -> 0.01]}, 
        Closed]], 
      Cell[
       StyleData["Lockdown"], 
       CellBracketOptions -> {
        "Color" -> RGBColor[0.8, 0.5, 0.4], "Thickness" -> 3}, Evaluatable -> 
       False, StyleMenuListing -> None], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 0, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["ExpectedOutputNote"], Selectable -> False, FontFamily -> 
       "Source Sans Pro", FontColor -> GrayLevel[0.3]], 
      Cell[
       StyleData["EIWLTextLink"], LineBreakWithin -> False, 
       TemplateBoxOptions -> {DisplayFunction :> (TagBox[
           
           ButtonBox[#, Appearance -> None, ButtonData -> #2, 
            BaseStyle -> {
             "Hyperlink", FontWeight -> Bold, FontSize -> 16, FontFamily -> 
              "Source Sans Pro"}], 
           MouseAppearanceTag["LinkHand"]]& )}, 
       ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
      Cell[
       StyleData["CheckAnswerDividerCloud"], ShowCellBracket -> False, 
       CellMargins -> {{40, 40}, {3, 6}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellGroupingRules -> {"SectionGrouping", 40}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, TextAlignment -> Right], 
      Cell[
       StyleData["CodeSectionDividerCloud"], Selectable -> False, 
       ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 30}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellElementSpacings -> {"CellMinHeight" -> 6}, 
       CellGroupingRules -> {"SectionGrouping", -5}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, DefaultNewCellStyle -> "Input",
        FontSize -> 6, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["InlineCode"], SpanMaxSize -> 0, FontColor -> GrayLevel[0]], 
      
      Cell[
       StyleData["InlineCodeText"], SpanMaxSize -> 0, FontFamily -> 
       "Source Sans Pro"], 
      Cell[
       StyleData["Input"], CellMargins -> {{92, 20}, {5, 8}}, 
       CellFrameLabels -> {{None, 
          
          DynamicModuleBox[{
           EIWLExerciseCheck = Automatic, buttonLabel = 
            " CHECK MY SOLUTION "}, 
           DynamicBox[
            ToBoxes[
             If[
              TrueQ[EIWLExerciseCheck == Automatic], 
              MouseAppearance[
               Tooltip[
                Button[
                 Framed[
                  Panel[
                   Style[
                   buttonLabel, FontFamily -> "Source Sans Pro", FontSize -> 
                    10, FontColor -> RGBColor[0.95395, 0.30564, 0.028534]], 
                   Appearance -> None, Background -> GrayLevel[1], 
                   FrameMargins -> {{2, 2}, {0, 0}}, ImageMargins -> 0], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.95395, 0.30564, 0.028534]}, RoundingRadius -> 
                  3], 
                 
                 Block[{usersCell, solutionResult, exerciseNumber, 
                   exerciseSwitchResult}, exerciseNumber = If[
                    TrueQ[CurrentValue[{"CounterValue", "WebOnly"}] == 1], 
                    "x", ""] <> If[False, ToString[
                    CurrentValue[{"CounterValue", "ChapterNumber"}]] <> ".", 
                    ""] <> ToString[
                    CurrentValue[{"CounterValue", "SectionNumber"}]] <> "." <> 
                    ToString[
                    CurrentValue[{"CounterValue", "ExerciseNumber"}]]; 
                  buttonLabel = Row[{" CHECKING ", 
                    ProgressIndicator[Appearance -> "Percolate"]}]; 
                  SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                  usersCell = NotebookRead[
                    InputNotebook[]]; If[
                    TrueQ[Length[
                    Flatten[{usersCell}]] == 1], solutionResult = ToExpression[
                    URLFetch[
                    CloudObject[
                    "https://www.wolframcloud.com/obj/online-courses/grader/\
api/exercise_grader/api/check"], Method -> "POST", 
                    "Parameters" -> {
                    "exNum" -> exerciseNumber, "answer" -> 
                    ToString[
                    usersCell, InputForm, CharacterEncoding -> "ASCII"], "id" -> 
                    ToString[$WolframID], "uuid" -> ToString[$WolframUUID], 
                    "course" -> 
                    "an-elementary-introduction-to-the-wolfram-language"}]]; 
                    If[
                    MemberQ[{"Pass", "Fail"}, 
                    solutionResult["Status"]], questionIndex = Last[
                    StringSplit[exerciseNumber, "."]]; 
                    correctQ = solutionResult["CorrectQ"]; 
                    databinPayload = <|
                    "id" -> ToString[$WolframID], "uuid" -> 
                    ToString[$WolframUUID], "date" -> 
                    DateString["ISODateTime"], "exNum" -> exerciseNumber, 
                    "questionIndex" -> questionIndex, "response" -> 
                    solutionResult|>; destination = URLExecute[
                    CloudObject[
                    "https://www.wolframcloud.com/obj/online-courses/an-\
elementary-introduction-to-the-wolfram-language/api/log/exercise"], {
                    "id" -> ToString[$WolframID], "uuid" -> 
                    ToString[$WolframUUID], "exNum" -> exerciseNumber, 
                    "correctQ" -> ToString[correctQ], "response" -> 
                    ExportString[
                    Map[ToString, solutionResult], "JSON", "Compact" -> 
                    True]}]]; 
                    SolutionResponseText[exerciseNumber] = 
                    SolutionResponseDetails[
                    solutionResult["Text"], 
                    solutionResult["CorrectQ"]]; exerciseSwitchResult = Switch[
                    solutionResult["CorrectQ"], True, 
                    EIWLExerciseCheck = True; 
                    SetUserSolutionsCorrect[exerciseNumber]; 
                    SetUserSolutionsTried[exerciseNumber]; Null, 
                    Blank[], EIWLExerciseCheck = False; 
                    SetUserSolutionsTried[exerciseNumber]], 
                    CloudSystem`CreateCloudDialog[
                    StyleBox[
                    "Select a cell to be checked.", Selectable -> False], 
                    WindowTitle -> " "]]], Appearance -> None, Evaluator -> 
                 Automatic, Method -> "Queued"], 
                "Click to check your solution.", TooltipDelay -> 0.15], 
               "LinkHand"], 
              If[
               TrueQ[EIWLExerciseCheck], 
               MouseAppearance[
                Button[
                 Framed[
                  Row[{
                    Panel[
                    Style[
                    ToExpression[
                    "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" \
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxFJADGKrbtYa \
RUMUpZzMcNnnQRWjMk5lf/vzDWggtYwCkgNiFDBAsPqCPFcBjcLURYkH0fRS \
HlZwE6gV7EATfvz98f3Pd6rEIBClncpMPZlJFaNGEd0QANRpOvM= \"], {{0, 20}, { 26, \
0}}, {0, 255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", \
Interleaving -> True, Magnification -> 1], Selectable->False], \
BaseStyle->\"ImageGraphics\", ImageSize->Magnification[1], ImageSizeRaw->{26, \
20}, PlotRange->{{0, 26}, {0, 20}}]\)"], Selectable -> False], Background -> 
                    RGBColor[0.14694, 0.70164, 0.16466], 
                    FrameMargins -> {{5, 5}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> None], 
                    Panel[
                    Style[
                    " CORRECT ", FontSize -> 10, FontColor -> 
                    RGBColor[0.14694, 0.70164, 0.16466], FontFamily -> 
                    "Source Sans Pro"], Background -> White, 
                    FrameMargins -> {{5, 5}, {0, 0}}, Appearance -> None]}], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.14694, 0.70164, 0.16466]}, FrameMargins -> 0, 
                  RoundingRadius -> 3], buttonLabel = " CHECK MY SOLUTION "; 
                 EIWLExerciseCheck = Automatic, Appearance -> None], 
                "LinkHand"], 
               MouseAppearance[
                Button[
                 Framed[
                  Row[{
                    Panel[
                    Style[
                    ToExpression[
                    "\!\(\* GraphicsBox[ TagBox[RasterBox[CompressedData[\" \
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBLECOU2VJahIzkCECxGJADGK/YtAZ \
RTRCb1W8PnhlYooDBYFSxJgAVPnvy7cPfrkogn65IEFsJmM3BKIeZggal1RD \
yNOOMOT7DyAiTzvlJlDoCwpDkvLYpDxFjSLyEAAHORZk \"], {{0, 20}, {22, 0}}, { 0, \
255}, ColorFunction->RGBColor], BoxForm`ImageTag[ \"Byte\", Interleaving -> \
True, Magnification -> 1], Selectable->False], BaseStyle->\"ImageGraphics\", \
ImageSize->Magnification[1], ImageSizeRaw->{22, 20}, PlotRange->{{0, 22}, {0, \
20}}]\)"], Selectable -> False], Background -> RGBColor[0.91826, 0, 0.17249], 
                    FrameMargins -> {{5, 5}, {0, 0}}, ImageMargins -> 0, 
                    Appearance -> None], 
                    Panel[
                    Style[
                    " TRY AGAIN ", FontSize -> 10, FontColor -> 
                    RGBColor[0.91826, 0, 0.17249], FontFamily -> 
                    "Source Sans Pro"], Background -> White, 
                    FrameMargins -> {{5, 5}, {0, 0}}, Appearance -> None]}], 
                  FrameStyle -> {
                    Thickness[Tiny], 
                    RGBColor[0.91826, 0, 0.17249]}, FrameMargins -> 0, 
                  RoundingRadius -> 3], buttonLabel = " CHECK MY SOLUTION "; 
                 EIWLExerciseCheck = Automatic, Appearance -> None], 
                "LinkHand"]]], StandardForm], 
            ImageSizeCache -> {109., {9., 16.}}], 
           DynamicModuleValues :> {}]}, {None, None}}, MenuSortingValue -> 
       10000, FontSize -> 15], 
      Cell[
       StyleData["Output"], Deletable -> True, ShowCellBracket -> True, 
       CellMargins -> {{92, 50}, {10, 5}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, CellEditDuplicate -> 
       True, GeneratedCell -> True, CellAutoOverwrite -> True, 
       LinebreakAdjustments -> {1, 2., 12., 1.25, 1.}, MenuSortingValue -> 
       None, FontSize -> 15], 
      Cell[
       StyleData["InputButtonCell", StyleDefinitions -> StyleData["Input"]], 
       StyleMenuListing -> None], 
      Cell[
       StyleData["Message"], 
       CellMargins -> {{77, Inherited}, {Inherited, Inherited}}], 
      Cell[
       StyleData["EmptyCell"], Editable -> False, Selectable -> False, 
       CellMargins -> {{0, 0}, {-2, 0}}, 
       CellElementSpacings -> {"CellMinHeight" -> 1}, MenuSortingValue -> 
       10000, FontSize -> 1], 
      Cell[
       StyleData["CellLabel"], MenuSortingValue -> 10000, FontColor -> 
       GrayLevel[0.6]], 
      Cell[
       StyleData["Link"], LineBreakWithin -> False, 
       TemplateBoxOptions -> {DisplayFunction :> (TagBox[
           
           ButtonBox[#, Appearance -> None, ButtonData -> #2, 
            BaseStyle -> {
             "Hyperlink", FontSize -> 15, FontFamily -> "Source Sans Pro"}], 
           MouseAppearanceTag["LinkHand"]]& )}, 
       ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
      Cell[
       StyleData["ExpectedOutputText"], FontFamily -> "Arial", FontSize -> 13,
        FontColor -> RGBColor[0.85791, 0.42638, 0.]], 
      Cell[
       StyleData["CodeSectionDividerCloud"], Selectable -> False, 
       ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 35}}, 
       CellBracketOptions -> {"OverlapContent" -> True}, 
       CellElementSpacings -> {"CellMinHeight" -> 6}, 
       CellGroupingRules -> {"SectionGrouping", -5}, 
       CellFrameMargins -> {{20, 20}, {2, 2}}, DefaultNewCellStyle -> 
       "EmptyCell", FontSize -> 6, Background -> GrayLevel[0.95]], 
      Cell[
       StyleData["DockedCellAuthorName"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontColor -> 
       RGBColor[1, 0.92941, 0.72157]], 
      Cell[
       StyleData["DockedCellSectionTitle"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 18, FontColor -> 
       GrayLevel[1]], 
      Cell[
       StyleData["DockedCellSecondCell"], CellFrame -> 1, 
       CellMargins -> {{0, 0}, {0, 0}}, 
       CellFrameMargins -> {{10, 10}, {10, 10}}, CellFrameColor -> 
       RGBColor[1, 0.95686, 0.87843], MenuSortingValue -> 10000, Background -> 
       RGBColor[1, 0.95686, 0.87843]], 
      Cell[
       StyleData["CompletedExerciseHeader"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
       GrayLevel[0.5]], 
      Cell[
       StyleData["DockedCellShareButton"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 13, FontColor -> 
       GrayLevel[1]], 
      Cell[
       StyleData["DockedCellLinksSections"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> RGBColor[0.97647, 0.48235, 0]], 
      Cell[
       StyleData["DockedCellLinksDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 18, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> RGBColor[0.97647, 0.48235, 0]], 
      Cell[
       StyleData["DockedCellSectionTitleDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 24, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[1]], 
      Cell[
       StyleData["SolutionTrue"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> RGBColor[0.12, 0.7, 0.22]], 
      Cell[
       StyleData["SolutionFalse"], MenuSortingValue -> 10000, FontFamily -> 
       "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain", FontSlant -> 
       "Plain", FontColor -> RGBColor[0.94, 0.08, 0.2]], 
      Cell[
       StyleData["SolutionResponseText"], ShowStringCharacters -> False, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> GrayLevel[1]], 
      Cell[
       StyleData["SolutionResponse"], ShowCellBracket -> False, 
       CellMargins -> {{24, 25}, {6, 0}}, 
       CellFrameMargins -> {{8, 0}, {0, 12}}, TextAlignment -> Right, 
       ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", 
       FontSize -> 12, FontWeight -> "Plain", FontSlant -> "Plain", 
       Background -> GrayLevel[1]], 
      Cell[
       StyleData["DockedCellCompletedExerciseText"], MenuSortingValue -> 
       10000, FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> 
       "Plain", FontSlant -> "Plain", FontColor -> GrayLevel[0.4]], 
      Cell[
       StyleData["DockedCellSolutionDivider"], MenuSortingValue -> 10000, 
       FontFamily -> "Courier", FontSize -> 16, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[0.6]], 
      Cell[
       StyleData["DockedCellCorrectExerciseText"], MenuSortingValue -> 10000, 
       FontFamily -> "Source Sans Pro", FontSize -> 12, FontWeight -> "Plain",
        FontSlant -> "Plain", FontColor -> RGBColor[0.12, 0.7, 0.22]], 
      Cell[
       StyleData["Text"], CellMargins -> {{55, 10}, {4, 18}}], 
      Cell[
       CellGroupData[{
         Cell["EIWL Cloud Link styles", "Subsubsection"], 
         Cell[
          StyleData["EIWLTextLink"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 16, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkExerciseNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkInlineCode"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkMoreExplore"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontWeight -> Bold, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkInlineCodeLink"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["EIWLTextLinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell["EIWL Cloud Link", "Subsubsection"], 
         Cell[
          StyleData["CodeLinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontWeight -> Bold, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 17, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["CodeLinkVocabularyTable3Column"], LineBreakWithin -> 
          False, TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkAnswer"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkCodeCaption"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontColor -> GrayLevel[0.6], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkExercise"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkExerciseNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkIndex"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkIndexSubentry"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkMoreExplore"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkQuestion"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 14, FontWeight -> Bold, FontColor -> 
                 GrayLevel[0], FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkTechNote"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontColor -> GrayLevel[0.25], 
                 FontFamily -> "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkText"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 16, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}], 
         Cell[
          StyleData["LinkVocabularyTable"], LineBreakWithin -> False, 
          TemplateBoxOptions -> {DisplayFunction :> (TagBox[
              
              ButtonBox[#, Appearance -> None, ButtonData -> #2, 
               BaseStyle -> {
                "Hyperlink", FontSize -> 13, FontFamily -> 
                 "Source Sans Pro"}], 
              MouseAppearanceTag["LinkHand"]]& )}, 
          ButtonBoxOptions -> {Appearance -> None, BaseStyle -> "Link"}]}, 
        Open]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "13.2 for Linux ARM (64-bit) (February 23, 2023)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"43278b6b-bd0e-43fa-a84e-955d9ee6a20f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Certification"->{
  Cell[6850, 207, 2201, 41, 49, "Exercise",ExpressionUUID->"b467cfd1-3a99-44fb-8bcd-7a6c530fe522",
   CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 2}, {"WebOnly", 0}},
   CellTags->"Certification"],
  Cell[9054, 250, 850, 25, 31, "ExerciseInput",ExpressionUUID->"c5de50a9-4f39-4941-ac22-536d1712a604",
   CellTags->"Certification"],
  Cell[11787, 347, 2265, 44, 49, "Exercise",ExpressionUUID->"d20e3fcc-6a95-48f1-88f0-b6de23e84dd0",
   CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 3}, {"WebOnly", 0}},
   CellTags->"Certification"],
  Cell[14732, 417, 2468, 68, 70, "Output",ExpressionUUID->"16d7738e-1ff0-4306-87de-c52bf70ab2e8",
   CellTags->"Certification"],
  Cell[18546, 541, 3553, 81, 121, "Exercise",ExpressionUUID->"2521909b-65c6-4f27-8c1c-331cbcfde384",
   CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 4}, {"WebOnly", 0}},
   CellTags->"Certification"],
  Cell[24026, 696, 2618, 55, 49, "Exercise",ExpressionUUID->"514c14c3-0fda-4a4f-81f2-b2f1862f4e35",
   CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 5}, {"WebOnly", 0}},
   CellTags->"Certification"],
  Cell[27324, 777, 47726, 1264, 70, "Output",ExpressionUUID->"711504ad-aacf-4b11-bfa2-a679c8f8a511",
   CellTags->"Certification"],
  Cell[79538, 2205, 2615, 55, 50, "Exercise",ExpressionUUID->"1db4016b-1c8b-4577-8137-64aadd5d8c2f",
   CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 7}, {"WebOnly", 0}},
   CellTags->"Certification"],
  Cell[82156, 2262, 1404, 43, 31, "ExerciseInput",ExpressionUUID->"be07ba89-5b9f-4826-b14f-b19e206832d3",
   CellTags->"Certification"],
  Cell[84240, 2331, 814, 13, 70, "Output",ExpressionUUID->"4cd37c48-f3e9-407a-a93e-752877c1cca2",
   CellTags->"Certification"]},
 "expected-output-heading"->{
  Cell[22102, 624, 692, 22, 32, "ExerciseExpectedResult",ExpressionUUID->"ea66b9d7-85aa-4ad7-b1eb-2f6c4b305109",
   CellTags->"expected-output-heading"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Certification", 148551, 3805},
 {"expected-output-heading", 150444, 3831}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[596, 21, 1820, 39, 46, "SmallText",ExpressionUUID->"7ccc2cf8-a749-4a4a-bd7c-c6862080e841"],
Cell[2419, 62, 707, 16, 43, "Exercise",ExpressionUUID->"cd7ebb87-83bf-4dc9-a8d5-2b9bbd3463db",
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 1}, {"WebOnly", 0}}],
Cell[3129, 80, 821, 24, 31, "ExerciseInput",ExpressionUUID->"6b06c35d-1d3a-4a2e-bd87-2b9c04fa66ae"],
Cell[CellGroupData[{
Cell[3975, 108, 652, 20, 32, "ExerciseExpectedResult",ExpressionUUID->"c26ccd3b-347d-46a0-ab0a-42b3c80cf2c5"],
Cell[4630, 130, 821, 23, 70, "Output",ExpressionUUID->"7af1f057-a83c-4612-9442-2d057f51f409"]
}, {1}]],
Cell[CellGroupData[{
Cell[5485, 158, 559, 19, 20, "Subsection",ExpressionUUID->"e0692397-66f8-4952-a93a-46e8a4415ddb"],
Cell[6047, 179, 479, 12, 38, "Input",ExpressionUUID->"d152e44f-0895-4ebb-96cf-780d3f6b8c2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6563, 196, 284, 9, 44, "CodeSectionDividerCloud",ExpressionUUID->"db681084-97ae-4ef7-a308-aa601ffd6804"],
Cell[6850, 207, 2201, 41, 49, "Exercise",ExpressionUUID->"b467cfd1-3a99-44fb-8bcd-7a6c530fe522",
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 2}, {"WebOnly", 0}},
 CellTags->"Certification"],
Cell[9054, 250, 850, 25, 31, "ExerciseInput",ExpressionUUID->"c5de50a9-4f39-4941-ac22-536d1712a604",
 CellTags->"Certification"],
Cell[9907, 277, 652, 20, 32, "ExerciseExpectedResult",ExpressionUUID->"ae07d4e6-8dac-487c-8139-dd4b5d80d105"],
Cell[CellGroupData[{
Cell[10584, 301, 559, 19, 20, "Subsection",ExpressionUUID->"fbffb517-8806-4608-a446-4395780f2b83"],
Cell[11146, 322, 305, 8, 38, "Input",ExpressionUUID->"0c0ee02f-fdb4-44d8-937c-565ea4f77b08"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11500, 336, 284, 9, 44, "CodeSectionDividerCloud",ExpressionUUID->"cfe92789-5d15-4ccb-93be-9ff14041a8fe"],
Cell[11787, 347, 2265, 44, 49, "Exercise",ExpressionUUID->"d20e3fcc-6a95-48f1-88f0-b6de23e84dd0",
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 3}, {"WebOnly", 0}},
 CellTags->"Certification"],
Cell[CellGroupData[{
Cell[14077, 395, 652, 20, 32, "ExerciseExpectedResult",ExpressionUUID->"b0a2e29f-41eb-4329-9ea5-1272dba7d972"],
Cell[14732, 417, 2468, 68, 70, "Output",ExpressionUUID->"16d7738e-1ff0-4306-87de-c52bf70ab2e8",
 CellTags->"Certification"]
}, {1}]],
Cell[CellGroupData[{
Cell[17234, 490, 559, 19, 20, "Subsection",ExpressionUUID->"6e726bdf-d94f-439a-9e68-26118bd33bd0"],
Cell[17796, 511, 414, 13, 38, "Input",ExpressionUUID->"1cf8bbad-0f91-4782-b1bd-9442c682e6f0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18259, 530, 284, 9, 44, "CodeSectionDividerCloud",ExpressionUUID->"1b9aae3f-7574-473c-bccd-bd7531d5bea0"],
Cell[18546, 541, 3553, 81, 121, "Exercise",ExpressionUUID->"2521909b-65c6-4f27-8c1c-331cbcfde384",
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 4}, {"WebOnly", 0}},
 CellTags->"Certification"],
Cell[22102, 624, 692, 22, 32, "ExerciseExpectedResult",ExpressionUUID->"ea66b9d7-85aa-4ad7-b1eb-2f6c4b305109",
 CellTags->"expected-output-heading"],
Cell[CellGroupData[{
Cell[22819, 650, 559, 19, 20, "Subsection",ExpressionUUID->"709295c6-e20e-48df-8f6e-6f629a6502aa"],
Cell[23381, 671, 309, 8, 38, "Input",ExpressionUUID->"4af91889-a8c5-4f20-b935-445a8f4cc57d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23739, 685, 284, 9, 44, "CodeSectionDividerCloud",ExpressionUUID->"571ae4da-d09d-4e56-914d-7dad727aa0c2"],
Cell[24026, 696, 2618, 55, 49, "Exercise",ExpressionUUID->"514c14c3-0fda-4a4f-81f2-b2f1862f4e35",
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 5}, {"WebOnly", 0}},
 CellTags->"Certification"],
Cell[CellGroupData[{
Cell[26669, 755, 652, 20, 32, "ExerciseExpectedResult",ExpressionUUID->"c6cb6378-d14d-4858-9c2a-4de6715741cd"],
Cell[27324, 777, 47726, 1264, 70, "Output",ExpressionUUID->"711504ad-aacf-4b11-bfa2-a679c8f8a511",
 CellTags->"Certification"]
}, {1}]],
Cell[CellGroupData[{
Cell[75084, 2046, 559, 19, 20, "Subsection",ExpressionUUID->"22f61ba1-2b73-4117-947e-aa5e0aee9a8d"],
Cell[75646, 2067, 239, 6, 38, "Input",ExpressionUUID->"b6457057-1674-41d7-90e3-cd620e90dd4c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75934, 2079, 284, 9, 44, "CodeSectionDividerCloud",ExpressionUUID->"2d6225e6-def6-4098-b9e1-98240471b8fb"],
Cell[76221, 2090, 996, 32, 43, "Exercise",ExpressionUUID->"3e95aead-4500-4f5c-a2c6-19ebd0329a95",
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 6}, {"WebOnly", 0}}],
Cell[CellGroupData[{
Cell[77242, 2126, 652, 20, 32, "ExerciseExpectedResult",ExpressionUUID->"687f8852-38b4-4f5b-95dc-397b6680bae5"],
Cell[77897, 2148, 377, 6, 70, "Output",ExpressionUUID->"26d1b44e-13cc-41ab-addd-ff7e32948e6e"]
}, {1}]],
Cell[CellGroupData[{
Cell[78308, 2159, 559, 19, 20, "Subsection",ExpressionUUID->"565e87cc-a827-4ace-ad71-16992ef4b291"],
Cell[78870, 2180, 332, 8, 38, "Input",ExpressionUUID->"f29cdf1c-388c-449b-adcf-73ff327406d9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79251, 2194, 284, 9, 44, "CodeSectionDividerCloud",ExpressionUUID->"86ba9d0a-40b8-40f5-9686-ce9c10b4f159"],
Cell[79538, 2205, 2615, 55, 50, "Exercise",ExpressionUUID->"1db4016b-1c8b-4577-8137-64aadd5d8c2f",
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 7}, {"WebOnly", 0}},
 CellTags->"Certification"],
Cell[82156, 2262, 1404, 43, 31, "ExerciseInput",ExpressionUUID->"be07ba89-5b9f-4826-b14f-b19e206832d3",
 CellTags->"Certification"],
Cell[CellGroupData[{
Cell[83585, 2309, 652, 20, 32, "ExerciseExpectedResult",ExpressionUUID->"ed812304-69e5-4beb-b1b1-05795fac37cf"],
Cell[84240, 2331, 814, 13, 70, "Output",ExpressionUUID->"4cd37c48-f3e9-407a-a93e-752877c1cca2",
 CellTags->"Certification"]
}, {1}]],
Cell[CellGroupData[{
Cell[85088, 2349, 559, 19, 20, "Subsection",ExpressionUUID->"3bc6a7ba-0793-4e9c-a570-f8639fc3bc43"],
Cell[85650, 2370, 231, 6, 38, "Input",ExpressionUUID->"674214ce-4fd1-4238-a0bf-0590b1ccec78"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85930, 2382, 284, 9, 44, "CodeSectionDividerCloud",ExpressionUUID->"b5257eaf-40a6-4599-9ffc-dc8a866541db"],
Cell[86217, 2393, 1086, 28, 45, "Exercise",ExpressionUUID->"eb906423-8325-482c-b934-3adac0c31a3b",
 CounterAssignments->{{"ChapterNumber", 0}, {"SectionNumber", 32}, {"ExerciseNumber", 8}, {"WebOnly", 0}}],
Cell[87306, 2423, 2280, 66, 31, "ExerciseInput",ExpressionUUID->"fe722d64-e4f1-49b4-9b9f-1fe831e0fe17"],
Cell[CellGroupData[{
Cell[89611, 2493, 652, 20, 32, "ExerciseExpectedResult",ExpressionUUID->"021d91ae-a91a-4380-bcc5-b0c140e9618e"],
Cell[90266, 2515, 6341, 183, 70, "Output",ExpressionUUID->"e5099325-cac9-41d6-9fce-c7fc342d53ac"]
}, {1}]],
Cell[CellGroupData[{
Cell[96641, 2703, 559, 19, 20, "Subsection",ExpressionUUID->"2ee63426-d0c9-4215-b0d8-1362442bc0ed"],
Cell[CellGroupData[{
Cell[97225, 2726, 304, 8, 38, "Input",ExpressionUUID->"0087c93c-8284-4853-87d4-311f68238710"],
Cell[97532, 2736, 362, 8, 28, "Message",ExpressionUUID->"bd84520b-28cb-4514-8e48-bcce335443bc",
 CellID->2022341969]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[97933, 2749, 284, 9, 44, "CodeSectionDividerCloud",ExpressionUUID->"6b3523ac-7476-4ef4-abd4-4720ebc05573"]
}
]
*)

(* End of internal cache information *)

